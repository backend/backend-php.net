<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="Backend-PHP">
  <file path="interfaces/Backend/Interfaces/RequestContextInterface.php" hash="e677cf61b5d7a029a9190136a2ca7594" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\RequestContextInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>RequestContextInterface</name>
      <full_name>\Backend\Interfaces\RequestContextInterface</full_name>
      <docblock line="16">
        <description>Class to define the context of a Request.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="33" package="Interfaces">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The request from which&#10;the context is derived." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="43" package="Interfaces">
        <name>getScheme</name>
        <full_name>getScheme</full_name>
        <docblock line="35">
          <description>Get the Request scheme.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/folder/index.php/path,
this will return http&lt;/p&gt;</long-description>
          <tag line="35" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="53" package="Interfaces">
        <name>getHost</name>
        <full_name>getHost</full_name>
        <docblock line="45">
          <description>Get the hostname of the Request.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/folder/index.php/path,
this will return backend-php.net&lt;/p&gt;</long-description>
          <tag line="45" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="63" package="Interfaces">
        <name>getFolder</name>
        <full_name>getFolder</full_name>
        <docblock line="55">
          <description>Get the folder of the Request.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/folder/index.php/path,
this will return /folder&lt;/p&gt;</long-description>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="73" package="Interfaces">
        <name>getLink</name>
        <full_name>getLink</full_name>
        <docblock line="65">
          <description>Get a link to the base site of the Request.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/folder/index.php/path,
this will return http://backend-php.net/&lt;/p&gt;</long-description>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/ConfigInterface.php" hash="d193b8df785a3cb2d1c2b5aebe85dea2" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\ConfigInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>ConfigInterface</name>
      <full_name>\Backend\Interfaces\ConfigInterface</full_name>
      <extends>\Iterator</extends>
      <docblock line="16">
        <description>Class to abstract config file operations.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="34" package="Interfaces">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="27">
          <description>Magic function that returns the config values on request</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The name of the property being accessed" type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="return" description="The value of the property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$propertyName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="46" package="Interfaces">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="36">
          <description>Get the named config value.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The name of the config value. Omit to get the whole&#10;config." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="The default value to return should the value not&#10;be found." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="36" name="return" description="The config setting" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$name</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="46">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="56" package="Interfaces">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="48">
          <description>Magic function that sets the config value on request</description>
          <long-description></long-description>
          <tag line="48" name="param" description="The name of the config value." type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="The value of the setting." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="return" description="The value of the property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$propertyName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="66" package="Interfaces">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="58">
          <description>Set a named config value.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="The name of the config value." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="param" description="The value of the setting." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="58" name="return" description="The current config." type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="66">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="76" package="Interfaces">
        <name>setAll</name>
        <full_name>setAll</full_name>
        <docblock line="68">
          <description>Set all of the config values.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="The configuration, either as an array of values&#10;or the name of the config file." type="mixed" variable="$config">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="return" description="The current config." type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="85" package="Interfaces">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="78">
          <description>Check if the config has the specified value.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="The name of the config value to check." type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="78" name="return" description="If the config has the specified value." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/ControllerInterface.php" hash="88e4fbff47d9c87fb840b6d25018ce54" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\ControllerInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>ControllerInterface</name>
      <full_name>\Backend\Interfaces\ControllerInterface</full_name>
      <docblock line="16">
        <description>Interface for Controllers that serve as the connection between Models and Views.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="35" package="Interfaces">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="27">
          <description>Set the Request for the Controller.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The request for the&#10;Controller." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="27" name="return" description="The current object." type="\Backend\Interfaces\ControllerInterface">
            <type by_reference="false">\Backend\Interfaces\ControllerInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="42" package="Interfaces">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="37">
          <description>Get the request associated with the Controller.</description>
          <long-description></long-description>
          <tag line="37" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/ModelInterface.php" hash="addd05abb5a9c268f26b30781009aace" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\ModelInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>ModelInterface</name>
      <full_name>\Backend\Interfaces\ModelInterface</full_name>
      <docblock line="16">
        <description>The base Model interface</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="36" package="Interfaces">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="27">
          <description>Populate the Model with the specified properties.</description>
          <long-description>&lt;p&gt;The function will use any &lt;code&gt;set&lt;/code&gt; functions defined.&lt;/p&gt;</long-description>
          <tag line="27" name="param" description="An array containing the properties for the model" type="array" variable="$properties">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="return" description="The object that was populated" type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="43" package="Interfaces">
        <name>getProperties</name>
        <full_name>getProperties</full_name>
        <docblock line="38">
          <description>Get the properties of the Model</description>
          <long-description></long-description>
          <tag line="38" name="return" description="The properties of the model as a key / value array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/FormatterInterface.php" hash="2813978c5091d64d2a5c5ea7351884a4" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\FormatterInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>FormatterInterface</name>
      <full_name>\Backend\Interfaces\FormatterInterface</full_name>
      <docblock line="16">
        <description>Transform results into the specified format.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="34" package="Interfaces">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="27">
          <description>Output the response to the client.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The result to transform." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="27" name="return" description="" type="\Backend\Interfaces\ResponseInterface;">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface;</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/UrlGeneratorInterface.php" hash="64824279da59dfab5902bc8b39ec0bbc" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\UrlGeneratorInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>UrlGeneratorInterface</name>
      <full_name>\Backend\Interfaces\UrlGeneratorInterface</full_name>
      <docblock line="16">
        <description>Class to generate URL's using routing information.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="35" package="Interfaces">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The context of&#10;the current request." type="\Backend\Interfaces\RequestContextInterface" variable="$context">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
          <tag line="27" name="param" description="A config object&#10;containing route definitions." type="\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$context</name>
          <default></default>
          <type>\Backend\Interfaces\RequestContextInterface</type>
        </argument>
        <argument line="35">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="44" package="Interfaces">
        <name>generate</name>
        <full_name>generate</full_name>
        <docblock line="37">
          <description>Generate a link for the given Route.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="The name of the route to generate a link for." type="string" variable="$routeName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$routeName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="53" package="Interfaces">
        <name>setContext</name>
        <full_name>setContext</full_name>
        <docblock line="46">
          <description>Set the context.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="The context object to set." type="\Backend\Interfaces\RequestContextInterface" variable="$context">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
          <tag line="46" name="return" description="The current object" type="\Backend\Interfaces\URlGeneratorInterface">
            <type by_reference="false">\Backend\Interfaces\URlGeneratorInterface</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$context</name>
          <default></default>
          <type>\Backend\Interfaces\RequestContextInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="60" package="Interfaces">
        <name>getContext</name>
        <full_name>getContext</full_name>
        <docblock line="55">
          <description>Get the context.</description>
          <long-description></long-description>
          <tag line="55" name="return" description="The context object." type="\Backend\Interfaces\RequestContextInterface">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="69" package="Interfaces">
        <name>setConfig</name>
        <full_name>setConfig</full_name>
        <docblock line="62">
          <description>Set the Config.</description>
          <long-description></long-description>
          <tag line="62" name="param" description="The config object to set." type="\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="62" name="return" description="The current object" type="\Backend\Interfaces\URlGeneratorInterface">
            <type by_reference="false">\Backend\Interfaces\URlGeneratorInterface</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="76" package="Interfaces">
        <name>getConfig</name>
        <full_name>getConfig</full_name>
        <docblock line="71">
          <description>Get the Config.</description>
          <long-description></long-description>
          <tag line="71" name="return" description="$config The config object." type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/FlashInterface.php" hash="21d2641f57ad8c02817cd82c97913751" package="Interfaces">
    <docblock line="2">
      <description>File defining \Backend\Interfaces\FlashInterface</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="28" package="Modules">
      <name>FlashInterface</name>
      <full_name>\Backend\Interfaces\FlashInterface</full_name>
      <extends>\Backend\Interfaces\SessionInterface</extends>
      <docblock line="16">
        <description>Interface for classes that do Flash Session management.</description>
        <long-description>&lt;p&gt;A flash session differs from normal sessions in that the values being stored
are deleted once fetched from the store.&lt;/p&gt;</long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Modules"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="40" package="Modules">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="30">
          <description>Get a flash session value.</description>
          <long-description>&lt;p&gt;The value will be removed after retreiving it.&lt;/p&gt;</long-description>
          <tag line="30" name="param" description="The name of the value to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="param" description="If the value should be removed or not." type="boolean" variable="$keep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="30" name="return" description="The value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="40">
          <name>$keep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/BindingFactoryInterface.php" hash="660c155f9dee3bb6659ef741fa882a31" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\BindingFactoryInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>BindingFactoryInterface</name>
      <full_name>\Backend\Interfaces\BindingFactoryInterface</full_name>
      <docblock line="16">
        <description>Class to create bindings.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="33" package="Interfaces">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The bindings config." type="\Backend\Interfaces\Backend\Interfaces\ConfigInterface" variable="$bindings">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="27" name="param" description="The connections config." type="\Backend\Interfaces\Backend\Interfaces\ConfigInterface" variable="$connections">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$bindings</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
        <argument line="33">
          <name>$connections</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="42" package="Interfaces">
        <name>build</name>
        <full_name>build</full_name>
        <docblock line="35">
          <description>Convert a string to a callback.</description>
          <long-description></long-description>
          <tag line="35" name="param" description="The name of the model to get the Binding for." type="string" variable="$modelName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="" type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$modelName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="49" package="Interfaces">
        <name>getBindings</name>
        <full_name>getBindings</full_name>
        <docblock line="44">
          <description>Get the Bindings Configuration.</description>
          <long-description></long-description>
          <tag line="44" name="return" description="" type="\Backend\Interfaces\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="58" package="Interfaces">
        <name>setBindings</name>
        <full_name>setBindings</full_name>
        <docblock line="51">
          <description>Set the Bindings Configuration.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="" type="\Backend\Interfaces\Backend\Interfaces\ConfigInterface" variable="$bindings">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="51" name="return" description="" type="\Backend\Interfaces\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Interfaces\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$bindings</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="65" package="Interfaces">
        <name>getBinding</name>
        <full_name>getBinding</full_name>
        <docblock line="60">
          <description>Get the specified Binding.</description>
          <long-description></long-description>
          <tag line="60" name="return" description="The Binding or null if it doesn't exist." type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="74" package="Interfaces">
        <name>setBinding</name>
        <full_name>setBinding</full_name>
        <docblock line="67">
          <description>Set the values of the specified Binding.</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The Binding described as an array." type="array" variable="$binding">
            <type by_reference="false">array</type>
          </tag>
          <tag line="67" name="return" description="" type="\Backend\Interfaces\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Interfaces\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="74">
          <name>$binding</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="81" package="Interfaces">
        <name>getConnections</name>
        <full_name>getConnections</full_name>
        <docblock line="76">
          <description>Get the Connections Configuration.</description>
          <long-description></long-description>
          <tag line="76" name="return" description="" type="\Backend\Interfaces\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="90" package="Interfaces">
        <name>setConnections</name>
        <full_name>setConnections</full_name>
        <docblock line="83">
          <description>Set the Connections Configuration.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="" type="\Backend\Interfaces\Backend\Interfaces\ConfigInterface" variable="$connections">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="83" name="return" description="" type="\Backend\Interfaces\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Interfaces\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$connections</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="97" package="Interfaces">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
        <docblock line="92">
          <description>Get the specified Connection.</description>
          <long-description></long-description>
          <tag line="92" name="return" description="The Connection or null if it doesn't exist." type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="106" package="Interfaces">
        <name>setConnection</name>
        <full_name>setConnection</full_name>
        <docblock line="99">
          <description>Set the values of the specified Connection.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="The Connection described as an array." type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="return" description="" type="\Backend\Interfaces\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Interfaces\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="106">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="27" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $bindings in __construct()</error>
      <error line="27" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $connections in __construct()</error>
      <error line="51" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $bindings in setBindings()</error>
      <error line="60" code="50015">Argument $name is missing from the Docblock of getBinding()</error>
      <error line="67" code="50014">Name of argument $name does not match with the DocBlock's name $binding in setBinding()</error>
      <error line="67" code="50015">Argument $binding is missing from the Docblock of setBinding()</error>
      <error line="83" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $connections in setConnections()</error>
      <error line="92" code="50015">Argument $name is missing from the Docblock of getConnection()</error>
      <error line="99" code="50014">Name of argument $name does not match with the DocBlock's name $connection in setConnection()</error>
      <error line="99" code="50015">Argument $connection is missing from the Docblock of setConnection()</error>
    </parse_markers>
  </file>
  <file path="interfaces/Backend/Interfaces/CallbackInterface.php" hash="833fedaa90a71905e9f44d66751c9bf4" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\CallbackInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="26" package="Interfaces">
      <name>CallbackInterface</name>
      <full_name>\Backend\Interfaces\CallbackInterface</full_name>
      <docblock line="16">
        <description>Callable functions or object\class and method pairs to be executed by the
Application.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="35" package="Interfaces">
        <name>setClass</name>
        <full_name>setClass</full_name>
        <docblock line="28">
          <description>Set the class name for a static method call.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="The name of the class of the callback." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="42" package="Interfaces">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <docblock line="37">
          <description>Get the class name of the static method call.</description>
          <long-description></long-description>
          <tag line="37" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="51" package="Interfaces">
        <name>setObject</name>
        <full_name>setObject</full_name>
        <docblock line="44">
          <description>Set the object for a method call.</description>
          <long-description></long-description>
          <tag line="44" name="param" description="The object of the callback." type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="44" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="58" package="Interfaces">
        <name>getObject</name>
        <full_name>getObject</full_name>
        <docblock line="53">
          <description>Get the object of the method call.</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="67" package="Interfaces">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="60">
          <description>Set the method name for a method call.</description>
          <long-description></long-description>
          <tag line="60" name="param" description="The method name of the callback." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="74" package="Interfaces">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="69">
          <description>Get the method name of the method call.</description>
          <long-description></long-description>
          <tag line="69" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="83" package="Interfaces">
        <name>setFunction</name>
        <full_name>setFunction</full_name>
        <docblock line="76">
          <description>Set the function as the callback.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="The function." type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="76" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="90" package="Interfaces">
        <name>getFunction</name>
        <full_name>getFunction</full_name>
        <docblock line="85">
          <description>Get the callback function.</description>
          <long-description></long-description>
          <tag line="85" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="99" package="Interfaces">
        <name>setArguments</name>
        <full_name>setArguments</full_name>
        <docblock line="92">
          <description>Set the arguments for the callback.</description>
          <long-description></long-description>
          <tag line="92" name="param" description="The arguments for the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="92" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="106" package="Interfaces">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <docblock line="101">
          <description>Get the arguments of the callback.</description>
          <long-description></long-description>
          <tag line="101" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="115" package="Interfaces">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="108">
          <description>Execute the callback.</description>
          <long-description></long-description>
          <tag line="108" name="param" description="The arguments with which to execute the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="108" name="return" description="The result of the callback." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$arguments</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="122" package="Interfaces">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="117">
          <description>Convert the callback to a string.</description>
          <long-description></long-description>
          <tag line="117" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/ParserInterface.php" hash="6db0374ae1d56c1ed1cfeaa4e595f374" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\ParserInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>ParserInterface</name>
      <full_name>\Backend\Interfaces\ParserInterface</full_name>
      <docblock line="16">
        <description>A dependency injection container that manages dependencies.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="34" package="Interfaces">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="27">
          <description>Parse the string.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The string to be parsed." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="return" description="The parsed string" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/BindingInterface.php" hash="5a65efe5eae9178d8902a8d721040f83" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Interfaces\BindingInterface</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="35" package="Modules\Bindings">
      <name>BindingInterface</name>
      <full_name>\Backend\Interfaces\BindingInterface</full_name>
      <docblock line="17">
        <description>Interface for Data Bindings</description>
        <long-description>&lt;p&gt;Bindings act as a transport layer which can be used to perform CRUD actions
on a resource. It's typically used by Models to maintain their state on an
outside resource.&lt;/p&gt;

&lt;p&gt;They also act as Table Gateways
(http://www.martinfowler.com/eaaCatalog/tableDataGateway.html) to keep all
data source related functionality out of Models.&lt;/p&gt;</long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Modules"/>
        <tag line="17" name="subpackage" description="Bindings"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="44" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="37" name="param" description="The connection settings for the Binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="throws" description="" type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="56" package="Modules\Bindings">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="46">
          <description>Find multiple instances of the resource.</description>
          <long-description>&lt;p&gt;Don't specify any criteria to retrieve a full list of instances.&lt;/p&gt;</long-description>
          <tag line="46" name="param" description="An array of conditions on which to filter the list." type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="param" description="An array of options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="46" name="return" description="An array of representations of the resource." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="58">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="69" package="Modules\Bindings">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="61">
          <description>Create an instance on the source, and return the instance.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="The data to create a new resource." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="return" description="The created model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="61" name="throws" description="When the resource can't be created." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="80" package="Modules\Bindings">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="71">
          <description>Read and return the single, specified instance of the resource.</description>
          <long-description></long-description>
          <tag line="71" name="param" description="The unique identifier for the instance, or an&#10;array containing criteria on which to search for the resource." type="mixed" variable="$identifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="return" description="The identified model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="71" name="throws" description="When the resource can't be found." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="94" package="Modules\Bindings">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="82">
          <description>Refresh the specified instance on the source.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to update, and receives data from
the source.&lt;/p&gt;</long-description>
          <tag line="82" name="param" description="&amp;$model The model to refresh.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="82" name="return" description="If the refresh was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="82" name="throws" description="When the resource can't be refreshed." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="108" package="Modules\Bindings">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="96">
          <description>Update the specified instance of the resource.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to refresh, and sends data to
the source.&lt;/p&gt;</long-description>
          <tag line="96" name="param" description="&amp;$model The model to update.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="96" name="return" description="If the update was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="96" name="throws" description="When the resource can't be updated." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="118" package="Modules\Bindings">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="110">
          <description>Delete the specified instance of the resource</description>
          <long-description></long-description>
          <tag line="110" name="param" description="&amp;$model The model to delete" type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="110" name="return" description="If the deletion was succesful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="110" name="throws" description="When the resource can't be deleted." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/LoggerInterface.php" hash="1148b7d7eedcf4eb0ebf7251c577b8c1" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\LoggerInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;

&lt;p&gt;Copied from the Symfony 2 Project.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      <tag line="2" name="copyright" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="https://raw.github.com/symfony/HttpKernel/master/Log/LoggerInterface.php" link="https://raw.github.com/symfony/HttpKernel/master/Log/LoggerInterface.php"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="27" package="Interfaces">
      <name>LoggerInterface</name>
      <full_name>\Backend\Interfaces\LoggerInterface</full_name>
      <docblock line="18">
        <description>Logging interface through which messages can be logged.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Interfaces"/>
        <tag line="18" name="author" description="Fabien Potencier &lt;fabien@symfony.com&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="https://raw.github.com/symfony/HttpKernel/master/Log/LoggerInterface.php" link="https://raw.github.com/symfony/HttpKernel/master/Log/LoggerInterface.php"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="37" package="Interfaces">
        <name>emerg</name>
        <full_name>emerg</full_name>
        <docblock line="29">
          <description>Adds a log record at the EMERGENCY level.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="29" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="47" package="Interfaces">
        <name>alert</name>
        <full_name>alert</full_name>
        <docblock line="39">
          <description>Adds a log record at the ALERT level.</description>
          <long-description></long-description>
          <tag line="39" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="57" package="Interfaces">
        <name>crit</name>
        <full_name>crit</full_name>
        <docblock line="49">
          <description>Adds a log record at the CRITICAL level.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="67" package="Interfaces">
        <name>err</name>
        <full_name>err</full_name>
        <docblock line="59">
          <description>Adds a log record at the ERROR level.</description>
          <long-description></long-description>
          <tag line="59" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="77" package="Interfaces">
        <name>warn</name>
        <full_name>warn</full_name>
        <docblock line="69">
          <description>Adds a log record at the WARNING level.</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="69" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="77">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="87" package="Interfaces">
        <name>notice</name>
        <full_name>notice</full_name>
        <docblock line="79">
          <description>Adds a log record at the NOTICE level.</description>
          <long-description></long-description>
          <tag line="79" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="87">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="97" package="Interfaces">
        <name>info</name>
        <full_name>info</full_name>
        <docblock line="89">
          <description>Adds a log record at the INFO level.</description>
          <long-description></long-description>
          <tag line="89" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="89" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="89" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="107" package="Interfaces">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="99">
          <description>Adds a log record at the DEBUG level.</description>
          <long-description></long-description>
          <tag line="99" name="param" description="The log message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="The log context" type="array" variable="$context">
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="return" description="Whether the record has been processed" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$message</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$context</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/SessionInterface.php" hash="1a4b1e95129db1cdb68b3dc9d0dbe22d" package="Interfaces">
    <docblock line="2">
      <description>File defining \Backend\Interfaces\SessionInterface</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Modules">
      <name>SessionInterface</name>
      <full_name>\Backend\Interfaces\SessionInterface</full_name>
      <extends>\Iterator</extends>
      <docblock line="16">
        <description>Interface for classes that do Session management.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Modules"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="34" package="Modules">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="27">
          <description>Get a session value.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The name of the value to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="return" description="The value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="44" package="Modules">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="36">
          <description>Set a session value.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The name of the value to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="The value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="36" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="44">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="53" package="Modules">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="46">
          <description>Remove a session value.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="The name of the value to remove." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="62" package="Modules">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="55">
          <description>Magic function to get a session value.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="The name of the value to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="The value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="72" package="Modules">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="64">
          <description>Magic function to set a session value.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="The name of the value to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="The value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="64" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="81" package="Modules">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="74">
          <description>Close the session.</description>
          <long-description>&lt;p&gt;This will destroy the session and it's associated data.&lt;/p&gt;</long-description>
          <tag line="74" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/ResponseInterface.php" hash="7cc48340d6f0f9f995b52f9627aee543" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\ResponseInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>ResponseInterface</name>
      <full_name>\Backend\Interfaces\ResponseInterface</full_name>
      <docblock line="16">
        <description>The response that will be sent back to the client.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="34" package="Interfaces">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>The constructor for the Response class</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The body for the response" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="The status code for the response" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="27" name="param" description="The headers for the response" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$body</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="34">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="34">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="41" package="Interfaces">
        <name>getStatusCode</name>
        <full_name>getStatusCode</full_name>
        <docblock line="36">
          <description>Return the current status code for the Response</description>
          <long-description></long-description>
          <tag line="36" name="return" description="The status code" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="50" package="Interfaces">
        <name>setStatusCode</name>
        <full_name>setStatusCode</full_name>
        <docblock line="43">
          <description>Set the status code for the Response</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The new status code" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="43" name="return" description="The current object" type="\Backend\Interfaces\Response">
            <type by_reference="false">\Backend\Interfaces\Response</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="59" package="Interfaces">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="52">
          <description>Return the specified Response header.</description>
          <long-description></long-description>
          <tag line="52" name="param" description="The name of the header to return." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="72" package="Interfaces">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="61">
          <description>Set the specified Response header.</description>
          <long-description>&lt;p&gt;If the name is null, the header won't have a name, and will contain only
the value of the header.&lt;/p&gt;</long-description>
          <tag line="61" name="param" description="The name of the header to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="param" description="The value of the header." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="79" package="Interfaces">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="74">
          <description>Return the Response's headers</description>
          <long-description></long-description>
          <tag line="74" name="return" description="An array containing the Response's headers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="88" package="Interfaces">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="81">
          <description>Set the headers for the Response</description>
          <long-description></long-description>
          <tag line="81" name="param" description="The new headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="return" description="" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="95" package="Interfaces">
        <name>getBody</name>
        <full_name>getBody</full_name>
        <docblock line="90">
          <description>Return the Response's body</description>
          <long-description></long-description>
          <tag line="90" name="return" description="The Response's body" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="104" package="Interfaces">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="97">
          <description>Set the body for the Response</description>
          <long-description></long-description>
          <tag line="97" name="param" description="The new body" type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="97" name="return" description="" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="111" package="Interfaces">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="106">
          <description>Output the response to the client.</description>
          <long-description></long-description>
          <tag line="106" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/AuthenticatorInterface.php" hash="81282ad4c33231f87c8393d0160a22c1" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\AuthenticatorInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="28" package="Interfaces">
      <name>AuthenticatorInterface</name>
      <full_name>\Backend\Interfaces\AuthenticatorInterface</full_name>
      <docblock line="18">
        <description>Authenticator classes provide a mechanism with which to check a user and it's
permissions.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Interfaces"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="42" package="Interfaces">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="30">
          <description>Check if the user has access to the given callback.</description>
          <long-description>&lt;p&gt;The interface only defined the bare minimum of parameters to pass. Feel
free to add more parameters, such as the user, session or container, to
help your Authenticator do it's job.&lt;/p&gt;</long-description>
          <tag line="30" name="param" description="The callback the user&#10;is trying to access." type="\Backend\Interfaces\Backend\Interfaces\CallbackInterface" variable="$callback">
            <type by_reference="false">\Backend\Interfaces\Backend\Interfaces\CallbackInterface</type>
          </tag>
          <tag line="30" name="return" description="Whether or not the user may access the callback." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Interfaces\CallbackInterface</type>
        </argument>
      </method>
    </interface>
    <parse_markers>
      <error line="30" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $callback in check()</error>
    </parse_markers>
  </file>
  <file path="interfaces/Backend/Interfaces/RenderInterface.php" hash="5c11e4280ac75b74cf4a004e3c4c9db4" package="Interfaces">
    <docblock line="2">
      <description>File defining \Backend\Interfaces\RenderInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>RenderInterface</name>
      <full_name>\Backend\Interfaces\RenderInterface</full_name>
      <docblock line="16">
        <description>Utility with which to render templates</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="35" package="Interfaces">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="27">
          <description>Render the specified template, using the given values</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The name of the template to render" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="The values to use to render the template" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="return" description="The contents of the rendered template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="35">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/CallbackFactoryInterface.php" hash="a73170b06caf1462ffc69aebedc687e7" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\CallbackFactoryInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>CallbackFactoryInterface</name>
      <full_name>\Backend\Interfaces\CallbackFactoryInterface</full_name>
      <docblock line="16">
        <description>Class to create callbacks from strings and arrays.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="35" package="Interfaces">
        <name>fromString</name>
        <full_name>fromString</full_name>
        <docblock line="27">
          <description>Convert a string to a callback.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The string representation of the callback." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="The arguments for the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="27" name="return" description="" type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="35">
          <name>$arguments</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/Tests/InterfacesTest.php" hash="98cdd7628a80be4ef5c1ff21d0dd5e00" package="InterfacesTests">
    <docblock line="2">
      <description>File defining InterfacesTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="InterfacesTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Interfaces\Tests" line="25" package="InterfacesTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>InterfacesTest</name>
      <full_name>\Backend\Interfaces\Tests\InterfacesTest</full_name>
      <docblock line="16">
        <description>Class to test all the defined interfaces</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="InterfacesTests"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces\Tests" line="32" package="InterfacesTests">
        <name>dataInterfaces</name>
        <full_name>dataInterfaces</full_name>
        <docblock line="27">
          <description>Data provider for testInterfaces.</description>
          <long-description>&lt;p&gt;Return all the interfaces.&lt;/p&gt;</long-description>
          <tag line="27" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Interfaces\Tests" line="40" package="InterfacesTests">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <argument line="40">
          <name>$file</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces\Tests" line="55" package="InterfacesTests">
        <name>testInterfaces</name>
        <full_name>testInterfaces</full_name>
        <docblock line="50">
          <description>Compile all the interfaces.</description>
          <long-description></long-description>
          <tag line="50" name="dataProvider" description="dataInterfaces"/>
        </docblock>
        <argument line="55">
          <name>$interface</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="40" code="50010">No DocBlock was found for method getArguments()</error>
      <error line="50" code="50015">Argument $interface is missing from the Docblock of testInterfaces()</error>
    </parse_markers>
  </file>
  <file path="interfaces/Backend/Interfaces/Tests/bootstrap.php" hash="ebfa07b820e3e4d5cb551c2af322956c" package="Interfaces">
    <docblock line="2">
      <description>The bootstrapping script</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="Permission is hereby granted, free of charge, to any person obtaining a copy of&#10;this software and associated documentation files (the &quot;Software&quot;), to deal in the&#10;Software without restriction, including without limitation the rights to use, copy,&#10;modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,&#10;and to permit persons to whom the Software is furnished to do so, subject to the&#10;following conditions:&#10;The above copyright notice and this permission notice shall be included in all&#10;copies or substantial portions of the Software.&#10;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR&#10;A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT&#10;HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF&#10;CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE&#10;OR THE USE OR OTHER DEALINGS IN THE SOFTWARE." link="http://backend-php.net"/>
    </docblock>
    <include line="41" type="Require Once" package="Default">
      <name/>
    </include>
  </file>
  <file path="interfaces/Backend/Interfaces/RequestInterface.php" hash="5363b0abbb10782ef06fe705ef66a0b4" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\RequestInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>RequestInterface</name>
      <full_name>\Backend\Interfaces\RequestInterface</full_name>
      <docblock line="16">
        <description>The Request class which helps determine the Query string and request format.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="37" package="Interfaces">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>The constructor for the Request class</description>
          <long-description>&lt;p&gt;If no parameters are supplied, determine the properties of the Request
from the current state.&lt;/p&gt;</long-description>
          <tag line="27" name="param" description="The URL of the request" type="mixed" variable="$url">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="27" name="param" description="The request method." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="The request data." type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$url</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="37">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="37">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="44" package="Interfaces">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="39">
          <description>Return the HTTP Method used to make the request.</description>
          <long-description></long-description>
          <tag line="39" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="53" package="Interfaces">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="46">
          <description>Set the Request's method.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="The Request Method." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="62" package="Interfaces">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="55">
          <description>Return the specified Request header.</description>
          <long-description></long-description>
          <tag line="55" name="param" description="The name of the header to return." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="75" package="Interfaces">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="64">
          <description>Set the specified Request header.</description>
          <long-description>&lt;p&gt;If the name is null, the header won't have a name, and will contain only
the value of the header.&lt;/p&gt;</long-description>
          <tag line="64" name="param" description="The name of the header to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="The value of the header." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="82" package="Interfaces">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="77">
          <description>Return the Request headers.</description>
          <long-description></long-description>
          <tag line="77" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="91" package="Interfaces">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="84">
          <description>Set the Request headers.</description>
          <long-description></long-description>
          <tag line="84" name="param" description="An array of headers for the Request." type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="98" package="Interfaces">
        <name>getBody</name>
        <full_name>getBody</full_name>
        <docblock line="93">
          <description>Return the Request's body.</description>
          <long-description></long-description>
          <tag line="93" name="return" description="The Request body." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="109" package="Interfaces">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="100">
          <description>Set the Request's body.</description>
          <long-description>&lt;p&gt;Strings should be parsed for variables and objects should be casted to arrays.&lt;/p&gt;</long-description>
          <tag line="100" name="param" description="The Request's body." type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="100" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="116" package="Interfaces">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="111">
          <description>Return the path of the Request.</description>
          <long-description></long-description>
          <tag line="111" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="127" package="Interfaces">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="118">
          <description>Set and cleanup the path.</description>
          <long-description>&lt;p&gt;The path should be URL decoded before calling this method.&lt;/p&gt;</long-description>
          <tag line="118" name="param" description="The path." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="134" package="Interfaces">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="129">
          <description>Return the url to this Request.</description>
          <long-description></long-description>
          <tag line="129" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="143" package="Interfaces">
        <name>setUrl</name>
        <full_name>setUrl</full_name>
        <docblock line="136">
          <description>Set the Request's URL.</description>
          <long-description></long-description>
          <tag line="136" name="param" description="The url." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="150" package="Interfaces">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="145">
          <description>Determine the requested MIME Type for the request.</description>
          <long-description></long-description>
          <tag line="145" name="return" description="The MIME Type for the request." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="159" package="Interfaces">
        <name>setMimeType</name>
        <full_name>setMimeType</full_name>
        <docblock line="152">
          <description>Set the Request MIME Type.</description>
          <long-description></long-description>
          <tag line="152" name="param" description="The Request's MIME Type." type="mixed" variable="$mimeType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="152" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$mimeType</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="166" package="Interfaces">
        <name>getSpecifiedFormat</name>
        <full_name>getSpecifiedFormat</full_name>
        <docblock line="161">
          <description>Determine the requested format for the request.</description>
          <long-description></long-description>
          <tag line="161" name="return" description="The format for the request." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="175" package="Interfaces">
        <name>setSpecifiedFormat</name>
        <full_name>setSpecifiedFormat</full_name>
        <docblock line="168">
          <description>Set the Request Specified Format.</description>
          <long-description></long-description>
          <tag line="168" name="param" description="The Request's specified format." type="mixed" variable="$format">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="168" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="182" package="Interfaces">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="177">
          <description>Get the Request Extension.</description>
          <long-description></long-description>
          <tag line="177" name="return" description="The extension of the request." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="191" package="Interfaces">
        <name>setExtension</name>
        <full_name>setExtension</full_name>
        <docblock line="184">
          <description>Set the Request Extension.</description>
          <long-description></long-description>
          <tag line="184" name="param" description="The Request's extension." type="mixed" variable="$extension">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="184" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/RouterInterface.php" hash="2e14ffb20f60569f40c897278c1aa984" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\RouterInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>RouterInterface</name>
      <full_name>\Backend\Interfaces\RouterInterface</full_name>
      <docblock line="16">
        <description>Class to inspect the Request to determine what callback should be executed.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="34" package="Interfaces">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="27">
          <description>Inspect the specified request and determine what callback to execute.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The request to inspect." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="27" name="return" description="" type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="44" package="Interfaces">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="36">
          <description>Determine what route will result in the specified callback.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="Either a callback or a string representation of&#10;a callback." type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="36" name="return" description="The name of the route the callback resolves to." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/DependencyInjectionContainerInterface.php" hash="51dd5813bb20a1fff362093d7f7137c4" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\DependencyInjectionContainerInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>DependencyInjectionContainerInterface</name>
      <full_name>\Backend\Interfaces\DependencyInjectionContainerInterface</full_name>
      <docblock line="16">
        <description>A dependency injection container that manages dependencies.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="36" package="Interfaces">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="27">
          <description>Get the Implementation of the specified Component.</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The Component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="The behavior when the service does not exist." type="integer" variable="$invalidBehaviour">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="27" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="27" name="throws" description="" type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="36">
          <name>$invalidBehaviour</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="47" package="Interfaces">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="38">
          <description>Register an Implementation of the specified Component.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="The Component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="The component to register." type="object" variable="$service">
            <type by_reference="false">object</type>
          </tag>
          <tag line="38" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="38" name="throws" description="If the component doesn't exist." type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$service</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="56" package="Interfaces">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="49">
          <description>Check if the specified Component has been registered with the container.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The Component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="65" package="Interfaces">
        <name>getParameter</name>
        <full_name>getParameter</full_name>
        <docblock line="58">
          <description>Get the specified Parameter.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="The Parameter name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="75" package="Interfaces">
        <name>setParameter</name>
        <full_name>setParameter</full_name>
        <docblock line="67">
          <description>Set the value of the specified Parameter.</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The Parameter name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="The value of the Parameter." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="84" package="Interfaces">
        <name>hasParameter</name>
        <full_name>hasParameter</full_name>
        <docblock line="77">
          <description>Check if the specified Parameter has been registered with the container.</description>
          <long-description></long-description>
          <tag line="77" name="param" description="The Parameter name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="93" package="Interfaces">
        <name>removeDefinition</name>
        <full_name>removeDefinition</full_name>
        <docblock line="86">
          <description>Remove the Implementation of the specified Component.</description>
          <long-description></long-description>
          <tag line="86" name="param" description="The identifier of the Component to remove." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="interfaces/Backend/Interfaces/ApplicationInterface.php" hash="8d665db623bf832d3ca8058cded6c4a4" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\ApplicationInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <interface namespace="Backend\Interfaces" line="25" package="Interfaces">
      <name>ApplicationInterface</name>
      <full_name>\Backend\Interfaces\ApplicationInterface</full_name>
      <docblock line="16">
        <description>The Application class wraps the execution process.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Interfaces"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Interfaces" line="35" package="Interfaces">
        <name>main</name>
        <full_name>main</full_name>
        <docblock line="27">
          <description>Main function for the application</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The request the&#10;application should handle" type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="27" name="return" description="" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$request</name>
          <default>null</default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="core/Backend/Core/Application.php" hash="b27623b060aacc6e0417dd6be6ad779a" package="Core">
    <docblock line="2">
      <description>File defining \Backend\Core\Application</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="36" package="Core">
      <extends/>
      <implements>\Backend\Interfaces\ApplicationInterface</implements>
      <name>Application</name>
      <full_name>\Backend\Core\Application</full_name>
      <docblock line="27">
        <description>The main application class.</description>
        <long-description></long-description>
        <tag line="27" name="category" description="Backend"/>
        <tag line="27" name="package" description="Core"/>
        <tag line="27" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="27" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="27" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" namespace="Backend\Core" package="Default">
        <name>$router</name>
        <default>null</default>
        <docblock line="38">
          <description>Router to map callbacks to requests, and vice versa.</description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="\Backend\Core\Backend\Interfaces\RouterInterface">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\RouterInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="Backend\Core" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="45">
          <description>The request currently being executed.</description>
          <long-description></long-description>
          <tag line="45" name="var" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" namespace="Backend\Core" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="52">
          <description>The Application Configuration.</description>
          <long-description></long-description>
          <tag line="52" name="var" description="" type="\Backend\Core\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="Backend\Core" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="59">
          <description>The Dependency Injection Container for the Application.</description>
          <long-description></long-description>
          <tag line="59" name="var" description="" type="\Backend\Core\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="75" package="Core">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="66">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="66" name="param" description="The Configuration for the&#10;Application." type="\Backend\Core\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="66" name="param" description="The&#10;DI Container for the Application.&#10;Application." type="\Backend\Core\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
        <argument line="75">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="87" package="Core">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="82">
          <description>Initialize the Application.</description>
          <long-description></long-description>
          <tag line="82" name="return" description="Returns true if the initialization ran. False otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="119" package="Core">
        <name>main</name>
        <full_name>main</full_name>
        <docblock line="107">
          <description>Main function for the application.</description>
          <long-description>&lt;p&gt;Inspect the request and subsequent results, chain if necessary.&lt;/p&gt;</long-description>
          <tag line="107" name="param" description="The request the&#10;application should handle" type="\Backend\Core\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="107" name="return" description="" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
          <tag line="107" name="throws" description="When there's no route or formatter for the&#10;request." type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$request</name>
          <default>null</default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="173" package="Core">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="168">
          <description>Get the request that's currently being executed.</description>
          <long-description></long-description>
          <tag line="168" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="189" package="Core">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="182">
          <description>Set the request that's will be executed.</description>
          <long-description></long-description>
          <tag line="182" name="param" description="The request to set." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="182" name="return" description="" type="\Backend\Core\Application">
            <type by_reference="false">\Backend\Core\Application</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$request</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="202" package="Core">
        <name>getConfig</name>
        <full_name>getConfig</full_name>
        <docblock line="197">
          <description>Get the application's configuration.</description>
          <long-description></long-description>
          <tag line="197" name="return" description="" type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="214" package="Core">
        <name>setConfig</name>
        <full_name>setConfig</full_name>
        <docblock line="207">
          <description>Set the request that's will be executed.</description>
          <long-description></long-description>
          <tag line="207" name="param" description="The request to set." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="207" name="return" description="" type="\Backend\Core\Application">
            <type by_reference="false">\Backend\Core\Application</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="227" package="Core">
        <name>getRouter</name>
        <full_name>getRouter</full_name>
        <docblock line="222">
          <description>Get the Router for the Application.</description>
          <long-description></long-description>
          <tag line="222" name="return" description="" type="\Backend\Core\Backend\Interfaces\RouterInterface">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\RouterInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="243" package="Core">
        <name>setRouter</name>
        <full_name>setRouter</full_name>
        <docblock line="236">
          <description>Set the Router for the Application.</description>
          <long-description></long-description>
          <tag line="236" name="param" description="The router for the Applciation." type="\Backend\Core\Backend\Interfaces\RouterInterface" variable="$router">
            <type by_reference="false">\Backend\Core\Backend\Interfaces\RouterInterface</type>
          </tag>
          <tag line="236" name="return" description="" type="\Backend\Core\Backend\Core\Application">
            <type by_reference="false">\Backend\Core\Backend\Core\Application</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$router</name>
          <default></default>
          <type>\Backend\Interfaces\RouterInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="258" package="Core">
        <name>setContainer</name>
        <full_name>setContainer</full_name>
        <docblock line="250">
          <description>Set the Application's DI Container.</description>
          <long-description></long-description>
          <tag line="250" name="param" description="The DI Container for the Application." type="\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
          <tag line="250" name="return" description="The current object." type="\Backend\Interfaces\ControllerInterface">
            <type by_reference="false">\Backend\Interfaces\ControllerInterface</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="271" package="Core">
        <name>getContainer</name>
        <full_name>getContainer</full_name>
        <docblock line="265">
          <description>Get the Application's DI Container</description>
          <long-description></long-description>
          <tag line="265" name="return" description="The&#10;Application's DI Container" type="\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="281" package="Core">
        <name>raiseEvent</name>
        <full_name>raiseEvent</full_name>
        <docblock line="276">
          <description>Raise an event.</description>
          <long-description></long-description>
          <tag line="276" name="return" description="The current object" type="\Backend\Core\Application">
            <type by_reference="false">\Backend\Core\Application</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="281">
          <name>$event</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="295" package="Core">
        <name>shutdown</name>
        <full_name>shutdown</full_name>
        <docblock line="290">
          <description>Shutdown function called when ever the script ends</description>
          <long-description></long-description>
          <tag line="290" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="315" package="Core">
        <name>error</name>
        <full_name>error</full_name>
        <docblock line="300">
          <description>Error handling function called when ever an error occurs.</description>
          <long-description>&lt;p&gt;Called by set_error_handler. Some types of errors will be converted into
excceptions.&lt;/p&gt;</long-description>
          <tag line="300" name="param" description="The error number." type="int" variable="$errno">
            <type by_reference="false">int</type>
          </tag>
          <tag line="300" name="param" description="The error string." type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="The file the error occured in." type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="The line number the error occured on." type="int" variable="$errline">
            <type by_reference="false">int</type>
          </tag>
          <tag line="300" name="param" description="The context the error occured in." type="array" variable="$errcontext">
            <type by_reference="false">array</type>
          </tag>
          <tag line="300" name="param" description="Return the exception instead of running it." type="bool" variable="$return">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="300" name="return" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$errno</name>
          <default></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$errstr</name>
          <default></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$errfile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$errline</name>
          <default></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$errcontext</name>
          <default></default>
          <type/>
        </argument>
        <argument line="315">
          <name>$return</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="335" package="Core">
        <name>exception</name>
        <full_name>exception</full_name>
        <docblock line="325">
          <description>Exception handling function called when ever an exception isn't handled.</description>
          <long-description>&lt;p&gt;Called by set_exception_handler.&lt;/p&gt;</long-description>
          <tag line="325" name="param" description="The thrown exception." type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="325" name="param" description="Return the response instead of outputting it." type="bool" variable="$return">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="325" name="return" description="" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$exception</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="66" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $config in __construct()</error>
      <error line="66" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $container in __construct()</error>
      <error line="107" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $request in main()</error>
      <error line="207" code="50014">Name of argument $config does not match with the DocBlock's name $request in setConfig()</error>
      <notice line="207" code="50013">Parameter $request could not be found in setConfig()</notice>
      <error line="236" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $router in setRouter()</error>
      <error line="276" code="50015">Argument $name is missing from the Docblock of raiseEvent()</error>
      <error line="276" code="50015">Argument $event is missing from the Docblock of raiseEvent()</error>
      <notice line="325" code="50013">Parameter $return could not be found in exception()</notice>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Utilities/Router.php" hash="e9124bed6fb8cafe37ecb5fe4f0f21a6" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\Routes</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="33" package="Core\Utilities">
      <extends/>
      <name>Router</name>
      <full_name>\Backend\Core\Utilities\Router</full_name>
      <docblock line="23">
        <description>Class to inspect the Request to determine what callback should be executed.</description>
        <long-description></long-description>
        <tag line="23" name="category" description="Backend"/>
        <tag line="23" name="package" description="Core"/>
        <tag line="23" name="subpackage" description="Utilities"/>
        <tag line="23" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="23" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="23" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" namespace="Backend\Core\Utilities" package="Default">
        <name>$routes</name>
        <default></default>
        <docblock line="35">
          <description>An array of the defined routes.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Backend\Core\Utilities" package="Default">
        <name>$factory</name>
        <default></default>
        <docblock line="42">
          <description>The callback factory used to construct callbacks.</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="\Backend\Core\Utilities\Backend\Interfaces\CallbackFactoryInterface">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\CallbackFactoryInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="57" package="Core\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The routes&#10;config as a Config object" type="\Backend\Core\Utilities\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="49" name="param" description="A callback&#10;factory used to create callbacks from strings." type="\Backend\Core\Utilities\Backend\Interfaces\CallbackFactoryInterface" variable="$factory">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\CallbackFactoryInterface</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
        <argument line="57">
          <name>$factory</name>
          <default></default>
          <type>\Backend\Interfaces\CallbackFactoryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="70" package="Core\Utilities">
        <name>inspect</name>
        <full_name>inspect</full_name>
        <docblock line="63">
          <description>Inspect the specified request and determine what callback to execute.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="The request to inspect." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="63" name="return" description="" type="\Backend\Core\Utilities\CallbackInterface">
            <type by_reference="false">\Backend\Core\Utilities\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="104" package="Core\Utilities">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="93">
          <description>Check the request against the supplied route.</description>
          <long-description>&lt;p&gt;If they match, return an array
containing the callback and its arguments.&lt;/p&gt;</long-description>
          <tag line="93" name="param" description="The request to compare&#10;with the route." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="93" name="param" description="The route information&#10;to compare with the request." type="array" variable="$route">
            <type by_reference="false">array</type>
          </tag>
          <tag line="93" name="return" description="" type="boolean|\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">boolean</type>
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
        <argument line="104">
          <name>$route</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="162" package="Core\Utilities">
        <name>checkControllers</name>
        <full_name>checkControllers</full_name>
        <docblock line="152">
          <description>Check if the route is linked to a controller.</description>
          <long-description></long-description>
          <tag line="152" name="param" description="The request to compare&#10;with the route." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="152" name="param" description="The controllers&#10;linked to routes." type="array" variable="$controllers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="152" name="return" description="" type="boolean|array">
            <type by_reference="false">boolean</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
        <argument line="162">
          <name>$controllers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="212" package="Core\Utilities">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="204">
          <description>Determine what route will result in the specified callback.</description>
          <long-description></long-description>
          <tag line="204" name="param" description="Either a callback or a string representation of&#10;a callback." type="mixed" variable="$callback">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="204" name="return" description="The name of the route the callback resolves to." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="259" package="Core\Utilities">
        <name>setCallbackFactory</name>
        <full_name>setCallbackFactory</full_name>
        <docblock line="251">
          <description>Set the Callback Factory.</description>
          <long-description></long-description>
          <tag line="251" name="param" description="The Callback&#10;Factory." type="\Backend\Interfaces\CallbackFactoryInterface" variable="$factory">
            <type by_reference="false">\Backend\Interfaces\CallbackFactoryInterface</type>
          </tag>
          <tag line="251" name="return" description="" type="\Backend\Core\Utilities\Router">
            <type by_reference="false">\Backend\Core\Utilities\Router</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$factory</name>
          <default></default>
          <type>\Backend\Interfaces\CallbackFactoryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="271" package="Core\Utilities">
        <name>getCallbackFactory</name>
        <full_name>getCallbackFactory</full_name>
        <docblock line="266">
          <description>Get the Callback Factory.</description>
          <long-description></long-description>
          <tag line="266" name="return" description="" type="\Backend\Interfaces\CallbackFactoryInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackFactoryInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="283" package="Core\Utilities">
        <name>getConfig</name>
        <full_name>getConfig</full_name>
        <docblock line="278">
          <description>Get the Config.</description>
          <long-description></long-description>
          <tag line="278" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="49" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $config in __construct()</error>
      <error line="49" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $factory in __construct()</error>
      <error line="204" code="50015">Argument $arguments is missing from the Docblock of resolve()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Utilities/UrlGenerator.php" hash="2f8c9ad5537b496f1a330211e632c19f" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\UrlGenerator.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="31" package="Core\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\UrlGeneratorInterface</implements>
      <name>UrlGenerator</name>
      <full_name>\Backend\Core\Utilities\UrlGenerator</full_name>
      <docblock line="21">
        <description>Class to generate URL's using routing information.</description>
        <long-description></long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="Core"/>
        <tag line="21" name="subpackage" description="Utilities"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="38" namespace="Backend\Core\Utilities" package="Default">
        <name>$context</name>
        <default></default>
        <docblock line="33">
          <description>The context of the current request.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="\Backend\Interfaces\RequestContextInterface">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Backend\Core\Utilities" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="40">
          <description>A config object containing route definitions.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="55" package="Core\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="The context of&#10;the current request." type="\Backend\Interfaces\RequestContextInterface" variable="$context">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
          <tag line="47" name="param" description="A config object&#10;containing route definitions." type="\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$context</name>
          <default></default>
          <type>\Backend\Interfaces\RequestContextInterface</type>
        </argument>
        <argument line="55">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="68" package="Core\Utilities">
        <name>generate</name>
        <full_name>generate</full_name>
        <docblock line="61">
          <description>Generate a link for the given Route.</description>
          <long-description></long-description>
          <tag line="61" name="param" description="The name of the route to generate a link for." type="string" variable="$routeName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$routeName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="99" package="Core\Utilities">
        <name>setContext</name>
        <full_name>setContext</full_name>
        <docblock line="92">
          <description>Set the context.</description>
          <long-description></long-description>
          <tag line="92" name="param" description="The context object to set." type="\Backend\Interfaces\RequestContextInterface" variable="$context">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
          <tag line="92" name="return" description="The current object" type="\Backend\Interfaces\URlGeneratorInterface">
            <type by_reference="false">\Backend\Interfaces\URlGeneratorInterface</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$context</name>
          <default></default>
          <type>\Backend\Interfaces\RequestContextInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="111" package="Core\Utilities">
        <name>getContext</name>
        <full_name>getContext</full_name>
        <docblock line="106">
          <description>Get the context.</description>
          <long-description></long-description>
          <tag line="106" name="return" description="The context object." type="\Backend\Interfaces\RequestContextInterface">
            <type by_reference="false">\Backend\Interfaces\RequestContextInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="123" package="Core\Utilities">
        <name>setConfig</name>
        <full_name>setConfig</full_name>
        <docblock line="116">
          <description>Set the Config.</description>
          <long-description></long-description>
          <tag line="116" name="param" description="The config object to set." type="\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="116" name="return" description="The current object" type="\Backend\Interfaces\URlGeneratorInterface">
            <type by_reference="false">\Backend\Interfaces\URlGeneratorInterface</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="135" package="Core\Utilities">
        <name>getConfig</name>
        <full_name>getConfig</full_name>
        <docblock line="130">
          <description>Get the Config.</description>
          <long-description></long-description>
          <tag line="130" name="return" description="$config The config object." type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="61" code="50015">Argument $parameters is missing from the Docblock of generate()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Utilities/Callback.php" hash="5cb88628f9fb8a56b127821614d5de25" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\Callback .</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="30" package="Core\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\CallbackInterface</implements>
      <name>Callback</name>
      <full_name>\Backend\Core\Utilities\Callback</full_name>
      <docblock line="20">
        <description>Class to handle application configs.</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Utilities"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="38" namespace="Backend\Core\Utilities" package="Default">
        <name>$class</name>
        <default></default>
        <docblock line="33">
          <description>The class of the callback.</description>
          <long-description>&lt;p&gt;Used for static method calls.&lt;/p&gt;</long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Backend\Core\Utilities" package="Default">
        <name>$object</name>
        <default></default>
        <docblock line="40">
          <description>The object of the callback.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="\Backend\Core\Utilities\object.">
            <type by_reference="false">\Backend\Core\Utilities\object.</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="Backend\Core\Utilities" package="Default">
        <name>$method</name>
        <default></default>
        <docblock line="47">
          <description>The name of the method to execute.</description>
          <long-description>&lt;p&gt;Used by both class and object.&lt;/p&gt;</long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="Backend\Core\Utilities" package="Default">
        <name>$function</name>
        <default></default>
        <docblock line="54">
          <description>The function to use as a callback.</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="Backend\Core\Utilities" package="Default">
        <name>$arguments</name>
        <default>array()</default>
        <docblock line="61">
          <description>The arguments to be used as parameters for the callback</description>
          <long-description></long-description>
          <tag line="61" name="array" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="77" package="Core\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="68">
          <description>Object constructor</description>
          <long-description></long-description>
          <tag line="68" name="param" description="The class (string) , object or function of the&#10;callback. If it's a function, the second parameter should be omitted." type="mixed" variable="$class">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="param" description="The method of the callback. If given, the first&#10;parameter must be either a class or an object." type="mixed" variable="$method">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="param" description="The arguments for the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$class</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="77">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="77">
          <name>$arguments</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="102" package="Core\Utilities">
        <name>setClass</name>
        <full_name>setClass</full_name>
        <docblock line="95">
          <description>Set the class name for a static method call.</description>
          <long-description></long-description>
          <tag line="95" name="param" description="The name of the class of the callback." type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$class</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="130" package="Core\Utilities">
        <name>getClass</name>
        <full_name>getClass</full_name>
        <docblock line="125">
          <description>Get the class name of the static method call.</description>
          <long-description></long-description>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="142" package="Core\Utilities">
        <name>setObject</name>
        <full_name>setObject</full_name>
        <docblock line="135">
          <description>Set the object for a method call.</description>
          <long-description></long-description>
          <tag line="135" name="param" description="The object of the callback." type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="135" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="162" package="Core\Utilities">
        <name>getObject</name>
        <full_name>getObject</full_name>
        <docblock line="157">
          <description>Get the object of the method call.</description>
          <long-description></long-description>
          <tag line="157" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="174" package="Core\Utilities">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="167">
          <description>Set the method name for a method call.</description>
          <long-description></long-description>
          <tag line="167" name="param" description="The method name of the callback." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="193" package="Core\Utilities">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="188">
          <description>Get the method name of the method call.</description>
          <long-description></long-description>
          <tag line="188" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="207" package="Core\Utilities">
        <name>setFunction</name>
        <full_name>setFunction</full_name>
        <docblock line="198">
          <description>Set the function as the callback.</description>
          <long-description></long-description>
          <tag line="198" name="param" description="The function." type="callable" variable="$function">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="198" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
          <tag line="198" name="throws" description="" type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
          <tag line="198" name="todo" description="Allow for closures"/>
        </docblock>
        <argument line="207">
          <name>$function</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="228" package="Core\Utilities">
        <name>getFunction</name>
        <full_name>getFunction</full_name>
        <docblock line="223">
          <description>Get the callback function.</description>
          <long-description></long-description>
          <tag line="223" name="return" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="240" package="Core\Utilities">
        <name>setArguments</name>
        <full_name>setArguments</full_name>
        <docblock line="233">
          <description>Set the arguments for the callback.</description>
          <long-description></long-description>
          <tag line="233" name="param" description="The arguments for the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="233" name="return" description="The current callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$arguments</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="252" package="Core\Utilities">
        <name>getArguments</name>
        <full_name>getArguments</full_name>
        <docblock line="247">
          <description>Get the arguments of the callback.</description>
          <long-description></long-description>
          <tag line="247" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="266" package="Core\Utilities">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="257">
          <description>Execute the callback.</description>
          <long-description>&lt;p&gt;The precedence is class, object, function.&lt;/p&gt;</long-description>
          <tag line="257" name="param" description="The arguments with which to execute the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="257" name="return" description="The result of the callback." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$arguments</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="324" package="Core\Utilities">
        <name>isValid</name>
        <full_name>isValid</full_name>
        <docblock line="317">
          <description>Check if it is a valid callback.</description>
          <long-description></long-description>
          <tag line="317" name="return" description="The string representation of callback. Will return false&#10;if all the callback components aren't set." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="throws" description="When the set callback is incomplete." type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="354" package="Core\Utilities">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="347">
          <description>Convert the callback to a string.</description>
          <long-description>&lt;p&gt;This function is the logical inverse of {@see fromString}&lt;/p&gt;</long-description>
          <tag line="347" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Utilities/CallbackFactory.php" hash="88d1192ba935c325415bfd2b4cdc065b" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\CallbackFactory.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="29" package="Interfaces">
      <extends/>
      <implements>\Backend\Interfaces\CallbackFactoryInterface</implements>
      <name>CallbackFactory</name>
      <full_name>\Backend\Core\Utilities\CallbackFactory</full_name>
      <docblock line="20">
        <description>Class to create callbacks from strings and arrays.</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Interfaces"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="39" package="Interfaces">
        <name>fromString</name>
        <full_name>fromString</full_name>
        <docblock line="31">
          <description>Convert a string to a callback.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="The string representation of the callback." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="The arguments for the callback." type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="31" name="return" description="" type="\Backend\Core\Utilities\CallbackInterface">
            <type by_reference="false">\Backend\Core\Utilities\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$arguments</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Utilities/Formatter.php" hash="96aff6124c5a10ee5ab191b8559d7986" package="Interfaces">
    <docblock line="2">
      <description>File defining Backend\Interfaces\FormatterInterface.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="31" package="Interfaces">
      <extends/>
      <implements>\Backend\Interfaces\FormatterInterface</implements>
      <name>Formatter</name>
      <full_name>\Backend\Core\Utilities\Formatter</full_name>
      <docblock line="22">
        <description>Transform results into the specified format.</description>
        <long-description></long-description>
        <tag line="22" name="category" description="Backend"/>
        <tag line="22" name="package" description="Interfaces"/>
        <tag line="22" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="22" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="22" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="38" namespace="Backend\Core\Utilities" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="33">
          <description>The request resulting in the response to be formatted.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="45" namespace="Backend\Core\Utilities" package="Default">
        <name>$formats</name>
        <default>null</default>
        <docblock line="40">
          <description>Formats to check</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="52" namespace="Backend\Core\Utilities" package="Default">
        <name>$baseFolders</name>
        <default>null</default>
        <docblock line="47">
          <description>The folders in which to check for Formatters.</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="60" package="Interfaces">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="54">
          <description>The constructor for the object</description>
          <long-description></long-description>
          <tag line="54" name="param" description="The request used to&#10;determine what formatter to return." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$request</name>
          <default>null</default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="74" package="Interfaces">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="67">
          <description>Output the response to the client.</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The result to transform." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="\Backend\Interfaces\ResponseInterface;">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface;</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="91" package="Interfaces">
        <name>factory</name>
        <full_name>factory</full_name>
        <docblock line="83">
          <description>Factory function to generate a formatter object.</description>
          <long-description></long-description>
          <tag line="83" name="param" description="The DI Container used to fetch the object." type="\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
          <tag line="83" name="return" description="" type="\Backend\Interfaces\FormatterInterface">
            <type by_reference="false">\Backend\Interfaces\FormatterInterface</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="118" package="Interfaces">
        <name>getFormats</name>
        <full_name>getFormats</full_name>
        <docblock line="113">
          <description>Get the available Format classes.</description>
          <long-description></long-description>
          <tag line="113" name="return" description="The list of available Formatter classes." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="153" package="Interfaces">
        <name>setFormats</name>
        <full_name>setFormats</full_name>
        <docblock line="146">
          <description>Set the available Format classes.</description>
          <long-description></long-description>
          <tag line="146" name="param" description="An array of Format classes." type="array" variable="$formats">
            <type by_reference="false">array</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$formats</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="168" package="Interfaces">
        <name>getRequestFormats</name>
        <full_name>getRequestFormats</full_name>
        <docblock line="161">
          <description>Get the possible formats for the Request.</description>
          <long-description></long-description>
          <tag line="161" name="param" description="The request to check." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="161" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="190" package="Interfaces">
        <name>isValidFormat</name>
        <full_name>isValidFormat</full_name>
        <docblock line="183">
          <description>Check if a class is a valid Format</description>
          <long-description></long-description>
          <tag line="183" name="param" description="The class to check" type="mixed" variable="$className">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="183" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$className</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="211" package="Interfaces">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="206">
          <description>Return the request used to generate the response.</description>
          <long-description></long-description>
          <tag line="206" name="return" description="" type="\Backend\Core\Utilities\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="223" package="Interfaces">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="216">
          <description>Set the request used to generate the response.</description>
          <long-description></long-description>
          <tag line="216" name="param" description="The request to set." type="\Backend\Core\Utilities\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="216" name="return" description="" type="\Backend\Core\Utilities\Backend\Core\Utilities\Formatter">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Core\Utilities\Formatter</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="235" package="Interfaces">
        <name>getBaseFolders</name>
        <full_name>getBaseFolders</full_name>
        <docblock line="230">
          <description>Get the Base folders</description>
          <long-description></long-description>
          <tag line="230" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="254" package="Interfaces">
        <name>setBaseFolders</name>
        <full_name>setBaseFolders</full_name>
        <docblock line="247">
          <description>Set the Base folders.</description>
          <long-description></long-description>
          <tag line="247" name="param" description="The base folders" type="array" variable="$folders">
            <type by_reference="false">array</type>
          </tag>
          <tag line="247" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$folders</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="216" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $request in setRequest()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Utilities/DependencyInjectionContainer.php" hash="554a030d92badabaa7f55dcd67293df9" package="Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\DependencyInjectionContainer</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="34" package="Utilities">
      <extends>\Symfony\Component\DependencyInjection\ContainerBuilder</extends>
      <implements>\Backend\Interfaces\DependencyInjectionContainerInterface</implements>
      <name>DependencyInjectionContainer</name>
      <full_name>\Backend\Core\Utilities\DependencyInjectionContainer</full_name>
      <docblock line="24">
        <description>A Dependency Injection Container.</description>
        <long-description>&lt;p&gt;Currently we just wrap the Symfony
DependencyInjection Component&lt;/p&gt;</long-description>
        <tag line="24" name="category" description="Backend"/>
        <tag line="24" name="package" description="Utilities"/>
        <tag line="24" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="24" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="24" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" namespace="Backend\Core\Utilities" package="Default">
        <name>$container</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="44" package="Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="The config to check&#10;service and parameter definitions as a Config object or an array." type="\Backend\Core\Utilities\Backend\Interfaces\ConfigInterface|array" variable="$config">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\ConfigInterface</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="78" package="Utilities">
        <name>addComponent</name>
        <full_name>addComponent</full_name>
        <docblock line="68">
          <description>Utility function to add Copmonents to the container.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="The component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="The component definition." type="mixed" variable="$config">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="68" name="todo" description="This currently only implements a small subset of the Symfony&#10;DI Component. Extend it."/>
        </docblock>
        <argument line="78">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="132" package="Utilities">
        <name>resolve</name>
        <full_name>resolve</full_name>
        <docblock line="124">
          <description>Resolve the config value, retrieving the required services, parameters and
constants.</description>
          <long-description></long-description>
          <tag line="124" name="param" description="The config value to resolve." type="mixed" variable="$configValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="124" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$configValue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="165" package="Utilities">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="156">
          <description>Get the Implementation of the specified Component.</description>
          <long-description></long-description>
          <tag line="156" name="param" description="The Component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="The behavior when the service does not exist." type="integer" variable="$invalidBehaviour">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="156" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="156" name="throws" description="" type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$invalidBehaviour</name>
          <default>\Symfony\Component\DependencyInjection\ContainerInterface::IGNORE_ON_INVALID_REFERENCE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="184" package="Utilities">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="174">
          <description>Register an Implementation of the specified Component.</description>
          <long-description></long-description>
          <tag line="174" name="param" description="The component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="174" name="param" description="The component to register." type="object" variable="$service">
            <type by_reference="false">object</type>
          </tag>
          <tag line="174" name="param" description="The scope of the component." type="int" variable="$scope">
            <type by_reference="false">int</type>
          </tag>
          <tag line="174" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="174" name="throws" description="" type="\Backend\Core\Exception">
            <type by_reference="false">\Backend\Core\Exception</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="184">
          <name>$service</name>
          <default></default>
          <type/>
        </argument>
        <argument line="184">
          <name>$scope</name>
          <default>\Symfony\Component\DependencyInjection\ContainerInterface::SCOPE_CONTAINER</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="196" package="Utilities">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="189">
          <description>Check if the specified Component has been registered with the container.</description>
          <long-description></long-description>
          <tag line="189" name="param" description="The Component identifier." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="208" package="Utilities">
        <name>getParameter</name>
        <full_name>getParameter</full_name>
        <docblock line="201">
          <description>Get the specified Parameter.</description>
          <long-description></long-description>
          <tag line="201" name="param" description="The Parameter name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="221" package="Utilities">
        <name>setParameter</name>
        <full_name>setParameter</full_name>
        <docblock line="213">
          <description>Set the value of the specified Parameter.</description>
          <long-description></long-description>
          <tag line="213" name="param" description="The Parameter name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="param" description="The value of the Parameter." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="213" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="233" package="Utilities">
        <name>hasParameter</name>
        <full_name>hasParameter</full_name>
        <docblock line="226">
          <description>Check if the specified Parameter has been registered with the container.</description>
          <long-description></long-description>
          <tag line="226" name="param" description="The Parameter name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="233">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="36" code="50018">No DocBlock was found for property $container</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Utilities/RequestContext.php" hash="78c06ecb2b95408f2a8d6a2485d131e5" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\RequestContext.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="30" package="Core\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\RequestContextInterface</implements>
      <name>RequestContext</name>
      <full_name>\Backend\Core\Utilities\RequestContext</full_name>
      <docblock line="20">
        <description>Class to define the context of a Request.</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Utilities"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" namespace="Backend\Core\Utilities" package="Default">
        <name>$scheme</name>
        <default></default>
        <docblock line="32">
          <description>The scheme of the request.</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="Backend\Core\Utilities" package="Default">
        <name>$host</name>
        <default></default>
        <docblock line="39">
          <description>The host of the request.</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="Backend\Core\Utilities" package="Default">
        <name>$folder</name>
        <default></default>
        <docblock line="46">
          <description>The folder of the request.</description>
          <long-description></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="Backend\Core\Utilities" package="Default">
        <name>$link</name>
        <default></default>
        <docblock line="53">
          <description>The site link of the request.</description>
          <long-description></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="66" package="Core\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="60">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="60" name="param" description="The request from which&#10;the context is derived." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="106" package="Core\Utilities">
        <name>getScheme</name>
        <full_name>getScheme</full_name>
        <docblock line="98">
          <description>Get the Request scheme.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/test, this will return
http&lt;/p&gt;</long-description>
          <tag line="98" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="119" package="Core\Utilities">
        <name>getHost</name>
        <full_name>getHost</full_name>
        <docblock line="111">
          <description>Get the hostname of the Request.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/test, this will return
backend-php.net&lt;/p&gt;</long-description>
          <tag line="111" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="132" package="Core\Utilities">
        <name>getFolder</name>
        <full_name>getFolder</full_name>
        <docblock line="124">
          <description>Get the path of the Request.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/test, this will return
/test&lt;/p&gt;</long-description>
          <tag line="124" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="145" package="Core\Utilities">
        <name>getLink</name>
        <full_name>getLink</full_name>
        <docblock line="137">
          <description>Get a link to the base site of the Request.</description>
          <long-description>&lt;p&gt;If the Request URL was, http://backend-php.net/test, this will return
http://backend-php.net/&lt;/p&gt;</long-description>
          <tag line="137" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Utilities/EventDispatcher.php" hash="1f84670041869487027ac3d1b6c10301" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\EventDispatcher.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="34" package="Default">
      <extends>\Symfony\Component\EventDispatcher\EventDispatcher</extends>
      <name>EventDispatcher</name>
      <full_name>\Backend\Core\Utilities\EventDispatcher</full_name>
      <property final="false" static="false" visibility="private" line="41" namespace="Backend\Core\Utilities" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="36">
          <description>The DI Container used to get and add registered listeners.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="\Backend\Core\Utilities\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="49" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>DI Container</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The DI Container for the Dispatcher." type="\Backend\Core\Utilities\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="57" package="Default">
        <name>registerListeners</name>
        <full_name>registerListeners</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="85" package="Default">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="78">
          <description>Transform the event name into a method name.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="The event name." type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="The deduced method name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="94" package="Default">
        <name>dispatch</name>
        <full_name>dispatch</full_name>
        <argument line="94">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$event</name>
          <default>null</default>
          <type>\Symfony\Component\EventDispatcher\Event</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="69">Lazy Loading of service ?</todo>
    </markers>
    <parse_markers>
      <error line="34" code="50000">No DocBlock was found for \Backend\Core\Utilities\EventDispatcher</error>
      <error line="43" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $container in __construct()</error>
      <error line="57" code="50010">No DocBlock was found for method registerListeners()</error>
      <error line="94" code="50010">No DocBlock was found for method dispatch()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Utilities/Config.php" hash="8457e5be06db265b736054332277488b" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Backend\Core\Utilities\Config .</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities" line="31" package="Core\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\ConfigInterface</implements>
      <name>Config</name>
      <full_name>\Backend\Core\Utilities\Config</full_name>
      <docblock line="21">
        <description>Class to handle application configs.</description>
        <long-description></long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="Core"/>
        <tag line="21" name="subpackage" description="Utilities"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="38" namespace="Backend\Core\Utilities" package="Default">
        <name>$baseFolders</name>
        <default>null</default>
        <docblock line="33">
          <description>The folders in which to check for configs.</description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="Backend\Core\Utilities" package="Default">
        <name>$values</name>
        <default>array()</default>
        <docblock line="40">
          <description></description>
          <long-description></long-description>
          <tag line="40" name="var" description="Store for all the config values." type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="Backend\Core\Utilities" package="Default">
        <name>$parser</name>
        <default>null</default>
        <docblock line="45">
          <description>Parser to parse the config file.</description>
          <long-description></long-description>
          <tag line="45" name="var" description="" type="callable">
            <type by_reference="false">callable</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="61" package="Core\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="52">
          <description>Construct the config class.</description>
          <long-description></long-description>
          <tag line="52" name="param" description="The parser to use when parsing a file." type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="52" name="param" description="The configuration, either as an array of values&#10;or the name of the config file." type="mixed" variable="$config">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="52" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$parser</name>
          <default></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$config</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="76" package="Core\Utilities">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="69">
          <description>Magic function that returns the config values on request</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The name of the property being accessed" type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="The value of the property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$propertyName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="95" package="Core\Utilities">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="85">
          <description>Get the named config value.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="The name of the config value. Omit to get the whole&#10;config." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="param" description="The default value to return should the value not&#10;be found." type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="return" description="The config setting" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$name</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="95">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="114" package="Core\Utilities">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="106">
          <description>Magic function that set the config values on request</description>
          <long-description></long-description>
          <tag line="106" name="param" description="The name of the property being set" type="string" variable="$propertyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="The value of the property" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$propertyName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="127" package="Core\Utilities">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="119">
          <description>Set a named config value.</description>
          <long-description></long-description>
          <tag line="119" name="param" description="The name of the config value." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="The value of the setting." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="119" name="return" description="The current config." type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="127">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="142" package="Core\Utilities">
        <name>setAll</name>
        <full_name>setAll</full_name>
        <docblock line="134">
          <description>Set the configuration values.</description>
          <long-description></long-description>
          <tag line="134" name="param" description="The configuration, either as an array of values&#10;or the name of the config file." type="mixed" variable="$config">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="134" name="return" description="The current config." type="\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$config</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="187" package="Core\Utilities">
        <name>import</name>
        <full_name>import</full_name>
        <docblock line="172">
          <description>Import a defined config into the current config file.</description>
          <long-description>&lt;p&gt;The import references are defined as follows:
imports:
    - { [type]: [value] }&lt;/p&gt;

&lt;p&gt;Where type can be either&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;file&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;. The&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;type follows the same semantics as that of the getNamed
method and takes precedent over the file directive.&lt;/p&gt;</long-description>
          <tag line="172" name="param" description="The import reference." type="array" variable="$reference">
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="return" description="" type="\Backend\Core\Utilities\Config">
            <type by_reference="false">\Backend\Core\Utilities\Config</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$reference</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="217" package="Core\Utilities">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="210">
          <description>Check if the config has the specified value.</description>
          <long-description></long-description>
          <tag line="210" name="param" description="The name of the config value to check." type="mixed" variable="$name">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="210" name="return" description="If the config has the specified value." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="227" package="Core\Utilities">
        <name>getParser</name>
        <full_name>getParser</full_name>
        <docblock line="222">
          <description>Get the parser to parse a config file.</description>
          <long-description>&lt;p&gt;@return object&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="239" package="Core\Utilities">
        <name>setParser</name>
        <full_name>setParser</full_name>
        <docblock line="232">
          <description>Set the parser to use when parsing a config file.</description>
          <long-description></long-description>
          <tag line="232" name="param" description="The parser." type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="232" name="return" description="" type="\Backend\Core\Utilities\Config">
            <type by_reference="false">\Backend\Core\Utilities\Config</type>
          </tag>
        </docblock>
        <argument line="239">
          <name>$parser</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Utilities" line="256" package="Core\Utilities">
        <name>fromFile</name>
        <full_name>fromFile</full_name>
        <docblock line="249">
          <description>Instansiate the configuration from the specified file.</description>
          <long-description></long-description>
          <tag line="249" name="param" description="The name of the file to parse." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="249" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="256">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="279" package="Core\Utilities">
        <name>getNamed</name>
        <full_name>getNamed</full_name>
        <docblock line="267">
          <description>Get the named configuration file from the default config locations.</description>
          <long-description>&lt;p&gt;The environment specific file is tried first, otherwise the global one is used.&lt;/p&gt;</long-description>
          <tag line="267" name="param" description="The parser to use when parsing a file." type="object" variable="$parser">
            <type by_reference="false">object</type>
          </tag>
          <tag line="267" name="param" description="The name of the configuration to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="267" name="return" description="" type="\Backend\Core\Utilities\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="267" name="throws" description="If the config file can't be&#10;found." type="\Backend\Core\Utilities\Backend\Core\Exceptions\ConfigException">
            <type by_reference="false">\Backend\Core\Utilities\Backend\Core\Exceptions\ConfigException</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$parser</name>
          <default></default>
          <type/>
        </argument>
        <argument line="279">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="301" package="Core\Utilities">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="296">
          <description>Iterator function to get the current element.</description>
          <long-description></long-description>
          <tag line="296" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="311" package="Core\Utilities">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="306">
          <description>Iterator function to get the current key.</description>
          <long-description></long-description>
          <tag line="306" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="321" package="Core\Utilities">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="316">
          <description>Iterator function to proceed to the next value.</description>
          <long-description></long-description>
          <tag line="316" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="331" package="Core\Utilities">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="326">
          <description>Iterator function to reset the collection.</description>
          <long-description></long-description>
          <tag line="326" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities" line="341" package="Core\Utilities">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="336">
          <description>Iterator function to check if there are more element in the collection.</description>
          <long-description></long-description>
          <tag line="336" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="352" package="Core\Utilities">
        <name>getBaseFolders</name>
        <full_name>getBaseFolders</full_name>
        <docblock line="347">
          <description>Get the Base folders</description>
          <long-description></long-description>
          <tag line="347" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core\Utilities" line="369" package="Core\Utilities">
        <name>setBaseFolders</name>
        <full_name>setBaseFolders</full_name>
        <docblock line="362">
          <description>Set the Base folders.</description>
          <long-description></long-description>
          <tag line="362" name="param" description="The base folders" type="array" variable="$folders">
            <type by_reference="false">array</type>
          </tag>
          <tag line="362" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="369">
          <name>$folders</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Exceptions/ConfigException.php" hash="0b2b548db826e0e26862d120926ea995" package="Core\Exceptions">
    <docblock line="2">
      <description>File defining ConfigException</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Exceptions" line="27" package="Core\Exceptions">
      <extends>\Backend\Core\Exception</extends>
      <name>ConfigException</name>
      <full_name>\Backend\Core\Exceptions\ConfigException</full_name>
      <docblock line="17">
        <description>Thrown when there's something wrong with the setup of the system.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Core"/>
        <tag line="17" name="subpackage" description="Exceptions"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
    </class>
  </file>
  <file path="core/Backend/Core/Exceptions/DuckTypeException.php" hash="308077bdbef73ca59b347d9e17004ee7" package="Core\Exceptions">
    <docblock line="2">
      <description>File defining DuckTypeException</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Exceptions" line="27" package="Core\Exceptions">
      <extends>\Backend\Core\Exception</extends>
      <name>DuckTypeException</name>
      <full_name>\Backend\Core\Exceptions\DuckTypeException</full_name>
      <docblock line="17">
        <description>Thrown when an object doesn't behave as expected.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Core"/>
        <tag line="17" name="subpackage" description="Exceptions"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
    </class>
  </file>
  <file path="core/Backend/Core/Listener/CoreListener.php" hash="b4bdc99292ac48b2dfb8c99eea4a07cd" package="Core\Listeners">
    <docblock line="2">
      <description>File defining \Backend\Core\Listener\CoreListener</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Listeners"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Listener" line="32" package="Core\Listeners">
      <extends/>
      <name>CoreListener</name>
      <full_name>\Backend\Core\Listener\CoreListener</full_name>
      <docblock line="22">
        <description>The Core Listener.</description>
        <long-description></long-description>
        <tag line="22" name="category" description="Backend"/>
        <tag line="22" name="package" description="Core"/>
        <tag line="22" name="subpackage" description="Listeners"/>
        <tag line="22" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="22" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="22" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="39" namespace="Backend\Core\Listener" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="34">
          <description>The DI Container for the Listener</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Listener" line="47" package="Core\Listeners">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="41" name="param" description="The DI Container." type="\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Listener" line="60" package="Core\Listeners">
        <name>coreCallbackEvent</name>
        <full_name>coreCallbackEvent</full_name>
        <docblock line="52">
          <description>Method to handle core.callback Events.</description>
          <long-description>&lt;p&gt;It applies a couple of transforms on the object, ensuring consistency.&lt;/p&gt;</long-description>
          <tag line="52" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\CallbackEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Listener" line="76" package="Core\Listeners">
        <name>coreResultEvent</name>
        <full_name>coreResultEvent</full_name>
        <docblock line="68">
          <description>Method to handle core.result Events.</description>
          <long-description>&lt;p&gt;It will try to get a default format if none is specified.&lt;/p&gt;</long-description>
          <tag line="68" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\ResultEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Listener" line="97" package="Core\Listeners">
        <name>coreExceptionEvent</name>
        <full_name>coreExceptionEvent</full_name>
        <docblock line="89">
          <description>Method to handle core.exception Events.</description>
          <long-description>&lt;p&gt;It will try to format the exception as a response.&lt;/p&gt;</long-description>
          <tag line="89" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\ExceptionEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Backend\Core\Listener" line="124" package="Core\Listeners">
        <name>transformCallback</name>
        <full_name>transformCallback</full_name>
        <docblock line="115">
          <description>Transform the Callback.</description>
          <long-description>&lt;p&gt;Transform any ControllerInterface classes into objects. Add Action to
ControllerInterface methods.&lt;/p&gt;</long-description>
          <tag line="115" name="param" description="The callback to transform." type="\Backend\Interfaces\CallbackInterface" variable="$callback">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
          <tag line="115" name="return" description="The transformed callback." type="\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Interfaces\CallbackInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Listener" line="156" package="Core\Listeners">
        <name>getContainer</name>
        <full_name>getContainer</full_name>
        <docblock line="151">
          <description>Get the DI Container.</description>
          <long-description></long-description>
          <tag line="151" name="return" description="" type="\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="68" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $event in coreResultEvent()</error>
      <error line="89" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $event in coreExceptionEvent()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Response.php" hash="53e6c5e167d8ead7c7a4eb9063b99d7f" package="Core">
    <docblock line="2">
      <description>File defining Response</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="28" package="Core">
      <extends/>
      <implements>\Backend\Interfaces\ResponseInterface</implements>
      <name>Response</name>
      <full_name>\Backend\Core\Response</full_name>
      <docblock line="19">
        <description>The response that will be sent back to the client</description>
        <long-description></long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="Core"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" namespace="Backend\Core" package="Default">
        <name>$body</name>
        <default>null</default>
        <docblock line="30">
          <description>The body of the response</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="40" namespace="Backend\Core" package="Default">
        <name>$status</name>
        <default>200</default>
        <docblock line="37">
          <description></description>
          <long-description></long-description>
          <tag line="37" name="var" description="The HTTP response code" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Backend\Core" package="Default">
        <name>$httpVersion</name>
        <default>null</default>
        <docblock line="42">
          <description></description>
          <long-description></long-description>
          <tag line="42" name="var" description="The HTTP version" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="52" namespace="Backend\Core" package="Default">
        <name>$messages</name>
        <default>array(100 =&gt; 'Continue', 101 =&gt; 'Switching Protocols', 200 =&gt; 'OK', 201 =&gt; 'Created', 202 =&gt; 'Accepted', 203 =&gt; 'Non-Authoritative Information', 204 =&gt; 'No Content', 205 =&gt; 'Reset Content', 206 =&gt; 'Partial Content', 300 =&gt; 'Multiple Choices', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 303 =&gt; 'See Other', 304 =&gt; 'Not Modified', 305 =&gt; 'Use Proxy', 307 =&gt; 'Temporary Redirect', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized', 402 =&gt; 'Payment Required', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 409 =&gt; 'Conflict', 410 =&gt; 'Gone', 411 =&gt; 'Length Required', 412 =&gt; 'Precondition Failed', 413 =&gt; 'Request Entity Too Large', 414 =&gt; 'Request-URI Too Long', 415 =&gt; 'Unsupported Media Type', 416 =&gt; 'Requested Range Not Satisfiable', 417 =&gt; 'Expectation Failed', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported', 509 =&gt; 'Bandwidth Limit Exceeded')</default>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag line="47" name="var" description="A list of HTTP Response Codes with their default texts Copied from the Zend_Http_Response object" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="109" namespace="Backend\Core" package="Default">
        <name>$headers</name>
        <default>array()</default>
        <docblock line="106">
          <description></description>
          <long-description></long-description>
          <tag line="106" name="var" description="An associative array containing headers to be sent along with the response" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="118" package="Core">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="111">
          <description>The constructor for the Response class</description>
          <long-description></long-description>
          <tag line="111" name="param" description="The body for the response" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="The status code for the response" type="int" variable="$status">
            <type by_reference="false">int</type>
          </tag>
          <tag line="111" name="param" description="The headers for the response" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$body</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="118">
          <name>$status</name>
          <default>200</default>
          <type/>
        </argument>
        <argument line="118">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="132" package="Core">
        <name>getStatusCode</name>
        <full_name>getStatusCode</full_name>
        <docblock line="127">
          <description>Return the current status code for the Response</description>
          <long-description></long-description>
          <tag line="127" name="return" description="The status code" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="145" package="Core">
        <name>setStatusCode</name>
        <full_name>setStatusCode</full_name>
        <docblock line="137">
          <description>Set the status code for the Response</description>
          <long-description></long-description>
          <tag line="137" name="param" description="The new status code" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="137" name="return" description="The current object" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
          <tag line="137" name="throws" description="If the response code is smaller than 100 or larger than 600." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="163" package="Core">
        <name>getStatusText</name>
        <full_name>getStatusText</full_name>
        <docblock line="156">
          <description>Get the text associated with a status code</description>
          <long-description></long-description>
          <tag line="156" name="param" description="The status code to get the text for" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="156" name="return" description="The status code text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$code</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="178" package="Core">
        <name>getBody</name>
        <full_name>getBody</full_name>
        <docblock line="173">
          <description>Return the Response's body</description>
          <long-description></long-description>
          <tag line="173" name="return" description="The Response's body" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="190" package="Core">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="183">
          <description>Set the body for the Response</description>
          <long-description></long-description>
          <tag line="183" name="param" description="The new body" type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="183" name="return" description="The current object" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="204" package="Core">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="197">
          <description>Return the specified Request header.</description>
          <long-description></long-description>
          <tag line="197" name="param" description="The name of the header to return." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="222" package="Core">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="211">
          <description>Set the specified Request headers.</description>
          <long-description>&lt;p&gt;If the name is null, the header won't have a name, and will contain only
the value of the header.&lt;/p&gt;</long-description>
          <tag line="211" name="param" description="The name of the header to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="param" description="The value of the header." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="222">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="239" package="Core">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="234">
          <description>Return the Response's headers</description>
          <long-description></long-description>
          <tag line="234" name="return" description="An array containing the Response's headers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="259" package="Core">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="252">
          <description>Set the headers for the Response</description>
          <long-description></long-description>
          <tag line="252" name="param" description="The new headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="252" name="return" description="The current object" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="271" package="Core">
        <name>output</name>
        <full_name>output</full_name>
        <docblock line="266">
          <description>Output the Response to the client</description>
          <long-description></long-description>
          <tag line="266" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="284" package="Core">
        <name>sendHeaders</name>
        <full_name>sendHeaders</full_name>
        <docblock line="279">
          <description>Send the Response's headers to the client</description>
          <long-description></long-description>
          <tag line="279" name="return" description="The current object" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="311" package="Core">
        <name>writeHeader</name>
        <full_name>writeHeader</full_name>
        <docblock line="303">
          <description>Write a HTTP Header.</description>
          <long-description></long-description>
          <tag line="303" name="param" description="The contents of the header." type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="303" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="303" name="todo" description="This function isn't easily testable. Fix it!"/>
        </docblock>
        <argument line="311">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="321" package="Core">
        <name>sendBody</name>
        <full_name>sendBody</full_name>
        <docblock line="316">
          <description>Send the Response's body to the client</description>
          <long-description></long-description>
          <tag line="316" name="return" description="The current object" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="333" package="Core">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="328">
          <description>Convert the Response to a string</description>
          <long-description></long-description>
          <tag line="328" name="return" description="The response as a string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="123">Don't use SERVER, use the REQUEST</todo>
    </markers>
  </file>
  <file path="core/Backend/Core/Exception.php" hash="abe3ebd035cefd314bdfe900776ccf37" package="Core\Exceptions">
    <docblock line="2">
      <description>File defining \Backend\Core\Exception.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="27" package="Core\Exceptions">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\Backend\Core\Exception</full_name>
      <docblock line="17">
        <description>Base Core Exception.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Core"/>
        <tag line="17" name="subpackage" description="Exceptions"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
    </class>
  </file>
  <file path="core/Backend/Core/Event/CallbackEvent.php" hash="4729cb85ae727ae14678ace64586a379" package="Core\Events">
    <docblock line="2">
      <description>File defining \Backend\Core\Event\CallbackEvent</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Events"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Event" line="34" package="Core\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>CallbackEvent</name>
      <full_name>\Backend\Core\Event\CallbackEvent</full_name>
      <docblock line="20">
        <description>The Callback Event.</description>
        <long-description>&lt;p&gt;This event is triggered when the Application has determined what Callback
should be executed after inspecting the current Request. It gives applications
the opportunity to transform and check the Callback before it's executed.&lt;/p&gt;</long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Events"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="41" namespace="Backend\Core\Event" package="Default">
        <name>$callback</name>
        <default></default>
        <docblock line="36">
          <description>The callback associated with the event.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="\Backend\Core\Event\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="48" package="Core\Events">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The callback associated with the event." type="\Backend\Core\Event\Backend\Interfaces\CallbackInterface" variable="$callback">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Interfaces\CallbackInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="58" package="Core\Events">
        <name>getCallback</name>
        <full_name>getCallback</full_name>
        <docblock line="53">
          <description>Get the current Callback.</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="\Backend\Core\Event\Backend\Interfaces\CallbackInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\CallbackInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="69" package="Core\Events">
        <name>setCallback</name>
        <full_name>setCallback</full_name>
        <docblock line="63">
          <description>Set the Callback for the Event.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="\Backend\Core\Event\Backend\Interfaces\CallbackInterface" variable="$callback">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\CallbackInterface</type>
          </tag>
          <tag line="63" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\CallbackEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\CallbackEvent</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Interfaces\CallbackInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="43" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $callback in __construct()</error>
      <error line="63" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $callback in setCallback()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Event/ResultEvent.php" hash="f85c794078b792876ac3bd26a390945d" package="Core\Events">
    <docblock line="2">
      <description>File defining \Backend\Core\Event\ResultEvent</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Events"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Event" line="34" package="Core\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ResultEvent</name>
      <full_name>\Backend\Core\Event\ResultEvent</full_name>
      <docblock line="20">
        <description>The ResultEvent Event.</description>
        <long-description>&lt;p&gt;This event is triggered when the Application has received a Result from a Callback.
It gives applications the opportunity to transform and check the Result before
it's transformed.&lt;/p&gt;</long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Events"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="42" namespace="Backend\Core\Event" package="Default">
        <name>$result</name>
        <default></default>
        <docblock line="37">
          <description>The result associated with the event.</description>
          <long-description></long-description>
          <tag line="37" name="var" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="Backend\Core\Event" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="44">
          <description>The Response associated with the event.</description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="56" package="Core\Events">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="51">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="51" name="param" description="The result associated with the event." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="69" package="Core\Events">
        <name>getResult</name>
        <full_name>getResult</full_name>
        <docblock line="64">
          <description>Get the current result.</description>
          <long-description></long-description>
          <tag line="64" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="80" package="Core\Events">
        <name>setResult</name>
        <full_name>setResult</full_name>
        <docblock line="74">
          <description>Set the result for the Event.</description>
          <long-description></long-description>
          <tag line="74" name="param" description="" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="74" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\ResponseEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\ResponseEvent</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="92" package="Core\Events">
        <name>getResponse</name>
        <full_name>getResponse</full_name>
        <docblock line="87">
          <description>Get the current Response.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="103" package="Core\Events">
        <name>setResponse</name>
        <full_name>setResponse</full_name>
        <docblock line="97">
          <description>Set the Response for the Event.</description>
          <long-description></long-description>
          <tag line="97" name="param" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface" variable="$response">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
          <tag line="97" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\ResponseEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\ResponseEvent</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$response</name>
          <default></default>
          <type>\Backend\Interfaces\ResponseInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="97" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $response in setResponse()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Event/RequestEvent.php" hash="ac0bdbb0bc11caf5daf088466321078b" package="Core\Events">
    <docblock line="2">
      <description>File defining \Backend\Core\Event\RequestEvent</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Events"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Event" line="34" package="Core\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>RequestEvent</name>
      <full_name>\Backend\Core\Event\RequestEvent</full_name>
      <docblock line="20">
        <description>The RequestEvent Event.</description>
        <long-description>&lt;p&gt;This event is triggered when the Application has received the Request to handle.
It gives applications the opportunity to transform and check the Request before
it's inspected.&lt;/p&gt;</long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Events"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="41" namespace="Backend\Core\Event" package="Default">
        <name>$request</name>
        <default></default>
        <docblock line="36">
          <description>The Request associated with the event.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="\Backend\Core\Event\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="48" package="Core\Events">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The request associated with the event." type="\Backend\Core\Event\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="58" package="Core\Events">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="53">
          <description>Get the current Request.</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="\Backend\Core\Event\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="69" package="Core\Events">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="63">
          <description>Set the Request for the Event.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="\Backend\Core\Event\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="63" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\RequestEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\RequestEvent</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="43" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $request in __construct()</error>
      <error line="63" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $request in setRequest()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Event/ResponseEvent.php" hash="951e3e8a7350ba3d55138635477cd007" package="Core\Events">
    <docblock line="2">
      <description>File defining \Backend\Core\Event\ResponseEvent</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Events"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Event" line="34" package="Core\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ResponseEvent</name>
      <full_name>\Backend\Core\Event\ResponseEvent</full_name>
      <docblock line="20">
        <description>The ResponseEvent Event.</description>
        <long-description>&lt;p&gt;This event is triggered when the Application has transformed a Request into a Response.
It gives applications the opportunity to transform and check the Response before
it's returned.&lt;/p&gt;</long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Events"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="41" namespace="Backend\Core\Event" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="36">
          <description>The Response associated with the event.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="48" package="Core\Events">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The response associated with the event." type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface" variable="$response">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$response</name>
          <default></default>
          <type>\Backend\Interfaces\ResponseInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="58" package="Core\Events">
        <name>getResponse</name>
        <full_name>getResponse</full_name>
        <docblock line="53">
          <description>Get the current Response.</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="69" package="Core\Events">
        <name>setResponse</name>
        <full_name>setResponse</full_name>
        <docblock line="63">
          <description>Set the Response for the Event.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface" variable="$response">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
          <tag line="63" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\ResponseEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\ResponseEvent</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$response</name>
          <default></default>
          <type>\Backend\Interfaces\ResponseInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="43" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $response in __construct()</error>
      <error line="63" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $response in setResponse()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Event/ExceptionEvent.php" hash="9865e9a41b4737b002383c4877beb27f" package="Core\Events">
    <docblock line="2">
      <description>File defining \Backend\Core\Event\ExceptionEvent</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Events"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Event" line="32" package="Core\Events">
      <extends>\Symfony\Component\EventDispatcher\Event</extends>
      <name>ExceptionEvent</name>
      <full_name>\Backend\Core\Event\ExceptionEvent</full_name>
      <docblock line="20">
        <description>The Exception Event.</description>
        <long-description>&lt;p&gt;This event is triggered when an unhandled Exception is thrown.&lt;/p&gt;</long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="Core"/>
        <tag line="20" name="subpackage" description="Events"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="39" namespace="Backend\Core\Event" package="Default">
        <name>$exception</name>
        <default></default>
        <docblock line="34">
          <description>The exception associated with the event.</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="46" namespace="Backend\Core\Event" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="41">
          <description>The Response associated with the event.</description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="53" package="Core\Events">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="48">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="The exception associated with the event." type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$exception</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="63" package="Core\Events">
        <name>getException</name>
        <full_name>getException</full_name>
        <docblock line="58">
          <description>Get the current Exception.</description>
          <long-description></long-description>
          <tag line="58" name="return" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="74" package="Core\Events">
        <name>setException</name>
        <full_name>setException</full_name>
        <docblock line="68">
          <description>Set the Exception for the event.</description>
          <long-description></long-description>
          <tag line="68" name="param" description="" type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="68" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\ExceptionEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\ExceptionEvent</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$exception</name>
          <default></default>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="86" package="Core\Events">
        <name>getResponse</name>
        <full_name>getResponse</full_name>
        <docblock line="81">
          <description>Get the current Response.</description>
          <long-description></long-description>
          <tag line="81" name="return" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Event" line="97" package="Core\Events">
        <name>setResponse</name>
        <full_name>setResponse</full_name>
        <docblock line="91">
          <description>Set the Response for the Event.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="" type="\Backend\Core\Event\Backend\Interfaces\ResponseInterface" variable="$response">
            <type by_reference="false">\Backend\Core\Event\Backend\Interfaces\ResponseInterface</type>
          </tag>
          <tag line="91" name="return" description="The current object." type="\Backend\Core\Event\Backend\Core\Event\ExceptionEvent">
            <type by_reference="false">\Backend\Core\Event\Backend\Core\Event\ExceptionEvent</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$response</name>
          <default></default>
          <type>\Backend\Interfaces\ResponseInterface</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="91" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $response in setResponse()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Autoloader.php" hash="76643d88edf271a050b3c786c2a838ad" package="Core\Utilities">
    <docblock line="2">
      <description>File defining Autoloader</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="73" type="Include Once" package="Default">
      <name/>
    </include>
    <include line="86" type="Include Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Core" line="27" package="Core\Utilities">
      <extends/>
      <name>Autoloader</name>
      <full_name>\Backend\Core\Autoloader</full_name>
      <docblock line="17">
        <description>The main autoloader.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Core"/>
        <tag line="17" name="subpackage" description="Utilities"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="34" namespace="Backend\Core" package="Default">
        <name>$baseFolders</name>
        <default>null</default>
        <docblock line="29">
          <description>The folders in which to check for classes.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core" line="41" package="Core\Utilities">
        <name>register</name>
        <full_name>register</full_name>
        <docblock line="36">
          <description>Register the autload function</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core" line="56" package="Core\Utilities">
        <name>autoload</name>
        <full_name>autoload</full_name>
        <docblock line="47">
          <description>Function to autoload Backend-CoreFiles classes</description>
          <long-description>&lt;p&gt;Register this function for use by calling \Backend\Core\Autoloader::register()&lt;/p&gt;</long-description>
          <tag line="47" name="param" description="The class name to auto load" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="return" description="If the class file was found and included" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$className</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core" line="100" package="Core\Utilities">
        <name>getBaseFolders</name>
        <full_name>getBaseFolders</full_name>
        <docblock line="95">
          <description>Get the Base folders</description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core" line="118" package="Core\Utilities">
        <name>setBaseFolders</name>
        <full_name>setBaseFolders</full_name>
        <docblock line="111">
          <description>Set the Base folders.</description>
          <long-description></long-description>
          <tag line="111" name="param" description="The base folders" type="array" variable="$folders">
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$folders</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Controller.php" hash="e026ad6f9f669d76dff2822304346d35" package="Core">
    <docblock line="2">
      <description>File defining the Core Controller</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="30" package="Core">
      <extends/>
      <implements>\Backend\Interfaces\ControllerInterface</implements>
      <name>Controller</name>
      <full_name>\Backend\Core\Controller</full_name>
      <docblock line="21">
        <description>Controller that acts as the connection between Models and Views.</description>
        <long-description></long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="Core"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" namespace="Backend\Core" package="Default">
        <name>$container</name>
        <default>null</default>
        <docblock line="32">
          <description>The Dependency Injection Container to be used when getting services.</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="\Backend\nterfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\nterfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="Backend\Core" package="Default">
        <name>$request</name>
        <default>null</default>
        <docblock line="39">
          <description>This contains the Request that's being actioned.</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="\Backend\nterfaces\RequestInterface">
            <type by_reference="false">\Backend\nterfaces\RequestInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="49" package="Core">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description>The constructor for the object</description>
          <long-description></long-description>
        </docblock>
        <argument line="50">
          <name>$container</name>
          <default>null</default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
        <argument line="51">
          <name>$request</name>
          <default>null</default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="65" package="Core">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="57">
          <description>Set the Request for the Controller.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="The request for the&#10;Controller." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="57" name="return" description="The current object." type="\Backend\Interfaces\ControllerInterface">
            <type by_reference="false">\Backend\Interfaces\ControllerInterface</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="77" package="Core">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="72">
          <description>Get the Controller's Request</description>
          <long-description></long-description>
          <tag line="72" name="return" description="The Controller's Request" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="90" package="Core">
        <name>setContainer</name>
        <full_name>setContainer</full_name>
        <docblock line="82">
          <description>Set the Controller's DI Container.</description>
          <long-description></long-description>
          <tag line="82" name="param" description="The DI Container for the Controller." type="\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
          <tag line="82" name="return" description="The current object." type="\Backend\Interfaces\ControllerInterface">
            <type by_reference="false">\Backend\Interfaces\ControllerInterface</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="103" package="Core">
        <name>getContainer</name>
        <full_name>getContainer</full_name>
        <docblock line="97">
          <description>Get the Controller's DI Container</description>
          <long-description></long-description>
          <tag line="97" name="return" description="The&#10;Controller's DI Container" type="\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="116" package="Core">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="108">
          <description>Create a redirection Response</description>
          <long-description></long-description>
          <tag line="108" name="param" description="The location to redirect to" type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="param" description="The HTTP status code to use" type="int" variable="$responseCode">
            <type by_reference="false">int</type>
          </tag>
          <tag line="108" name="return" description="The Response object" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$location</name>
          <default></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$responseCode</name>
          <default>302</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="46" code="50015">Argument $container is missing from the Docblock of __construct()</error>
      <error line="46" code="50015">Argument $request is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Request.php" hash="c16f7a22a341e969fd55197df546167f" package="Core">
    <docblock line="2">
      <description>File defining Request</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="29" package="Core">
      <extends/>
      <implements>\Backend\Interfaces\RequestInterface</implements>
      <name>Request</name>
      <full_name>\Backend\Core\Request</full_name>
      <docblock line="19">
        <description>The Request class which helps determine the Path and request format.</description>
        <long-description></long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="Core"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
        <tag line="19" name="todo" description="Refactore MimeType methods into separate class."/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="Backend\Core" package="Default">
        <name>$serverInfo</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="Backend\Core" package="Default">
        <name>$path</name>
        <default>null</default>
        <docblock line="33">
          <description>The absolute path to the site.</description>
          <long-description>&lt;p&gt;Used for links to assets.&lt;/p&gt;</long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="45" namespace="Backend\Core" package="Default">
        <name>$url</name>
        <default>null</default>
        <docblock line="40">
          <description>The URL for the Request.</description>
          <long-description></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="Backend\Core" package="Default">
        <name>$headers</name>
        <default>null</default>
        <docblock line="47">
          <description>The headers of the Request.</description>
          <long-description></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="Backend\Core" package="Default">
        <name>$body</name>
        <default>null</default>
        <docblock line="54">
          <description>The body of the Request.</description>
          <long-description></long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" namespace="Backend\Core" package="Default">
        <name>$query</name>
        <default>null</default>
        <docblock line="61">
          <description>The query of the Request.</description>
          <long-description></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" namespace="Backend\Core" package="Default">
        <name>$method</name>
        <default>null</default>
        <docblock line="68">
          <description>The method of the Request.</description>
          <long-description>&lt;p&gt;Can be one of GET, POST, PUT, DELETE, HEAD or OPTIONS.&lt;/p&gt;</long-description>
          <tag line="68" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" namespace="Backend\Core" package="Default">
        <name>$extension</name>
        <default>null</default>
        <docblock line="75">
          <description>The extension of the Request.</description>
          <long-description></long-description>
          <tag line="75" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="87" namespace="Backend\Core" package="Default">
        <name>$format</name>
        <default>null</default>
        <docblock line="82">
          <description>The requested format of the Request.</description>
          <long-description></long-description>
          <tag line="82" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="94" namespace="Backend\Core" package="Default">
        <name>$mimeType</name>
        <default>null</default>
        <docblock line="89">
          <description>The requested mime type of the Request.</description>
          <long-description></long-description>
          <tag line="89" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="101" namespace="Backend\Core" package="Default">
        <name>$inputStream</name>
        <default>'php://input'</default>
        <docblock line="96">
          <description>Stream location to read content from.</description>
          <long-description></long-description>
          <tag line="96" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="108" namespace="Backend\Core" package="Default">
        <name>$allowedMethods</name>
        <default>array('DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT')</default>
        <docblock line="103">
          <description>HTTP Methods allowed in the Request.</description>
          <long-description></long-description>
          <tag line="103" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="126" package="Core">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="112">
          <description>The constructor for the class</description>
          <long-description>&lt;p&gt;If no method is supplied, it's determined by one of the following:
1. A _method POST variable
2. A X_HTTP_METHOD_OVERRIDE header
3. The REQUEST_METHOD&lt;/p&gt;</long-description>
          <tag line="112" name="param" description="The URL of the request" type="mixed" variable="$url">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="112" name="param" description="The request method. Can be one of GET, POST, PUT,&#10;DELETE or HEAD" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="The request data. Defaults to the HTTP request data&#10;if not supplied" type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$url</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="126">
          <name>$method</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="126">
          <name>$body</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core" line="151" package="Core">
        <name>parseUrl</name>
        <full_name>parseUrl</full_name>
        <docblock line="144">
          <description>Parse the given URL, and populate the object</description>
          <long-description></long-description>
          <tag line="144" name="param" description="The URL to parse" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="The current object" type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="200" package="Core">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="195">
          <description>Return the HTTP Method used to make the request.</description>
          <long-description></long-description>
          <tag line="195" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="242" package="Core">
        <name>setMethod</name>
        <full_name>setMethod</full_name>
        <docblock line="235">
          <description>Set the request's method</description>
          <long-description></long-description>
          <tag line="235" name="param" description="The Request Method" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="return" description="The current object" type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="259" package="Core">
        <name>buildHeaders</name>
        <full_name>buildHeaders</full_name>
        <docblock line="254">
          <description>Build the headers if necessary.</description>
          <long-description></long-description>
          <tag line="254" name="return" description="The current object." type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$force</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="285" package="Core">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="280">
          <description>Return the Request headers.</description>
          <long-description></long-description>
          <tag line="280" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="308" package="Core">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="301">
          <description>Set the Request headers.</description>
          <long-description></long-description>
          <tag line="301" name="param" description="An array of headers for the Request." type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="301" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="322" package="Core">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="315">
          <description>Return the specified Request header.</description>
          <long-description></long-description>
          <tag line="315" name="param" description="The name of the header to return." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="315" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="322">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="342" package="Core">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="331">
          <description>Set the specified Request headers.</description>
          <long-description>&lt;p&gt;If the name is null, the header won't have a name, and will contain only
the value of the header.&lt;/p&gt;</long-description>
          <tag line="331" name="param" description="The name of the header to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="param" description="The value of the header." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="331" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="342">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="362" package="Core">
        <name>getPath</name>
        <full_name>getPath</full_name>
        <docblock line="354">
          <description>Return the path of the current Request.</description>
          <long-description>&lt;p&gt;In http://backend-php.net/index.php/something, the path will be
/something&lt;/p&gt;</long-description>
          <tag line="354" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="382" package="Core">
        <name>setPath</name>
        <full_name>setPath</full_name>
        <docblock line="373">
          <description>Set and cleanup the path.</description>
          <long-description>&lt;p&gt;The path should be URL decoded before calling this method.&lt;/p&gt;</long-description>
          <tag line="373" name="param" description="The path" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="373" name="return" description="The current object" type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="382">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="403" package="Core">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="398">
          <description>Return the url to this Request.</description>
          <long-description></long-description>
          <tag line="398" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="419" package="Core">
        <name>setUrl</name>
        <full_name>setUrl</full_name>
        <docblock line="412">
          <description>Set the Request's URL.</description>
          <long-description></long-description>
          <tag line="412" name="param" description="The url." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="412" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core" line="433" package="Core">
        <name>prepareUrl</name>
        <full_name>prepareUrl</full_name>
        <docblock line="426">
          <description>Prepare the URL.</description>
          <long-description>&lt;p&gt;Build the URL from the current Server Info.&lt;/p&gt;</long-description>
          <tag line="426" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="468" package="Core">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="461">
          <description>Determine the requested MIME Type for the request</description>
          <long-description></long-description>
          <tag line="461" name="return" description="The MIME Type for the request" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="461" name="todo" description="This doesn't check the q variable -&#10;https://github.com/backend/Backend-PHP-Core/issues/1"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="503" package="Core">
        <name>setMimeType</name>
        <full_name>setMimeType</full_name>
        <docblock line="496">
          <description>Set the Request MIME Type.</description>
          <long-description></long-description>
          <tag line="496" name="param" description="The Request's MIME Type." type="mixed" variable="$mimeType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="496" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="503">
          <name>$mimeType</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core" line="518" package="Core">
        <name>compareMimeTypes</name>
        <full_name>compareMimeTypes</full_name>
        <docblock line="510">
          <description>Compare two mime types.</description>
          <long-description>&lt;p&gt;Used for sorting.&lt;/p&gt;</long-description>
          <tag line="510" name="param" description="The first mime type." type="string" variable="$tOne">
            <type by_reference="false">string</type>
          </tag>
          <tag line="510" name="param" description="The first mime type." type="string" variable="$tTwo">
            <type by_reference="false">string</type>
          </tag>
          <tag line="510" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="518">
          <name>$tOne</name>
          <default></default>
          <type/>
        </argument>
        <argument line="518">
          <name>$tTwo</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core" line="546" package="Core">
        <name>prepareMimeType</name>
        <full_name>prepareMimeType</full_name>
        <docblock line="539">
          <description>Prepare a mime type for comparison.</description>
          <long-description></long-description>
          <tag line="539" name="param" description="The string representation of the mime type to prepare." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="539" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="546">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="567" package="Core">
        <name>getSpecifiedFormat</name>
        <full_name>getSpecifiedFormat</full_name>
        <docblock line="562">
          <description>Determine the requested format for the request</description>
          <long-description></long-description>
          <tag line="562" name="return" description="The format for the request" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="590" package="Core">
        <name>setSpecifiedFormat</name>
        <full_name>setSpecifiedFormat</full_name>
        <docblock line="583">
          <description>Set the Request Specified Format.</description>
          <long-description></long-description>
          <tag line="583" name="param" description="The Request's specified format." type="mixed" variable="$format">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="583" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="590">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="602" package="Core">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="597">
          <description>Get the Request Extension</description>
          <long-description></long-description>
          <tag line="597" name="return" description="The extension of the request" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="621" package="Core">
        <name>setExtension</name>
        <full_name>setExtension</full_name>
        <docblock line="614">
          <description>Set the Request Extension.</description>
          <long-description></long-description>
          <tag line="614" name="param" description="The Request's extension." type="mixed" variable="$extension">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="614" name="return" description="" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
        <argument line="621">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="635" package="Core">
        <name>getServerInfo</name>
        <full_name>getServerInfo</full_name>
        <docblock line="628">
          <description>Return the serverInfo property</description>
          <long-description></long-description>
          <tag line="628" name="param" description="A specific piece of Server Info" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="628" name="return" description="The serverInfo property" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="635">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="669" package="Core">
        <name>setServerInfo</name>
        <full_name>setServerInfo</full_name>
        <docblock line="661">
          <description>Set serverInfo values.</description>
          <long-description></long-description>
          <tag line="661" name="param" description="The name of the serverInfo value to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="661" name="param" description="The value of the serverInfo value." type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="661" name="return" description="The current object" type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="669">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="669">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core" line="686" package="Core">
        <name>isMethod</name>
        <full_name>isMethod</full_name>
        <docblock line="679">
          <description>Utility function to check if the current method equals the specified method</description>
          <long-description></long-description>
          <tag line="679" name="param" description="The method to check" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="679" name="return" description="If the current method equals the specified method" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="686">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="696" package="Core">
        <name>isDelete</name>
        <full_name>isDelete</full_name>
        <docblock line="691">
          <description>Check if the current request is a DELETE request</description>
          <long-description></long-description>
          <tag line="691" name="return" description="If the current request is a DELETE request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="706" package="Core">
        <name>isGet</name>
        <full_name>isGet</full_name>
        <docblock line="701">
          <description>Check if the current request is a GET request</description>
          <long-description></long-description>
          <tag line="701" name="return" description="If the current request is a GET request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="716" package="Core">
        <name>isHead</name>
        <full_name>isHead</full_name>
        <docblock line="711">
          <description>Check if the current request is a HEAD request</description>
          <long-description></long-description>
          <tag line="711" name="return" description="If the current request is a HEAD request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="726" package="Core">
        <name>isOptions</name>
        <full_name>isOptions</full_name>
        <docblock line="721">
          <description>Check if the current request is a OPTIONS request</description>
          <long-description></long-description>
          <tag line="721" name="return" description="If the current request is a OPTIONS request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="736" package="Core">
        <name>isPost</name>
        <full_name>isPost</full_name>
        <docblock line="731">
          <description>Check if the current request is a POST request</description>
          <long-description></long-description>
          <tag line="731" name="return" description="If the current request is a POST request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="746" package="Core">
        <name>isPut</name>
        <full_name>isPut</full_name>
        <docblock line="741">
          <description>Check if the current request is a PUT request</description>
          <long-description></long-description>
          <tag line="741" name="return" description="If the current request is a PUT request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="762" package="Core">
        <name>parseContent</name>
        <full_name>parseContent</full_name>
        <docblock line="751">
          <description>Parse the content / body of the Request</description>
          <long-description></long-description>
          <tag line="751" name="param" description="The type of the content" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="751" name="param" description="The content to parse" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="751" name="todo" description="Expand this to include other content types"/>
          <tag line="751" name="todo" description="Refactor so that we can use thirdparty / external parsers -&#10;https://github.com/backend/Backend-PHP-Core/issues/2"/>
          <tag line="751" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="762">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="762">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="811" package="Core">
        <name>getBody</name>
        <full_name>getBody</full_name>
        <docblock line="806">
          <description>Return the request's body.</description>
          <long-description></long-description>
          <tag line="806" name="return" description="The Request body" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="859" package="Core">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="850">
          <description>Set the request's body.</description>
          <long-description>&lt;p&gt;Strings will be parsed for variables and objects will be casted to arrays.&lt;/p&gt;</long-description>
          <tag line="850" name="param" description="The Request's body" type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="850" name="return" description="The current object." type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="859">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="876" package="Core">
        <name>getQuery</name>
        <full_name>getQuery</full_name>
        <docblock line="871">
          <description>Return the request's query data.</description>
          <long-description></long-description>
          <tag line="871" name="return" description="The Request query data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="895" package="Core">
        <name>setQuery</name>
        <full_name>setQuery</full_name>
        <docblock line="886">
          <description>Set the request's query data.</description>
          <long-description>&lt;p&gt;Strings will be parsed for variables and objects will be casted to arrays.&lt;/p&gt;</long-description>
          <tag line="886" name="param" description="The Request's body" type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="886" name="return" description="The current object." type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="895">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core" line="915" package="Core">
        <name>fromCli</name>
        <full_name>fromCli</full_name>
        <docblock line="907">
          <description>Check if this requests originates from a CLI.</description>
          <long-description>&lt;p&gt;This is hidden from the outside world because for application code a Request
will be a Request, regardless of where it came from.&lt;/p&gt;</long-description>
          <tag line="907" name="return" description="If this is a CLI request" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="927" package="Core">
        <name>setInputStream</name>
        <full_name>setInputStream</full_name>
        <docblock line="920">
          <description>Set the input stream.</description>
          <long-description></long-description>
          <tag line="920" name="param" description="The stream." type="string" variable="$stream">
            <type by_reference="false">string</type>
          </tag>
          <tag line="920" name="return" description="The current object." type="\Backend\Core\Request">
            <type by_reference="false">\Backend\Core\Request</type>
          </tag>
        </docblock>
        <argument line="927">
          <name>$stream</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="939" package="Core">
        <name>getInputStream</name>
        <full_name>getInputStream</full_name>
        <docblock line="934">
          <description>Get the input stream.</description>
          <long-description></long-description>
          <tag line="934" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="31" code="50018">No DocBlock was found for property $serverInfo</error>
      <error line="254" code="50015">Argument $force is missing from the Docblock of buildHeaders()</error>
      <error line="886" code="50014">Name of argument $query does not match with the DocBlock's name $body in setQuery()</error>
      <notice line="886" code="50013">Parameter $body could not be found in setQuery()</notice>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/UrlGeneratorTest.php" hash="5bf0bbc4eb6f7d144376d5d2aa163500" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\UrlGeneratorTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>UrlGeneratorTest</name>
      <full_name>\Backend\Core\Tests\Utilities\UrlGeneratorTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Utilities\UrlGenerator class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="34" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="29">
          <description>Test the class constructor and default values.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="49" package="CoreTests">
        <name>testGeneratorForRoute</name>
        <full_name>testGeneratorForRoute</full_name>
        <docblock line="44">
          <description>Test the generator method for routes.</description>
          <long-description></long-description>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="84" package="CoreTests">
        <name>testGeneratorForControllers</name>
        <full_name>testGeneratorForControllers</full_name>
        <docblock line="79">
          <description>Test the generator method for controllers.</description>
          <long-description></long-description>
          <tag line="79" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="119" package="CoreTests">
        <name>testInvalidRoute</name>
        <full_name>testInvalidRoute</full_name>
        <docblock line="112">
          <description>Test if an exception is thrown for unknown routes.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="112" name="expectedException" description="\RuntimeException"/>
          <tag line="112" name="expectedExceptionMessage" description="Undefined Route"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="133" package="CoreTests">
        <name>testContextAccessors</name>
        <full_name>testContextAccessors</full_name>
        <docblock line="128">
          <description>Test the context getter and setter</description>
          <long-description></long-description>
          <tag line="128" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="150" package="CoreTests">
        <name>testConfigAccessors</name>
        <full_name>testConfigAccessors</full_name>
        <docblock line="145">
          <description>Test the config getter and setter</description>
          <long-description></long-description>
          <tag line="145" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/DependencyInjectionContainerTest.php" hash="6966f446d77aa8237407b64aaeed1431" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\DependencyInjectionContainerTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="59" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Core\Utilities\Tests" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>DependencyInjectionContainerTest</name>
      <full_name>\Backend\Core\Utilities\Tests\DependencyInjectionContainerTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Utilities\DependencyInjectionContainer class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="35" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="29">
          <description>Test the constructor</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="29" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::__construct" refers="\Backend\Core\Utilities\DependencyInjectionContainer::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="57" package="CoreTests">
        <name>testDefinitions</name>
        <full_name>testDefinitions</full_name>
        <docblock line="50">
          <description>Test the adding of components through a definition.</description>
          <long-description></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="50" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::addComponent" refers="\Backend\Core\Utilities\DependencyInjectionContainer::addComponent"/>
          <tag line="50" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::resolve" refers="\Backend\Core\Utilities\DependencyInjectionContainer::resolve"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="102" package="CoreTests">
        <name>testInvalidDefinition</name>
        <full_name>testInvalidDefinition</full_name>
        <docblock line="95">
          <description>Test for invalid definitions.</description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="95" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="95" name="expectedExceptionMessage" description="Invalid Service Definition"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="119" package="CoreTests">
        <name>testInvalidConfig</name>
        <full_name>testInvalidConfig</full_name>
        <docblock line="112">
          <description>Test an invalid DependencyInjectionContainer config.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="112" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="112" name="expectedExceptionMessage" description="Invalid DIC Configuration"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="131" package="CoreTests">
        <name>testInvalidTag</name>
        <full_name>testInvalidTag</full_name>
        <docblock line="124">
          <description>Test an invalid DependencyInjectionContainer Tag config.</description>
          <long-description></long-description>
          <tag line="124" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="124" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="124" name="expectedExceptionMessage" description="No Tag name defined"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="153" package="CoreTests">
        <name>testServiceAccessors</name>
        <full_name>testServiceAccessors</full_name>
        <docblock line="146">
          <description>Test getting and setting services.</description>
          <long-description></long-description>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="146" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::get" refers="\Backend\Core\Utilities\DependencyInjectionContainer::get"/>
          <tag line="146" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::set" refers="\Backend\Core\Utilities\DependencyInjectionContainer::set"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="168" package="CoreTests">
        <name>testParameterAccessors</name>
        <full_name>testParameterAccessors</full_name>
        <docblock line="160">
          <description>Test getting and setting parameters.</description>
          <long-description></long-description>
          <tag line="160" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="160" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::getParameter" refers="\Backend\Core\Utilities\DependencyInjectionContainer::getParameter"/>
          <tag line="160" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::setParameter" refers="\Backend\Core\Utilities\DependencyInjectionContainer::setParameter"/>
          <tag line="160" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::hasParameter" refers="\Backend\Core\Utilities\DependencyInjectionContainer::hasParameter"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Utilities\Tests" line="185" package="CoreTests">
        <name>testInvalidService</name>
        <full_name>testInvalidService</full_name>
        <docblock line="177">
          <description>Test trying to get an invalid service.</description>
          <long-description></long-description>
          <tag line="177" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="177" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="177" name="expectedExceptionMessage" description="Undefined Implementation"/>
          <tag line="177" name="covers" description="\Backend\Core\Utilities\DependencyInjectionContainer::get" refers="\Backend\Core\Utilities\DependencyInjectionContainer::get"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/ConfigTest.php" hash="f9fe492bf1558728bd1d9b04e593d7e8" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\ConfigTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="28" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ConfigTest</name>
      <full_name>\Backend\Core\Tests\Utilities\ConfigTest</full_name>
      <docblock line="19">
        <description>Class to test the \Backend\Core\Utilities\Config class</description>
        <long-description></long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="CoreTests"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="35" package="CoreTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="30">
          <description>Set up the test</description>
          <long-description></long-description>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="52" package="CoreTests">
        <name>testInitialBaseFolders</name>
        <full_name>testInitialBaseFolders</full_name>
        <docblock line="46">
          <description>Test the default Base Folders</description>
          <long-description></long-description>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="46" name="covers" description="\Backend\Core\Utilities\Config::getBaseFolders" refers="\Backend\Core\Utilities\Config::getBaseFolders"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="64" package="CoreTests">
        <name>testBaseFoldersAccessors</name>
        <full_name>testBaseFoldersAccessors</full_name>
        <docblock line="57">
          <description>Test the base folders getter and settor</description>
          <long-description></long-description>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="57" name="covers" description="\Backend\Core\Utilities\Config::getBaseFolders" refers="\Backend\Core\Utilities\Config::getBaseFolders"/>
          <tag line="57" name="covers" description="\Backend\Core\Utilities\Config::setBaseFolders" refers="\Backend\Core\Utilities\Config::setBaseFolders"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="79" package="CoreTests">
        <name>testInvalidParser</name>
        <full_name>testInvalidParser</full_name>
        <docblock line="71">
          <description>Check for invalid Parser.</description>
          <long-description></long-description>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="71" name="expectedException" description="\Backend\Core\Exceptions\DuckTypeException"/>
          <tag line="71" name="expectedExceptionMessage" description="Expected an object with a parse method"/>
          <tag line="71" name="covers" description="\Backend\Core\Utilities\Config::__construct" refers="\Backend\Core\Utilities\Config::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="92" package="CoreTests">
        <name>testInvalidConfigValue</name>
        <full_name>testInvalidConfigValue</full_name>
        <docblock line="84">
          <description>Check for invalid Config values.</description>
          <long-description></long-description>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="84" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="84" name="expectedExceptionMessage" description="Invalid configuration values"/>
          <tag line="84" name="covers" description="\Backend\Core\Utilities\Config::setAll" refers="\Backend\Core\Utilities\Config::setAll"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="106" package="CoreTests">
        <name>testSet</name>
        <full_name>testSet</full_name>
        <docblock line="100">
          <description>Test setting the config.</description>
          <long-description></long-description>
          <tag line="100" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="100" name="covers" description="\Backend\Core\Utilities\Config::setAll" refers="\Backend\Core\Utilities\Config::setAll"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="125" package="CoreTests">
        <name>testInvalidParserSetter</name>
        <full_name>testInvalidParserSetter</full_name>
        <docblock line="117">
          <description>Check for invalid parsers.</description>
          <long-description></long-description>
          <tag line="117" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="117" name="expectedException" description="\Backend\Core\Exceptions\DuckTypeException"/>
          <tag line="117" name="expectedExceptionMessage" description="Expected an object with a parse method"/>
          <tag line="117" name="covers" description="\Backend\Core\Utilities\Config::setParser" refers="\Backend\Core\Utilities\Config::setParser"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="137" package="CoreTests">
        <name>testParserAccessors</name>
        <full_name>testParserAccessors</full_name>
        <docblock line="130">
          <description>Test the parser getters and setters.</description>
          <long-description></long-description>
          <tag line="130" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="130" name="covers" description="\Backend\Core\Utilities\Config::setParser" refers="\Backend\Core\Utilities\Config::setParser"/>
          <tag line="130" name="covers" description="\Backend\Core\Utilities\Config::getParser" refers="\Backend\Core\Utilities\Config::getParser"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="153" package="CoreTests">
        <name>testInvalidFile</name>
        <full_name>testInvalidFile</full_name>
        <docblock line="145">
          <description>Test checking for an invalid config file.</description>
          <long-description></long-description>
          <tag line="145" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="145" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="145" name="expectedExceptionMessage" description="Invalid Configuration File"/>
          <tag line="145" name="covers" description="\Backend\Core\Utilities\Config::fromFile" refers="\Backend\Core\Utilities\Config::fromFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="166" package="CoreTests">
        <name>testFromFile</name>
        <full_name>testFromFile</full_name>
        <docblock line="160">
          <description>Test the fromFile method.</description>
          <long-description></long-description>
          <tag line="160" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="160" name="covers" description="\Backend\Core\Utilities\Config::fromFile" refers="\Backend\Core\Utilities\Config::fromFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="186" package="CoreTests">
        <name>testGetNamed</name>
        <full_name>testGetNamed</full_name>
        <docblock line="180">
          <description>Test the getNamed method.</description>
          <long-description></long-description>
          <tag line="180" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="180" name="covers" description="\Backend\Core\Utilities\Config::getNamed" refers="\Backend\Core\Utilities\Config::getNamed"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="204" package="CoreTests">
        <name>testConfigNotFound</name>
        <full_name>testConfigNotFound</full_name>
        <docblock line="196">
          <description>Test an unsuccesful getNamed call.</description>
          <long-description></long-description>
          <tag line="196" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="196" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="196" name="expectedExceptionMessage" description="Could not find No_such_file Configuration file."/>
          <tag line="196" name="covers" description="\Backend\Core\Utilities\Config::getNamed" refers="\Backend\Core\Utilities\Config::getNamed"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="219" package="CoreTests">
        <name>testValueAccessors</name>
        <full_name>testValueAccessors</full_name>
        <docblock line="210">
          <description>Test the value getters and setters method.</description>
          <long-description></long-description>
          <tag line="210" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="210" name="covers" description="\Backend\Core\Utilities\Config::__get" refers="\Backend\Core\Utilities\Config::__get"/>
          <tag line="210" name="covers" description="\Backend\Core\Utilities\Config::get" refers="\Backend\Core\Utilities\Config::get"/>
          <tag line="210" name="covers" description="\Backend\Core\Utilities\Config::__set" refers="\Backend\Core\Utilities\Config::__set"/>
          <tag line="210" name="covers" description="\Backend\Core\Utilities\Config::set" refers="\Backend\Core\Utilities\Config::set"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="246" package="CoreTests">
        <name>testIteratorMethods</name>
        <full_name>testIteratorMethods</full_name>
        <docblock line="236">
          <description>Test the iterator methods.</description>
          <long-description></long-description>
          <tag line="236" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="236" name="covers" description="\Backend\Core\Utilities\Config::key" refers="\Backend\Core\Utilities\Config::key"/>
          <tag line="236" name="covers" description="\Backend\Core\Utilities\Config::current" refers="\Backend\Core\Utilities\Config::current"/>
          <tag line="236" name="covers" description="\Backend\Core\Utilities\Config::valid" refers="\Backend\Core\Utilities\Config::valid"/>
          <tag line="236" name="covers" description="\Backend\Core\Utilities\Config::next" refers="\Backend\Core\Utilities\Config::next"/>
          <tag line="236" name="covers" description="\Backend\Core\Utilities\Config::rewind" refers="\Backend\Core\Utilities\Config::rewind"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/FormatterTest.php" hash="e661c020a261aa797278fb9dca16d2c4" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\FormatterTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="117" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>FormatterTest</name>
      <full_name>\Backend\Core\Tests\Utilities\FormatterTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Utilities\Formatter class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="34" package="CoreTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="29">
          <description>Set up the test</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="46" package="CoreTests">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="41">
          <description>Tear down the test</description>
          <long-description></long-description>
          <tag line="41" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="56" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="51">
          <description>Test the constructor.</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="68" package="CoreTests">
        <name>testBaseFoldersAccessors</name>
        <full_name>testBaseFoldersAccessors</full_name>
        <docblock line="65">
          <description>Test the base folders getter and settor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="80" package="CoreTests">
        <name>testTransform</name>
        <full_name>testTransform</full_name>
        <docblock line="75">
          <description>Test the transform method.</description>
          <long-description></long-description>
          <tag line="75" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="93" package="CoreTests">
        <name>testTransformReturnsResponse</name>
        <full_name>testTransformReturnsResponse</full_name>
        <docblock line="88">
          <description>Test the transform method.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="106" package="CoreTests">
        <name>testFactory</name>
        <full_name>testFactory</full_name>
        <docblock line="101">
          <description>Test the factory method.</description>
          <long-description></long-description>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="153" package="CoreTests">
        <name>testFormatAccessors</name>
        <full_name>testFormatAccessors</full_name>
        <docblock line="148">
          <description>Test the Formats setter and getter.</description>
          <long-description></long-description>
          <tag line="148" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="169" package="CoreTests">
        <name>testGetRequestFormat</name>
        <full_name>testGetRequestFormat</full_name>
        <docblock line="164">
          <description>Test the getRequestFormat method</description>
          <long-description></long-description>
          <tag line="164" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="211" package="CoreTests">
        <name>testIsValidFormat</name>
        <full_name>testIsValidFormat</full_name>
        <docblock line="206">
          <description>Test the isValidFormat method</description>
          <long-description></long-description>
          <tag line="206" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/RequestContextTest.php" hash="35ec0e42e5e81be6a6b0670253dbe91f" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\RequestContextTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RequestContextTest</name>
      <full_name>\Backend\Core\Tests\Utilities\RequestContextTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Utilities\RequestContext class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="34" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="29">
          <description>Test the class constructor and default values.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="54" package="CoreTests">
        <name>testAccessors</name>
        <full_name>testAccessors</full_name>
        <docblock line="49">
          <description>Test the accessors.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="76" package="CoreTests">
        <name>testInvalidUrl</name>
        <full_name>testInvalidUrl</full_name>
        <docblock line="69">
          <description>Test an invalid URL.</description>
          <long-description></long-description>
          <tag line="69" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="69" name="expectedException" description="\RuntimeException"/>
          <tag line="69" name="expectedExceptionMessage" description="Unparsable URL Requested"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/CallbackTest.php" hash="6931e3be067e0cda078c9b6dd67bfa50" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\CallbackTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>CallbackTest</name>
      <full_name>\Backend\Core\Tests\Utilities\CallbackTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Utilities\Callback class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="34" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="29">
          <description>Test the constructor.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="54" package="CoreTests">
        <name>testClassAccessors</name>
        <full_name>testClassAccessors</full_name>
        <docblock line="49">
          <description>Test the Class setter and getter.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="71" package="CoreTests">
        <name>testInvalidClassType</name>
        <full_name>testInvalidClassType</full_name>
        <docblock line="63">
          <description>Test checking for invalid class type.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="63" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="63" name="expectedExceptionMessage" description="Invalid type for class name, string expected, got&#10;object"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="86" package="CoreTests">
        <name>testNonExistantClass</name>
        <full_name>testNonExistantClass</full_name>
        <docblock line="77">
          <description>Test checking for a non existing class.</description>
          <long-description></long-description>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="77" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="77" name="expectedExceptionMessage" description="Trying to set non-existant class in&#10;Callback: \SomeClass"/>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="97" package="CoreTests">
        <name>testObjectAccessors</name>
        <full_name>testObjectAccessors</full_name>
        <docblock line="92">
          <description>Test the Object setter and getter.</description>
          <long-description></long-description>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="112" package="CoreTests">
        <name>testInvalidObject</name>
        <full_name>testInvalidObject</full_name>
        <docblock line="105">
          <description>Test checking for an invalid object.</description>
          <long-description></long-description>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="105" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="105" name="expectedExceptionMessage" description="Invalid type for object, object expected"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="123" package="CoreTests">
        <name>testMethodAccessors</name>
        <full_name>testMethodAccessors</full_name>
        <docblock line="118">
          <description>Test the Method setter and getter.</description>
          <long-description></long-description>
          <tag line="118" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="139" package="CoreTests">
        <name>testInvalidMethodType</name>
        <full_name>testInvalidMethodType</full_name>
        <docblock line="132">
          <description>Test checking for an invalid method type.</description>
          <long-description></long-description>
          <tag line="132" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="132" name="expectedExceptionMessage" description="Invalid type for method, string expected"/>
          <tag line="132" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="150" package="CoreTests">
        <name>testFunctionAccessors</name>
        <full_name>testFunctionAccessors</full_name>
        <docblock line="145">
          <description>Test the Function setter and getter.</description>
          <long-description></long-description>
          <tag line="145" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="166" package="CoreTests">
        <name>testInvalidFunctionType</name>
        <full_name>testInvalidFunctionType</full_name>
        <docblock line="159">
          <description>Test checking for an invalid function type.</description>
          <long-description></long-description>
          <tag line="159" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="159" name="expectedExceptionMessage" description="Invalid type for function, string expected"/>
          <tag line="159" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="177" package="CoreTests">
        <name>testArgumentsAccessors</name>
        <full_name>testArgumentsAccessors</full_name>
        <docblock line="172">
          <description>Test the Arguments setter and getter.</description>
          <long-description></long-description>
          <tag line="172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="190" package="CoreTests">
        <name>dataExecute</name>
        <full_name>dataExecute</full_name>
        <docblock line="185">
          <description>Data provider for testExecute</description>
          <long-description></long-description>
          <tag line="185" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="235" package="CoreTests">
        <name>testExecute</name>
        <full_name>testExecute</full_name>
        <docblock line="226">
          <description>Test the different execute paths</description>
          <long-description></long-description>
          <tag line="226" name="param" description="The callback to execute." type="\Backend\Core\Utilities\Callback" variable="$callback">
            <type by_reference="false">\Backend\Core\Utilities\Callback</type>
          </tag>
          <tag line="226" name="param" description="The desired result." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="226" name="dataProvider" description="dataExecute"/>
          <tag line="226" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="235">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Core\Utilities\Callback</type>
        </argument>
        <argument line="235">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="247" package="CoreTests">
        <name>testInvalidExecute</name>
        <full_name>testInvalidExecute</full_name>
        <docblock line="240">
          <description>Check for invalid callback when executing</description>
          <long-description></long-description>
          <tag line="240" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="240" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="240" name="expectedExceptionMessage" description="Unexecutable Callback"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="258" package="CoreTests">
        <name>dataIncompleteCallback</name>
        <full_name>dataIncompleteCallback</full_name>
        <docblock line="253">
          <description>Data provider for testInvalidCallback</description>
          <long-description></long-description>
          <tag line="253" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="288" package="CoreTests">
        <name>testIncompleteCallback</name>
        <full_name>testIncompleteCallback</full_name>
        <docblock line="279">
          <description>Test checking for an incomplete callback.</description>
          <long-description></long-description>
          <tag line="279" name="param" description="The callback to&#10;check." type="\Backend\Core\Utilities\Callback" variable="$callback">
            <type by_reference="false">\Backend\Core\Utilities\Callback</type>
          </tag>
          <tag line="279" name="dataProvider" description="dataIncompleteCallback"/>
          <tag line="279" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="288">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Core\Utilities\Callback</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="298" package="CoreTests">
        <name>dataInvalidCallback</name>
        <full_name>dataInvalidCallback</full_name>
        <docblock line="293">
          <description>Data provider for testInvalidCallback.</description>
          <long-description></long-description>
          <tag line="293" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="328" package="CoreTests">
        <name>testInvalidCallback</name>
        <full_name>testInvalidCallback</full_name>
        <docblock line="318">
          <description>Test checking for an invalid callback.</description>
          <long-description></long-description>
          <tag line="318" name="param" description="The callback to check." type="\Backend\Core\Utilities\Callback" variable="$callback">
            <type by_reference="false">\Backend\Core\Utilities\Callback</type>
          </tag>
          <tag line="318" name="dataProvider" description="dataInvalidCallback"/>
          <tag line="318" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="318" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="318" name="expectedExceptionMessage" description="Unexecutable Callback"/>
        </docblock>
        <argument line="328">
          <name>$callback</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="338" package="CoreTests">
        <name>dataValidCallback</name>
        <full_name>dataValidCallback</full_name>
        <docblock line="333">
          <description>Data provider for testValidCallback</description>
          <long-description></long-description>
          <tag line="333" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="371" package="CoreTests">
        <name>testValidCallback</name>
        <full_name>testValidCallback</full_name>
        <docblock line="359">
          <description>Test checking for a Valid callback.</description>
          <long-description>&lt;p&gt;This also tests the toString method.&lt;/p&gt;</long-description>
          <tag line="359" name="param" description="The callback to check." type="\Backend\Core\Utilities\Callback" variable="$callback">
            <type by_reference="false">\Backend\Core\Utilities\Callback</type>
          </tag>
          <tag line="359" name="param" description="The string representation&#10;of the callback." type="string" variable="$result">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="dataProvider" description="dataValidCallback"/>
          <tag line="359" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="371">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Core\Utilities\Callback</type>
        </argument>
        <argument line="371">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="381" package="CoreTests">
        <name>dataForToString</name>
        <full_name>dataForToString</full_name>
        <docblock line="376">
          <description>Data provider for testToString</description>
          <long-description></long-description>
          <tag line="376" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="411" package="CoreTests">
        <name>testToString</name>
        <full_name>testToString</full_name>
        <docblock line="405">
          <description>Test the __toString method</description>
          <long-description></long-description>
          <tag line="405" name="dataProvider" description="dataForToString"/>
          <tag line="405" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="411">
          <name>$callback</name>
          <default></default>
          <type>\Backend\Core\Utilities\Callback</type>
        </argument>
        <argument line="411">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="405" code="50015">Argument $callback is missing from the Docblock of testToString()</error>
      <error line="405" code="50015">Argument $result is missing from the Docblock of testToString()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/RouterTest.php" hash="79f6bd58c659ed106bfe804326f01879" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\RouterTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="30" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RouterTest</name>
      <full_name>\Backend\Core\Tests\Utilities\RouterTest</full_name>
      <docblock line="21">
        <description>Class to test the \Backend\Core\Utilities\Router class</description>
        <long-description></long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="CoreTests"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="32" namespace="Backend\Core\Tests\Utilities" package="Default">
        <name>$config</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="34" package="CoreTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="44" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="39">
          <description>Test the constructor</description>
          <long-description></long-description>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="59" package="CoreTests">
        <name>testCheckForNoMatchOnVerb</name>
        <full_name>testCheckForNoMatchOnVerb</full_name>
        <docblock line="54">
          <description>Test the check method for Routes.</description>
          <long-description></long-description>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="83" package="CoreTests">
        <name>testCheckForMatchOnRoute</name>
        <full_name>testCheckForMatchOnRoute</full_name>
        <docblock line="78">
          <description>Test the check method for Routes.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="112" package="CoreTests">
        <name>testCheckForNoMatchOnRoute</name>
        <full_name>testCheckForNoMatchOnRoute</full_name>
        <docblock line="107">
          <description>Test the check method for Routes.</description>
          <long-description></long-description>
          <tag line="107" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="136" package="CoreTests">
        <name>testCheckForMatchRegex</name>
        <full_name>testCheckForMatchRegex</full_name>
        <docblock line="131">
          <description>Test the check method for Routes.</description>
          <long-description></long-description>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="164" package="CoreTests">
        <name>testCheckForMatchRegexWithDefault</name>
        <full_name>testCheckForMatchRegexWithDefault</full_name>
        <docblock line="159">
          <description>Test the check method for Routes.</description>
          <long-description></long-description>
          <tag line="159" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="196" package="CoreTests">
        <name>testCheckForControllers</name>
        <full_name>testCheckForControllers</full_name>
        <docblock line="191">
          <description>Test the check method for Controllers.</description>
          <long-description></long-description>
          <tag line="191" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="234" package="CoreTests">
        <name>dataCheckForControllersMatches</name>
        <full_name>dataCheckForControllersMatches</full_name>
        <docblock line="229">
          <description>Data provider for testCheckForControllersMatches</description>
          <long-description></long-description>
          <tag line="229" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="391" package="CoreTests">
        <name>testCheckForControllersMatches</name>
        <full_name>testCheckForControllersMatches</full_name>
        <docblock line="382">
          <description>Test the check method for Controller with matches</description>
          <long-description></long-description>
          <tag line="382" name="param" description="Router to check." type="\Backend\Interfaces\RouterInterface" variable="$router">
            <type by_reference="false">\Backend\Interfaces\RouterInterface</type>
          </tag>
          <tag line="382" name="param" description="The request to inspect" type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="382" name="dataProvider" description="dataCheckForControllersMatches"/>
          <tag line="382" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="391">
          <name>$router</name>
          <default></default>
          <type/>
        </argument>
        <argument line="391">
          <name>$request</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="401" package="CoreTests">
        <name>testResolve</name>
        <full_name>testResolve</full_name>
        <docblock line="396">
          <description>Test the resolve method.</description>
          <long-description></long-description>
          <tag line="396" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="447" package="CoreTests">
        <name>testResolveInvalidCallback</name>
        <full_name>testResolveInvalidCallback</full_name>
        <docblock line="440">
          <description>Test trying to resolve an invalid callback.</description>
          <long-description></long-description>
          <tag line="440" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="440" name="expectedException" description="\RuntimeException"/>
          <tag line="440" name="expectedExceptionMessage" description="Invalid Callback Type"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="459" package="CoreTests">
        <name>testCallbackFactoryAccessors</name>
        <full_name>testCallbackFactoryAccessors</full_name>
        <docblock line="454">
          <description>Test the Callback Factory setter and getter.</description>
          <long-description></long-description>
          <tag line="454" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="32" code="50018">No DocBlock was found for property $config</error>
      <error line="34" code="50010">No DocBlock was found for method setUp()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/Utilities/CallbackFactoryTest.php" hash="4cd23f9e11eae66c37a3473b1218232b" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\Utilities\CallbackFactoryTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Utilities" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>CallbackFactoryTest</name>
      <full_name>\Backend\Core\Tests\Utilities\CallbackFactoryTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Utilities\CallbackFactory class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="34" package="CoreTests">
        <name>testFromString</name>
        <full_name>testFromString</full_name>
        <docblock line="29">
          <description>Test the fromString method</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Utilities" line="52" package="CoreTests">
        <name>testInvalidCallback</name>
        <full_name>testInvalidCallback</full_name>
        <docblock line="45">
          <description>Test for invalid callbacks</description>
          <long-description></long-description>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="45" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="45" name="expectedExceptionMessage" description="Invalid callback string: some::invalid::callback"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/auxiliary/TestController.php" hash="159275ca552ceadbedbc45e50714271f" package="CoreTests\Auxiliary">
    <docblock line="2">
      <description>File defining TestController.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Auxiliary"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="CoreTests\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\ControllerInterface</implements>
      <name>TestController</name>
      <full_name>\TestController</full_name>
      <docblock line="16">
        <description>Class to test the autoloading of classes in the include path and other controller
related functions.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="CoreTests"/>
        <tag line="16" name="subpackage" description="Utilities"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$request</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="CoreTests\Utilities">
        <name>setRequest</name>
        <full_name>setRequest</full_name>
        <docblock line="31">
          <description>Set the Request for the Controller.</description>
          <long-description></long-description>
          <tag line="31" name="param" description="The request for the&#10;Controller." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="31" name="return" description="The current object." type="\Backend\Interfaces\ControllerInterface">
            <type by_reference="false">\Backend\Interfaces\ControllerInterface</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="CoreTests\Utilities">
        <name>getRequest</name>
        <full_name>getRequest</full_name>
        <docblock line="44">
          <description>Get the Controller's Request</description>
          <long-description></long-description>
          <tag line="44" name="return" description="The Controller's Request" type="\Backend\Interfaces\RequestInterface">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50018">No DocBlock was found for property $request</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/auxiliary/TestContainer.php" hash="886ecc2fbef7d39060df4c7244bee126" package="CoreTests\Auxiliary">
    <docblock line="2">
      <description>File defining \Backend\Core\TestContainer.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Auxiliary"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="28" package="CoreTests\Utilities">
      <extends/>
      <name>TestContainer</name>
      <full_name>\Backend\Core\TestContainer</full_name>
      <docblock line="17">
        <description>Class to test the autoloading of classes in the include path and other controller
related functions.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="CoreTests"/>
        <tag line="17" name="subpackage" description="Utilities"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="30" namespace="Backend\Core" package="Default">
        <name>$param</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="Backend\Core" package="Default">
        <name>$container</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Core" line="34" package="CoreTests\Utilities">
        <name>factory</name>
        <full_name>factory</full_name>
        <argument line="34">
          <name>$container</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="46" package="CoreTests\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="46">
          <name>$container</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="51" package="CoreTests\Utilities">
        <name>addParam</name>
        <full_name>addParam</full_name>
        <argument line="51">
          <name>$param</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="30" code="50018">No DocBlock was found for property $param</error>
      <error line="32" code="50018">No DocBlock was found for property $container</error>
      <error line="34" code="50010">No DocBlock was found for method factory()</error>
      <error line="46" code="50010">No DocBlock was found for method __construct()</error>
      <error line="51" code="50010">No DocBlock was found for method addParam()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/auxiliary/TestFormat.php" hash="0e8684e195b895ba11900c5cab5d6db5" package="CoreTests\Auxiliary">
    <docblock line="2">
      <description>File defining \Backend\Core\TestFormat.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Auxiliary"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core" line="27" package="CoreTests\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\FormatterInterface</implements>
      <name>TestFormat</name>
      <full_name>\Backend\Core\TestFormat</full_name>
      <docblock line="17">
        <description>Class to test the checking of Formats.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="CoreTests"/>
        <tag line="17" name="subpackage" description="Utilities"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="32" namespace="Backend\Core" package="Default">
        <name>$handledFormats</name>
        <default>array('test')</default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag line="29" name="var" description="Handle Test requests" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core" line="41" package="CoreTests\Utilities">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="34">
          <description>Output the response to the client.</description>
          <long-description></long-description>
          <tag line="34" name="param" description="The result to transform." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="34" name="return" description="" type="\Backend\Interfaces\ResponseInterface;">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface;</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/ResponseTest.php" hash="2dc3a66859bbdae17a33da24bb9897af" package="CoreTests">
    <docblock line="2">
      <description>File defining ResponseTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests" line="27" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ResponseTest</name>
      <full_name>\Backend\Core\Tests\ResponseTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Response class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="34" package="CoreTests">
        <name>testStatusCodeAccessors</name>
        <full_name>testStatusCodeAccessors</full_name>
        <docblock line="29">
          <description>Test setting and getting the status code</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="47" package="CoreTests">
        <name>testGetStatusText</name>
        <full_name>testGetStatusText</full_name>
        <docblock line="42">
          <description>Test getting the status text</description>
          <long-description></long-description>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="65" package="CoreTests">
        <name>testBodyAccessors</name>
        <full_name>testBodyAccessors</full_name>
        <docblock line="60">
          <description>Test setting and getting the body</description>
          <long-description></long-description>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="78" package="CoreTests">
        <name>testHeaderAccessors</name>
        <full_name>testHeaderAccessors</full_name>
        <docblock line="73">
          <description>Test setting and getting a header.</description>
          <long-description></long-description>
          <tag line="73" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="90" package="CoreTests">
        <name>testHeadersAccessors</name>
        <full_name>testHeadersAccessors</full_name>
        <docblock line="85">
          <description>Test setting and getting the headers.</description>
          <long-description></long-description>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="105" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="100">
          <description>Test the object constructor.</description>
          <long-description></long-description>
          <tag line="100" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="121" package="CoreTests">
        <name>testOutput</name>
        <full_name>testOutput</full_name>
        <docblock line="116">
          <description>Test the output method.</description>
          <long-description></long-description>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="142" package="CoreTests">
        <name>testSendHeaders</name>
        <full_name>testSendHeaders</full_name>
        <docblock line="137">
          <description>Test the sendHeaders method</description>
          <long-description></long-description>
          <tag line="137" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="175" package="CoreTests">
        <name>testHeadersAlreadySentCheck</name>
        <full_name>testHeadersAlreadySentCheck</full_name>
        <docblock line="168">
          <description>Test the check for headers already sent</description>
          <long-description></long-description>
          <tag line="168" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="168" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="168" name="expectedExceptionMessage" description="Headers already sent in"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="187" package="CoreTests">
        <name>testWriteHeader</name>
        <full_name>testWriteHeader</full_name>
        <docblock line="182">
          <description>Test the writeHeader method</description>
          <long-description></long-description>
          <tag line="182" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="196" package="CoreTests">
        <name>testSendBody</name>
        <full_name>testSendBody</full_name>
        <docblock line="191">
          <description>Test the sendBody method</description>
          <long-description></long-description>
          <tag line="191" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="211" package="CoreTests">
        <name>testToString</name>
        <full_name>testToString</full_name>
        <docblock line="206">
          <description>Test the __toString method</description>
          <long-description></long-description>
          <tag line="206" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="223" package="CoreTests">
        <name>testToStringException</name>
        <full_name>testToStringException</full_name>
        <docblock line="218">
          <description>Test throwing an exception in Response</description>
          <long-description></long-description>
          <tag line="218" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="235" package="CoreTests">
        <name>dataStatusCodeCheck</name>
        <full_name>dataStatusCodeCheck</full_name>
        <docblock line="230">
          <description>Data provider for testStatusCodeCheck.</description>
          <long-description></long-description>
          <tag line="230" name="return" description="The method arguments" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="250" package="CoreTests">
        <name>testStatusCodeCheck</name>
        <full_name>testStatusCodeCheck</full_name>
        <docblock line="243">
          <description>Test that the Status Code is correct.</description>
          <long-description></long-description>
          <tag line="243" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="243" name="dataProvider" description="dataStatusCodeCheck"/>
          <tag line="243" name="expectedException" description="\RuntimeException"/>
        </docblock>
        <argument line="250">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="243" code="50015">Argument $code is missing from the Docblock of testStatusCodeCheck()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/ControllerTest.php" hash="119fe39afbd3ab7f94b066dbda02438c" package="CoreTests">
    <docblock line="2">
      <description>File defining \Backend\Core\Tests\ControllerTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests" line="29" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ControllerTest</name>
      <full_name>\Backend\Core\Tests\ControllerTest</full_name>
      <docblock line="20">
        <description>Class to test the \Backend\Core\Controller class</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="CoreTests"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="39" package="CoreTests">
        <name>testRequestAccessors</name>
        <full_name>testRequestAccessors</full_name>
        <docblock line="32">
          <description>Test setting and getting the Request</description>
          <long-description></long-description>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="32" name="covers" description="\Backend\Core\Controller::getRequest" refers="\Backend\Core\Controller::getRequest"/>
          <tag line="32" name="covers" description="\Backend\Core\Controller::setRequest" refers="\Backend\Core\Controller::setRequest"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="56" package="CoreTests">
        <name>testContainerAccessors</name>
        <full_name>testContainerAccessors</full_name>
        <docblock line="49">
          <description>Test setting and getting the DIC</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="49" name="covers" description="\Backend\Core\Controller::getContainer" refers="\Backend\Core\Controller::getContainer"/>
          <tag line="49" name="covers" description="\Backend\Core\Controller::setContainer" refers="\Backend\Core\Controller::setContainer"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="71" package="CoreTests">
        <name>testRelativeRedirect</name>
        <full_name>testRelativeRedirect</full_name>
        <docblock line="66">
          <description>Test a Relative Redirect</description>
          <long-description></long-description>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="106" package="CoreTests">
        <name>testAbsoluteRedirect</name>
        <full_name>testAbsoluteRedirect</full_name>
        <docblock line="101">
          <description>Test an Absolute Redirect</description>
          <long-description></long-description>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="128" package="CoreTests">
        <name>testPermanentRedirect</name>
        <full_name>testPermanentRedirect</full_name>
        <docblock line="123">
          <description>Test a Permanent Redirect</description>
          <long-description></long-description>
          <tag line="123" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="154" package="CoreTests">
        <name>testInvalidRedirect</name>
        <full_name>testInvalidRedirect</full_name>
        <docblock line="147">
          <description>Test an Invalid Redirect</description>
          <long-description></long-description>
          <tag line="147" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="147" name="expectedExceptionMessage" description="Invalid Redirection Response Code"/>
          <tag line="147" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/AutoloaderTest.php" hash="2a2c001d1b20ee721bffbc6e740c38bd" package="CoreTests\Utilities">
    <docblock line="2">
      <description>File defining AutoloaderTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests" line="32" package="CoreTests\Utilities">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>AutoloaderTest</name>
      <full_name>\Backend\Core\Tests\AutoloaderTest</full_name>
      <docblock line="19">
        <description>Class to test the \Backend\Core\Utilities\Autoloader class</description>
        <long-description>&lt;p&gt;Notice the use of class_exists($className, FALSE) and an explicit call to the
autokload function to prevent the already registered autoloaders from kicking in.&lt;/p&gt;</long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="CoreTests"/>
        <tag line="19" name="subpackage" description="Utilities"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" namespace="Backend\Core\Tests" package="Default">
        <name>$originalPath</name>
        <default>null</default>
        <docblock line="34">
          <description>Original include path</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="46" package="CoreTests\Utilities">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="41">
          <description>Set up the test</description>
          <long-description></long-description>
          <tag line="41" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="64" package="CoreTests\Utilities">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="59">
          <description>Tear down the test</description>
          <long-description></long-description>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="75" package="CoreTests\Utilities">
        <name>testBaseFoldersAccessors</name>
        <full_name>testBaseFoldersAccessors</full_name>
        <docblock line="72">
          <description>Test the base folders getter and settor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="87" package="CoreTests\Utilities">
        <name>testRegister</name>
        <full_name>testRegister</full_name>
        <docblock line="82">
          <description>Test if the register function works correctly</description>
          <long-description></long-description>
          <tag line="82" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="100" package="CoreTests\Utilities">
        <name>testAutoload</name>
        <full_name>testAutoload</full_name>
        <docblock line="95">
          <description>Test if the autoload function works correctly</description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="117" package="CoreTests\Utilities">
        <name>testLastGasp</name>
        <full_name>testLastGasp</full_name>
        <docblock line="112">
          <description>Test the last gasp attempt to load a class</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="144" package="CoreTests\Utilities">
        <name>testNonExistantClass</name>
        <full_name>testNonExistantClass</full_name>
        <docblock line="139">
          <description>Test if the autoloader doesn't find a class</description>
          <long-description></long-description>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/Listener/CoreListenerTest.php" hash="0c03c343c9dc31eaf8ffb624dc5bfc80" package="CoreTests">
    <docblock line="2">
      <description>File defining Backend\Core\Tests\Listener\CoreListenerTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests\Listener" line="29" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>CoreListenerTest</name>
      <full_name>\Backend\Core\Tests\Listener\CoreListenerTest</full_name>
      <docblock line="20">
        <description>Class to test the \Backend\Core\Listener\CoreListener class</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="CoreTests"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="Backend\Core\Tests\Listener" package="Default">
        <name>$container</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Listener" line="40" package="CoreTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="33">
          <description>Set up the test</description>
          <long-description>&lt;p&gt;Set the debugging level to 1, set a Request&lt;/p&gt;</long-description>
          <tag line="33" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Listener" line="51" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag line="47" name="covers" description="\Backend\Core\Listener\CoreListener::__construct" refers="\Backend\Core\Listener\CoreListener::__construct"/>
          <tag line="47" name="covers" description="\Backend\Core\Listener\CoreListener::getContainer" refers="\Backend\Core\Listener\CoreListener::getContainer"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Listener" line="62" package="CoreTests">
        <name>testHandleCallbackEvent</name>
        <full_name>testHandleCallbackEvent</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="57" name="covers" description="\Backend\Core\Listener\CoreListener::coreCallbackEvent" refers="\Backend\Core\Listener\CoreListener::coreCallbackEvent"/>
          <tag line="57" name="covers" description="\Backend\Core\Listener\CoreListener::transformCallback" refers="\Backend\Core\Listener\CoreListener::transformCallback"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Listener" line="99" package="CoreTests">
        <name>testHandleResultEvent</name>
        <full_name>testHandleResultEvent</full_name>
        <docblock line="95">
          <description></description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="95" name="covers" description="\Backend\Core\Listener\CoreListener::coreResultEvent" refers="\Backend\Core\Listener\CoreListener::coreResultEvent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Listener" line="119" package="CoreTests">
        <name>testResponseResultEvent</name>
        <full_name>testResponseResultEvent</full_name>
        <docblock line="115">
          <description></description>
          <long-description></long-description>
          <tag line="115" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="115" name="covers" description="\Backend\Core\Listener\CoreListener::coreResultEvent" refers="\Backend\Core\Listener\CoreListener::coreResultEvent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests\Listener" line="139" package="CoreTests">
        <name>testCorrectResponseCodeInExceptionEvent</name>
        <full_name>testCorrectResponseCodeInExceptionEvent</full_name>
        <docblock line="135">
          <description></description>
          <long-description></long-description>
          <tag line="135" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="135" name="covers" description="\Backend\Core\Listener\CoreListener::coreExceptionEvent" refers="\Backend\Core\Listener\CoreListener::coreExceptionEvent"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="31" code="50018">No DocBlock was found for property $container</error>
      <error line="47" code="50012">No short description for method testConstructor()</error>
      <error line="57" code="50012">No short description for method testHandleCallbackEvent()</error>
      <error line="95" code="50012">No short description for method testHandleResultEvent()</error>
      <error line="115" code="50012">No short description for method testResponseResultEvent()</error>
      <error line="135" code="50012">No short description for method testCorrectResponseCodeInExceptionEvent()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/AutoloaderTestClass.php" hash="569d81172be66433f507974e7b0c6cd3" package="CoreTests\Utilities">
    <docblock line="2">
      <description>File defining AutoloaderTestClass</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Tests" line="27" package="CoreTests\Utilities">
      <extends/>
      <name>AutoloaderTestClass</name>
      <full_name>\Tests\AutoloaderTestClass</full_name>
      <docblock line="17">
        <description>Class to test the autoloading functionality.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="CoreTests"/>
        <tag line="17" name="subpackage" description="Utilities"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
    </class>
  </file>
  <file path="core/Backend/Core/Tests/ApplicationTest.php" hash="178425b4d8413452f80c5cf982a10c9d" package="CoreTests">
    <docblock line="2">
      <description>File defining Backend\Core\Tests\ApplicationTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests" line="31" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ApplicationTest</name>
      <full_name>\Backend\Core\Tests\ApplicationTest</full_name>
      <docblock line="22">
        <description>Class to test the \Backend\Core\Application class</description>
        <long-description></long-description>
        <tag line="22" name="category" description="Backend"/>
        <tag line="22" name="package" description="CoreTests"/>
        <tag line="22" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="22" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="22" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Backend\Core\Tests" package="Default">
        <name>$request</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="Backend\Core\Tests" package="Default">
        <name>$container</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="Backend\Core\Tests" package="Default">
        <name>$application</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="46" package="CoreTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="39">
          <description>Set up the test</description>
          <long-description>&lt;p&gt;Set the debugging level to 1, set a Request&lt;/p&gt;</long-description>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="59" package="CoreTests">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="54">
          <description>Tear down the test</description>
          <long-description></long-description>
          <tag line="54" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="72" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="65">
          <description>Test the application constructor.</description>
          <long-description></long-description>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="65" name="covers" description="\Backend\Core\Application::__construct" refers="\Backend\Core\Application::__construct"/>
          <tag line="65" name="covers" description="\Backend\Core\Application::init" refers="\Backend\Core\Application::init"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="91" package="CoreTests">
        <name>testInitRanOnlyOnce</name>
        <full_name>testInitRanOnlyOnce</full_name>
        <docblock line="85">
          <description>Test the application init.</description>
          <long-description></long-description>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="85" name="covers" description="\Backend\Core\Application::init" refers="\Backend\Core\Application::init"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="109" package="CoreTests">
        <name>testPlainMain</name>
        <full_name>testPlainMain</full_name>
        <docblock line="103">
          <description>Test the main function</description>
          <long-description></long-description>
          <tag line="103" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="103" name="covers" description="\Backend\Core\Application::main" refers="\Backend\Core\Application::main"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="150" package="CoreTests">
        <name>testMainWithEvents</name>
        <full_name>testMainWithEvents</full_name>
        <docblock line="144">
          <description>Test the main function with all the events</description>
          <long-description></long-description>
          <tag line="144" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="144" name="covers" description="\Backend\Core\Application::main" refers="\Backend\Core\Application::main"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="215" package="CoreTests">
        <name>testCallbackChainingMain</name>
        <full_name>testCallbackChainingMain</full_name>
        <docblock line="209">
          <description>Test the main function with Callback Chaining</description>
          <long-description></long-description>
          <tag line="209" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="209" name="covers" description="\Backend\Core\Application::main" refers="\Backend\Core\Application::main"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="279" package="CoreTests">
        <name>testMainWith404</name>
        <full_name>testMainWith404</full_name>
        <docblock line="271">
          <description>Test the main function with no route for the request</description>
          <long-description></long-description>
          <tag line="271" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="271" name="covers" description="\Backend\Core\Application::main" refers="\Backend\Core\Application::main"/>
          <tag line="271" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="271" name="expectedExceptionMessage" description="Unknown route requested"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="302" package="CoreTests">
        <name>testRequestAccessors</name>
        <full_name>testRequestAccessors</full_name>
        <docblock line="295">
          <description>Test the Request getter and setter.</description>
          <long-description></long-description>
          <tag line="295" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="295" name="covers" description="\Backend\Core\Application::getRequest" refers="\Backend\Core\Application::getRequest"/>
          <tag line="295" name="covers" description="\Backend\Core\Application::setRequest" refers="\Backend\Core\Application::setRequest"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="320" package="CoreTests">
        <name>testContainerAccessors</name>
        <full_name>testContainerAccessors</full_name>
        <docblock line="313">
          <description>Test the Container getter and setter.</description>
          <long-description></long-description>
          <tag line="313" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="313" name="covers" description="\Backend\Core\Application::getContainer" refers="\Backend\Core\Application::getContainer"/>
          <tag line="313" name="covers" description="\Backend\Core\Application::setContainer" refers="\Backend\Core\Application::setContainer"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="334" package="CoreTests">
        <name>testConfigAccessors</name>
        <full_name>testConfigAccessors</full_name>
        <docblock line="327">
          <description>Test the Config getter and setter.</description>
          <long-description></long-description>
          <tag line="327" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="327" name="covers" description="\Backend\Core\Application::getConfig" refers="\Backend\Core\Application::getConfig"/>
          <tag line="327" name="covers" description="\Backend\Core\Application::setConfig" refers="\Backend\Core\Application::setConfig"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="348" package="CoreTests">
        <name>testRouterAccessors</name>
        <full_name>testRouterAccessors</full_name>
        <docblock line="341">
          <description>Test the Router getter and setter.</description>
          <long-description></long-description>
          <tag line="341" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="341" name="covers" description="\Backend\Core\Application::getRouter" refers="\Backend\Core\Application::getRouter"/>
          <tag line="341" name="covers" description="\Backend\Core\Application::setRouter" refers="\Backend\Core\Application::setRouter"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="370" package="CoreTests">
        <name>testRaiseEvent</name>
        <full_name>testRaiseEvent</full_name>
        <docblock line="366">
          <description></description>
          <long-description></long-description>
          <tag line="366" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="366" name="covers" description="\Backend\Core\Application::raiseEvent" refers="\Backend\Core\Application::raiseEvent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="390" package="CoreTests">
        <name>testError</name>
        <full_name>testError</full_name>
        <docblock line="384">
          <description>Run the error code.</description>
          <long-description></long-description>
          <tag line="384" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="384" name="covers" description="\Backend\Core\Application::error" refers="\Backend\Core\Application::error"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="407" package="CoreTests">
        <name>testException</name>
        <full_name>testException</full_name>
        <docblock line="399">
          <description>Run the Exception Code.</description>
          <long-description></long-description>
          <tag line="399" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="399" name="covers" description="\Backend\Core\Application::exception" refers="\Backend\Core\Application::exception"/>
          <tag line="399" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="399" name="expectedExceptionMessage" description="Message"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="420" package="CoreTests">
        <name>testShutdown</name>
        <full_name>testShutdown</full_name>
        <docblock line="414">
          <description>Run the shutdown code.</description>
          <long-description></long-description>
          <tag line="414" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="414" name="covers" description="\Backend\Core\Application::shutdown" refers="\Backend\Core\Application::shutdown"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $request</error>
      <error line="35" code="50018">No DocBlock was found for property $container</error>
      <error line="37" code="50018">No DocBlock was found for property $application</error>
      <error line="366" code="50012">No short description for method testRaiseEvent()</error>
    </parse_markers>
  </file>
  <file path="core/Backend/Core/Tests/bootstrap.php" hash="2f84d2cd31d378b5517e12a232ca0b8f" package="CoreTests">
    <docblock line="2">
      <description>The bootstrapping script</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="Permission is hereby granted, free of charge, to any person obtaining a copy of&#10;this software and associated documentation files (the &quot;Software&quot;), to deal in the&#10;Software without restriction, including without limitation the rights to use, copy,&#10;modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,&#10;and to permit persons to whom the Software is furnished to do so, subject to the&#10;following conditions:&#10;The above copyright notice and this permission notice shall be included in all&#10;copies or substantial portions of the Software.&#10;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR&#10;A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT&#10;HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF&#10;CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE&#10;OR THE USE OR OTHER DEALINGS IN THE SOFTWARE." link="http://backend-php.net"/>
    </docblock>
    <include line="97" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="104" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="106" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="41" package="CoreTests">
      <name>PROJECT_FOLDER</name>
      <full_name>\PROJECT_FOLDER</full_name>
      <value>realpath(dirname(__FILE__) . '/../') . '/'</value>
    </constant>
    <constant namespace="global" line="48" package="CoreTests">
      <name>VENDOR_FOLDER</name>
      <full_name>\VENDOR_FOLDER</full_name>
      <value>PROJECT_FOLDER . 'vendor/'</value>
    </constant>
    <constant namespace="global" line="55" package="CoreTests">
      <name>SOURCE_FOLDER</name>
      <full_name>\SOURCE_FOLDER</full_name>
      <value>PROJECT_FOLDER . 'app/'</value>
    </constant>
    <constant namespace="global" line="62" package="CoreTests">
      <name>BACKEND_FOLDER</name>
      <full_name>\BACKEND_FOLDER</full_name>
      <value>VENDOR_FOLDER . 'Backend/'</value>
    </constant>
    <constant namespace="global" line="69" package="CoreTests">
      <name>WEB_FOLDER</name>
      <full_name>\WEB_FOLDER</full_name>
      <value>PROJECT_FOLDER . 'public/'</value>
    </constant>
    <constant namespace="global" line="76" package="CoreTests">
      <name>CONFIG_EXT</name>
      <full_name>\CONFIG_EXT</full_name>
      <value>'yaml'</value>
    </constant>
    <constant namespace="global" line="80" package="CoreTests">
      <name>BACKEND_SITE_STATE</name>
      <full_name>\BACKEND_SITE_STATE</full_name>
      <value>'testing'</value>
    </constant>
    <constant namespace="global" line="82" package="CoreTests">
      <name>BACKEND_SITE_STATE</name>
      <full_name>\BACKEND_SITE_STATE</full_name>
      <value>'development'</value>
    </constant>
    <constant namespace="global" line="84" package="CoreTests">
      <name>BACKEND_SITE_STATE</name>
      <full_name>\BACKEND_SITE_STATE</full_name>
      <value>'production'</value>
    </constant>
  </file>
  <file path="core/Backend/Core/Tests/RequestTest.php" hash="cff506af1bd2724c640eeb8a90a979dd" package="CoreTests">
    <docblock line="2">
      <description>File defining RequestTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Core\Tests" line="28" package="CoreTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RequestTest</name>
      <full_name>\Backend\Core\Tests\RequestTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Core\Controller class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="CoreTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
        <tag line="18" name="backupGlobals" description="enabled"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Tests" line="35" package="CoreTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="30">
          <description>Set up the test</description>
          <long-description></long-description>
          <tag line="30" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Core\Tests" line="44" package="CoreTests">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="39">
          <description>Tear down the test</description>
          <long-description></long-description>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="53" package="CoreTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="48">
          <description>Test the bare constructor.</description>
          <long-description></long-description>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="66" package="CoreTests">
        <name>testNoIndex</name>
        <full_name>testNoIndex</full_name>
        <docblock line="61">
          <description>Test an URL without the index.php part</description>
          <long-description></long-description>
          <tag line="61" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="93" package="CoreTests">
        <name>testEmptyQuery</name>
        <full_name>testEmptyQuery</full_name>
        <docblock line="88">
          <description>Test an URL without a query</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="104" package="CoreTests">
        <name>testSimpleQuery</name>
        <full_name>testSimpleQuery</full_name>
        <docblock line="99">
          <description>Test a simple Query</description>
          <long-description></long-description>
          <tag line="99" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="122" package="CoreTests">
        <name>testCustomPort</name>
        <full_name>testCustomPort</full_name>
        <docblock line="117">
          <description>Test a Custom Port</description>
          <long-description></long-description>
          <tag line="117" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="134" package="CoreTests">
        <name>testHttps</name>
        <full_name>testHttps</full_name>
        <docblock line="129">
          <description>Test HTTPS</description>
          <long-description></long-description>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="146" package="CoreTests">
        <name>testMethodAccessors</name>
        <full_name>testMethodAccessors</full_name>
        <docblock line="141">
          <description>Test Method getter and setter.</description>
          <long-description></long-description>
          <tag line="141" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="200" package="CoreTests">
        <name>testSetMethodException</name>
        <full_name>testSetMethodException</full_name>
        <docblock line="193">
          <description>Test the setMethod method.</description>
          <long-description></long-description>
          <tag line="193" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="193" name="expectedExceptionMessage" description="Unsupported method SOMETHING"/>
          <tag line="193" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="210" package="CoreTests">
        <name>dataPaths</name>
        <full_name>dataPaths</full_name>
        <docblock line="205">
          <description>Data provider for testPaths.</description>
          <long-description></long-description>
          <tag line="205" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="230" package="CoreTests">
        <name>testPaths</name>
        <full_name>testPaths</full_name>
        <docblock line="224">
          <description>Test the parsing of the path.</description>
          <long-description></long-description>
          <tag line="224" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="224" name="dataProvider" description="dataPaths"/>
        </docblock>
        <argument line="230">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="241" package="CoreTests">
        <name>testPathAccessors</name>
        <full_name>testPathAccessors</full_name>
        <docblock line="236">
          <description>Test Path getter and setter</description>
          <long-description></long-description>
          <tag line="236" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="259" package="CoreTests">
        <name>testUrl</name>
        <full_name>testUrl</full_name>
        <docblock line="254">
          <description>Test the getUrl and prepareUrl methods</description>
          <long-description></long-description>
          <tag line="254" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="296" package="CoreTests">
        <name>testUrlAccessors</name>
        <full_name>testUrlAccessors</full_name>
        <docblock line="291">
          <description>Test the URL Accessors.</description>
          <long-description></long-description>
          <tag line="291" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="308" package="CoreTests">
        <name>testQueryAccessors</name>
        <full_name>testQueryAccessors</full_name>
        <docblock line="303">
          <description>Test the Query Accessors.</description>
          <long-description></long-description>
          <tag line="303" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="326" package="CoreTests">
        <name>testCliOrEmptyGetMimeType</name>
        <full_name>testCliOrEmptyGetMimeType</full_name>
        <docblock line="321">
          <description>Test the getMimeType method for the CLI or empty mime types.</description>
          <long-description></long-description>
          <tag line="321" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="345" package="CoreTests">
        <name>dataGetMimeType</name>
        <full_name>dataGetMimeType</full_name>
        <docblock line="340">
          <description>Data provider for testGetMimeType.</description>
          <long-description></long-description>
          <tag line="340" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="367" package="CoreTests">
        <name>testGetMimeType</name>
        <full_name>testGetMimeType</full_name>
        <docblock line="358">
          <description>Test the getMimeType method.</description>
          <long-description></long-description>
          <tag line="358" name="param" description="The accept header to check." type="string" variable="$acceptHeader">
            <type by_reference="false">string</type>
          </tag>
          <tag line="358" name="param" description="The expected result." type="string" variable="$expected">
            <type by_reference="false">string</type>
          </tag>
          <tag line="358" name="dataProvider" description="dataGetMimeType();"/>
          <tag line="358" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="367">
          <name>$acceptHeader</name>
          <default></default>
          <type/>
        </argument>
        <argument line="367">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="383" package="CoreTests">
        <name>testMimeTypeAccessors</name>
        <full_name>testMimeTypeAccessors</full_name>
        <docblock line="378">
          <description>Test the Mime Type Accessors.</description>
          <long-description></long-description>
          <tag line="378" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="395" package="CoreTests">
        <name>testGetSpecifiedFormat</name>
        <full_name>testGetSpecifiedFormat</full_name>
        <docblock line="390">
          <description>Test the getSpecifiedFormat method.</description>
          <long-description></long-description>
          <tag line="390" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="416" package="CoreTests">
        <name>testSpecifiedFormatAccessors</name>
        <full_name>testSpecifiedFormatAccessors</full_name>
        <docblock line="411">
          <description>Test the Specified Format Accessors.</description>
          <long-description></long-description>
          <tag line="411" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="428" package="CoreTests">
        <name>testGetExtension</name>
        <full_name>testGetExtension</full_name>
        <docblock line="423">
          <description>Test the getExtension method.</description>
          <long-description></long-description>
          <tag line="423" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="452" package="CoreTests">
        <name>testExtensionAccessors</name>
        <full_name>testExtensionAccessors</full_name>
        <docblock line="447">
          <description>Test the Extension Accessors.</description>
          <long-description></long-description>
          <tag line="447" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="464" package="CoreTests">
        <name>testServerInfoAccessors</name>
        <full_name>testServerInfoAccessors</full_name>
        <docblock line="459">
          <description>Test setting a server info value.</description>
          <long-description></long-description>
          <tag line="459" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="488" package="CoreTests">
        <name>testBuildHeaders</name>
        <full_name>testBuildHeaders</full_name>
        <docblock line="483">
          <description>Test building headers.</description>
          <long-description></long-description>
          <tag line="483" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="501" package="CoreTests">
        <name>testHeaderAccessors</name>
        <full_name>testHeaderAccessors</full_name>
        <docblock line="496">
          <description>Test setting and getting a specific header.</description>
          <long-description></long-description>
          <tag line="496" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="516" package="CoreTests">
        <name>testHeadersAccessors</name>
        <full_name>testHeadersAccessors</full_name>
        <docblock line="511">
          <description>Test setting and getting the headers.</description>
          <long-description></long-description>
          <tag line="511" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="531" package="CoreTests">
        <name>testIsMethod</name>
        <full_name>testIsMethod</full_name>
        <docblock line="526">
          <description>Test the different isMethod functions.</description>
          <long-description></long-description>
          <tag line="526" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="552" package="CoreTests">
        <name>dataParseContent</name>
        <full_name>dataParseContent</full_name>
        <docblock line="547">
          <description>Data for the testParseContent method.</description>
          <long-description></long-description>
          <tag line="547" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="590" package="CoreTests">
        <name>testParseContent</name>
        <full_name>testParseContent</full_name>
        <docblock line="581">
          <description>Test the parsing of content.</description>
          <long-description></long-description>
          <tag line="581" name="param" description="The content type." type="string" variable="$contentType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="581" name="param" description="The name of file where input should be read from." type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="581" name="dataProvider" description="dataParseContent"/>
          <tag line="581" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="590">
          <name>$contentType</name>
          <default></default>
          <type/>
        </argument>
        <argument line="590">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="604" package="CoreTests">
        <name>testParseFileContent</name>
        <full_name>testParseFileContent</full_name>
        <docblock line="599">
          <description>Test parsing content from a file</description>
          <long-description></long-description>
          <tag line="599" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="620" package="CoreTests">
        <name>testUnknownContent</name>
        <full_name>testUnknownContent</full_name>
        <docblock line="612">
          <description>Test unknown content</description>
          <long-description></long-description>
          <tag line="612" name="expectedException" description="\Backend\Core\Exception"/>
          <tag line="612" name="expectedExceptionMessage" description="Unknown Content Type: unknown/content"/>
          <tag line="612" name="expectedExceptionCode" description="400"/>
          <tag line="612" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="631" package="CoreTests">
        <name>dataBody</name>
        <full_name>dataBody</full_name>
        <docblock line="626">
          <description>Data provider for testBody.</description>
          <long-description></long-description>
          <tag line="626" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="651" package="CoreTests">
        <name>testBody</name>
        <full_name>testBody</full_name>
        <docblock line="643">
          <description>Test setting the body.</description>
          <long-description></long-description>
          <tag line="643" name="param" description="The body to test." type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="643" name="dataProvider" description="dataBody"/>
          <tag line="643" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="651">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="662" package="CoreTests">
        <name>testGetBody</name>
        <full_name>testGetBody</full_name>
        <docblock line="657">
          <description>Test getting the body.</description>
          <long-description></long-description>
          <tag line="657" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="702" package="CoreTests">
        <name>testGetBodyFromCli</name>
        <full_name>testGetBodyFromCli</full_name>
        <docblock line="697">
          <description>Test getting the body from the CLI</description>
          <long-description></long-description>
          <tag line="697" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Core\Tests" line="723" package="CoreTests">
        <name>testInputStreamAccessors</name>
        <full_name>testInputStreamAccessors</full_name>
        <docblock line="718">
          <description>Test the Input Strean setter and getter.</description>
          <long-description></long-description>
          <tag line="718" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="224" code="50015">Argument $url is missing from the Docblock of testPaths()</error>
      <error line="224" code="50015">Argument $expected is missing from the Docblock of testPaths()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Formats/Cli.php" hash="a884b5bc1d20d57488e902c1368771e5" package="Base\Formats">
    <docblock line="2">
      <description>File defining \Base\Formats\Cli</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Formats"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Formats" line="29" package="Base\Formats">
      <extends>\Backend\Core\Utilities\Formatter</extends>
      <name>Cli</name>
      <full_name>\Backend\Base\Formats\Cli</full_name>
      <docblock line="19">
        <description>Output a request on the Command Line.</description>
        <long-description></long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="Base"/>
        <tag line="19" name="subpackage" description="Formats"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="34" namespace="Backend\Base\Formats" package="Default">
        <name>$handledFormats</name>
        <default>array('cli')</default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="var" description="Handle CLI requests" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="45" package="Base\Formats">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="36">
          <description>Transform the result into the Format.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The result to transform" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="36" name="param" description="The callback that was executed" type="callable" variable="$callback">
            <type by_reference="false">callable</type>
          </tag>
          <tag line="36" name="param" description="The arguments that were passed" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="return" description="The response to transform" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <notice line="36" code="50013">Parameter $callback could not be found in transform()</notice>
      <notice line="36" code="50013">Parameter $arguments could not be found in transform()</notice>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Formats/Html.php" hash="806fafa5bfcc65383e90bd35017f68de" package="Base\Formats">
    <docblock line="2">
      <description>File defining \Base\Formats\Html</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Formats"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <constant namespace="global" line="92" package="Base\Formats">
      <name>SITE_FOLDER</name>
      <full_name>\SITE_FOLDER</full_name>
      <value>$context-&gt;getFolder()</value>
    </constant>
    <constant namespace="global" line="97" package="Base\Formats">
      <name>SITE_DOMAIN</name>
      <full_name>\SITE_DOMAIN</full_name>
      <value>$context-&gt;getHost()</value>
    </constant>
    <constant namespace="global" line="102" package="Base\Formats">
      <name>SITE_LINK</name>
      <full_name>\SITE_LINK</full_name>
      <value>$context-&gt;getLink()</value>
    </constant>
    <class final="false" abstract="false" namespace="Backend\Base\Formats" line="32" package="Base\Formats">
      <extends>\Backend\Core\Utilities\Formatter</extends>
      <name>Html</name>
      <full_name>\Backend\Base\Formats\Html</full_name>
      <docblock line="22">
        <description>Output a request as HTML.</description>
        <long-description></long-description>
        <tag line="22" name="category" description="Backend"/>
        <tag line="22" name="package" description="Base"/>
        <tag line="22" name="subpackage" description="Formats"/>
        <tag line="22" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="22" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="22" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" namespace="Backend\Base\Formats" package="Default">
        <name>$config</name>
        <default></default>
        <docblock line="34">
          <description>Relavant configuration options.</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="\Backend\Interfaces\ConfigInterfaces">
            <type by_reference="false">\Backend\Interfaces\ConfigInterfaces</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="Backend\Base\Formats" package="Default">
        <name>$render</name>
        <default></default>
        <docblock line="41">
          <description>Rendering Utility used by this formatter.</description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="\Backend\Interface\RenderInterface">
            <type by_reference="false">\Backend\Interface\RenderInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="51" namespace="Backend\Base\Formats" package="Default">
        <name>$handledFormats</name>
        <default>array('html', 'htm', 'text/html', 'application/xhtml+xml')</default>
        <docblock line="48">
          <description></description>
          <long-description></long-description>
          <tag line="48" name="var" description="Handle HTML requests" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" namespace="Backend\Base\Formats" package="Default">
        <name>$values</name>
        <default>array()</default>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag line="55" name="var" description="An array of commonly used values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="69" package="Base\Formats">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="60">
          <description>The constructor for the object</description>
          <long-description></long-description>
          <tag line="60" name="param" description="The request used to&#10;determine what formatter to return." type="\Backend\Interfaces\RequestInterface" variable="$request">
            <type by_reference="false">\Backend\Interfaces\RequestInterface</type>
          </tag>
          <tag line="60" name="param" description="The current Application&#10;configuration." type="\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="60" name="param" description="A rendering utility." type="\Backend\Interfaces\RenderInterface" variable="$render">
            <type by_reference="false">\Backend\Interfaces\RenderInterface</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$request</name>
          <default></default>
          <type>\Backend\Interfaces\RequestInterface</type>
        </argument>
        <argument line="69">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
        <argument line="69">
          <name>$render</name>
          <default></default>
          <type>\Backend\Interfaces\RenderInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="Backend\Base\Formats" line="87" package="Base\Formats">
        <name>setupConstants</name>
        <full_name>setupConstants</full_name>
        <docblock line="81">
          <description>Set up a number of constants / variables to make creating and parsing
templates easier.</description>
          <long-description></long-description>
          <tag line="81" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="116" package="Base\Formats">
        <name>getConfig</name>
        <full_name>getConfig</full_name>
        <docblock line="111">
          <description>Return the current configuration.</description>
          <long-description></long-description>
          <tag line="111" name="return" description="" type="\Backend\Base\Formats\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Base\Formats\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="128" package="Base\Formats">
        <name>setConfig</name>
        <full_name>setConfig</full_name>
        <docblock line="121">
          <description>Set the configuration to use.</description>
          <long-description></long-description>
          <tag line="121" name="param" description="The config to set." type="\Backend\Base\Formats\Backend\Interfaces\ConfigInterface" variable="$config">
            <type by_reference="false">\Backend\Base\Formats\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="121" name="return" description="" type="\Backend\Base\Formats\Backend\Base\Formats\Html">
            <type by_reference="false">\Backend\Base\Formats\Backend\Base\Formats\Html</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$config</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="140" package="Base\Formats">
        <name>getRender</name>
        <full_name>getRender</full_name>
        <docblock line="135">
          <description>Return the current Renderer.</description>
          <long-description></long-description>
          <tag line="135" name="return" description="" type="\Backend\Base\Formats\Backend\Interfaces\RenderInterface">
            <type by_reference="false">\Backend\Base\Formats\Backend\Interfaces\RenderInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="152" package="Base\Formats">
        <name>setRender</name>
        <full_name>setRender</full_name>
        <docblock line="145">
          <description>Set the Renderer to use.</description>
          <long-description></long-description>
          <tag line="145" name="param" description="The Renderer to set." type="\Backend\Base\Formats\Backend\Interfaces\RenderInterface" variable="$render">
            <type by_reference="false">\Backend\Base\Formats\Backend\Interfaces\RenderInterface</type>
          </tag>
          <tag line="145" name="return" description="" type="\Backend\Base\Formats\Backend\Base\Formats\Html">
            <type by_reference="false">\Backend\Base\Formats\Backend\Base\Formats\Html</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$render</name>
          <default></default>
          <type>\Backend\Interfaces\RenderInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="167" package="Base\Formats">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="159">
          <description>Transform the result into a Response Object containing the result as HTML</description>
          <long-description></long-description>
          <tag line="159" name="param" description="The result to transform into HTML" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="159" name="return" description="The response transformed into a HTML Response" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
          <tag line="159" name="todo" description="Make the content type header customizable"/>
        </docblock>
        <argument line="167">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Formats" line="200" package="Base\Formats">
        <name>transformBody</name>
        <full_name>transformBody</full_name>
        <docblock line="193">
          <description>Transform the Body of the response</description>
          <long-description></long-description>
          <tag line="193" name="param" description="The body to transform" type="mixed" variable="$body">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="193" name="return" description="The transformed body" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Formats" line="223" package="Base\Formats">
        <name>transformObject</name>
        <full_name>transformObject</full_name>
        <docblock line="216">
          <description>Transform an object into a renderable string</description>
          <long-description></long-description>
          <tag line="216" name="param" description="The object to transform" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="216" name="return" description="The object transformed into a string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$object</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="256" package="Base\Formats">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <docblock line="248">
          <description>Set a value to the values array.</description>
          <long-description></long-description>
          <tag line="248" name="param" description="The name of the value" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="248" name="param" description="The value" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="248" name="return" description="The current object." type="\Backend\Base\Formats\Html">
            <type by_reference="false">\Backend\Base\Formats\Html</type>
          </tag>
        </docblock>
        <argument line="256">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="256">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="269" package="Base\Formats">
        <name>getValue</name>
        <full_name>getValue</full_name>
        <docblock line="262">
          <description>Get the specified value, or all of the values if none is specified.</description>
          <long-description></long-description>
          <tag line="262" name="param" description="The name of the value. Omit to get all of the values." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="262" name="return" description="The value, or an array of all the values." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="121" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $config in setConfig()</error>
      <error line="145" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $render in setRender()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Formats/Json.php" hash="a65a786ed6b7505fb208efe02de9fe65" package="Base\Formats">
    <docblock line="2">
      <description>File defining \Base\Formats\Json</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Formats"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Formats" line="29" package="Base\Formats">
      <extends>\Backend\Core\Utilities\Formatter</extends>
      <name>Json</name>
      <full_name>\Backend\Base\Formats\Json</full_name>
      <docblock line="19">
        <description>Output a request in JavaScript Object Notation.</description>
        <long-description></long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="Base"/>
        <tag line="19" name="subpackage" description="Formats"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="34" namespace="Backend\Base\Formats" package="Default">
        <name>$handledFormats</name>
        <default>array('json', 'text/json', 'application/json', 'text/javascript')</default>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="var" description="Handle JSON requests" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Formats" line="43" package="Base\Formats">
        <name>transform</name>
        <full_name>transform</full_name>
        <docblock line="36">
          <description>Transform the result into the Format.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The result to transform" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="36" name="return" description="The response to transform" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Models/Value.php" hash="4756395227538d4ff33dc0304c96c9c2" package="Default">
    <class final="false" abstract="false" namespace="Backend\Base\Models" line="4" package="Default">
      <extends>\Backend\Base\Model</extends>
      <name>Value</name>
      <full_name>\Backend\Base\Models\Value</full_name>
      <property final="false" static="false" visibility="protected" line="6" namespace="Backend\Base\Models" package="Default">
        <name>$id</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="7" namespace="Backend\Base\Models" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="8" namespace="Backend\Base\Models" package="Default">
        <name>$value</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Models" line="10" package="Default">
        <name>getId</name>
        <full_name>getId</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Models" line="15" package="Default">
        <name>getName</name>
        <full_name>getName</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Models" line="20" package="Default">
        <name>getValue</name>
        <full_name>getValue</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file base/Backend/Base/Models/Value.php</error>
      <error line="4" code="50000">No DocBlock was found for \Backend\Base\Models\Value</error>
      <error line="6" code="50018">No DocBlock was found for property $id</error>
      <error line="7" code="50018">No DocBlock was found for property $name</error>
      <error line="8" code="50018">No DocBlock was found for property $value</error>
      <error line="10" code="50010">No DocBlock was found for method getId()</error>
      <error line="15" code="50010">No DocBlock was found for method getName()</error>
      <error line="20" code="50010">No DocBlock was found for method getValue()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Utilities/Renderable.php" hash="7154829ddf3282e5564126e90b4621a9" package="Base/Utilities">
    <docblock line="2">
      <description>File defining Base\Utilities\Renderable</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base/Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Utilities" line="27" package="Base/Utilities">
      <extends/>
      <name>Renderable</name>
      <full_name>\Backend\Base\Utilities\Renderable</full_name>
      <docblock line="16">
        <description>An object that can be Rendered by the Render Utility</description>
        <long-description>&lt;p&gt;Return a Renderable object from a Controller if you want to specify what template to render&lt;/p&gt;</long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Base/Utilities"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Backend\Base\Utilities" package="Default">
        <name>$renderer</name>
        <default>null</default>
        <docblock line="29">
          <description>The Renderer to use.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="\Backend\Interfaces\RenderInterface">
            <type by_reference="false">\Backend\Interfaces\RenderInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="Backend\Base\Utilities" package="Default">
        <name>$template</name>
        <default>'index'</default>
        <docblock line="36">
          <description>The template to render.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="Backend\Base\Utilities" package="Default">
        <name>$values</name>
        <default>array()</default>
        <docblock line="43">
          <description>The values to use when rendering the template.</description>
          <long-description></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="60" package="Base/Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>The constructor for the object</description>
          <long-description></long-description>
          <tag line="50" name="param" description="The Rendering Utility&#10;to use." type="\Backend\Interfaces\RenderInterface" variable="$renderer">
            <type by_reference="false">\Backend\Interfaces\RenderInterface</type>
          </tag>
          <tag line="50" name="param" description="The name of the&#10;template for the object" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="The values to use&#10;when rendering the template" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$renderer</name>
          <default></default>
          <type>\Backend\Interfaces\RenderInterface</type>
        </argument>
        <argument line="62">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="75" package="Base/Utilities">
        <name>getTemplate</name>
        <full_name>getTemplate</full_name>
        <docblock line="70">
          <description>Get the filename of the current template</description>
          <long-description></long-description>
          <tag line="70" name="return" description="The filename of the template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="87" package="Base/Utilities">
        <name>setTemplate</name>
        <full_name>setTemplate</full_name>
        <docblock line="80">
          <description>Set the template</description>
          <long-description></long-description>
          <tag line="80" name="param" description="The filename of the template" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="current object" type="\Backend\Base\Utilities\The">
            <type by_reference="false">\Backend\Base\Utilities\The</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="99" package="Base/Utilities">
        <name>getValues</name>
        <full_name>getValues</full_name>
        <docblock line="94">
          <description>Get the current values</description>
          <long-description></long-description>
          <tag line="94" name="return" description="The current values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="112" package="Base/Utilities">
        <name>setValue</name>
        <full_name>setValue</full_name>
        <docblock line="104">
          <description>Set a single value to be used when rendering the template</description>
          <long-description></long-description>
          <tag line="104" name="param" description="The name of the value being set" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="param" description="The value of the value being set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="104" name="return" description="current object" type="\Backend\Base\Utilities\The">
            <type by_reference="false">\Backend\Base\Utilities\The</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="126" package="Base/Utilities">
        <name>setValues</name>
        <full_name>setValues</full_name>
        <docblock line="119">
          <description>Set the values to be used when rendering the template</description>
          <long-description></long-description>
          <tag line="119" name="param" description="The new values" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="119" name="return" description="current object" type="\Backend\Base\Utilities\The">
            <type by_reference="false">\Backend\Base\Utilities\The</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="142" package="Base/Utilities">
        <name>addValues</name>
        <full_name>addValues</full_name>
        <docblock line="133">
          <description>Add multiple values to be used when rendering the template</description>
          <long-description>&lt;p&gt;Values already in the collection will be overwritten&lt;/p&gt;</long-description>
          <tag line="133" name="param" description="The values to append" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="133" name="return" description="current object" type="\Backend\Base\Utilities\The">
            <type by_reference="false">\Backend\Base\Utilities\The</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$values</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="154" package="Base/Utilities">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="149">
          <description>The magic function that converts the object to a string</description>
          <long-description></long-description>
          <tag line="149" name="return" description="The rendered template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Utilities/String.php" hash="a095bf87c03d129b07962788b9d1daf8" package="Base\Utilities">
    <docblock line="2">
      <description>File defining the String class</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Utilities" line="27" package="Base\Utilities">
      <extends/>
      <name>String</name>
      <full_name>\Backend\Base\Utilities\String</full_name>
      <docblock line="17">
        <description>Utility String class</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Base"/>
        <tag line="17" name="subpackage" description="Utilities"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Backend\Base\Utilities" package="Default">
        <name>$string</name>
        <default></default>
        <docblock line="29">
          <description>The literal string.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="41" package="Base\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="36">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The string we're operating on." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="51" package="Base\Utilities">
        <name>camelCase</name>
        <full_name>camelCase</full_name>
        <docblock line="46">
          <description>Get the CamelCase version of the string</description>
          <long-description></long-description>
          <tag line="46" name="return" description="The transformed string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="63" package="Base\Utilities">
        <name>unCamel</name>
        <full_name>unCamel</full_name>
        <docblock line="58">
          <description>Get the uncameled version of a string, using the optionally specified seperator.</description>
          <long-description></long-description>
          <tag line="58" name="return" description="The transformed string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$separator</name>
          <default>'-'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="82" package="Base\Utilities">
        <name>pluralize</name>
        <full_name>pluralize</full_name>
        <docblock line="74">
          <description>Returns the plural form of a word.</description>
          <long-description>&lt;p&gt;Code from http://www.eval.ca/articles/php-pluralize
Code from http://kuwamoto.org/2007/12/17/improved-pluralizing-in-php-actionscript-and-ror/&lt;/p&gt;</long-description>
          <tag line="74" name="return" description="The plural form of the word." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="162" package="Base\Utilities">
        <name>singularize</name>
        <full_name>singularize</full_name>
        <docblock line="153">
          <description>Returns the singular form of a word.</description>
          <long-description>&lt;p&gt;Code from http://www.eval.ca/articles/php-pluralize
Code from http://kuwamoto.org/2007/12/17/improved-pluralizing-in-php-actionscript-and-ror/&lt;/p&gt;</long-description>
          <tag line="153" name="return" description="The singular form of the word." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="todo" description="Get a way to avoid the duplication between singularize and pluralize"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="248" package="Base\Utilities">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="243">
          <description>Coonvert the String object to a literal string.</description>
          <long-description></long-description>
          <tag line="243" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="58" code="50015">Argument $separator is missing from the Docblock of unCamel()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Utilities/BindingFactory.php" hash="1746b197f7b51e1cb6283b15b985efe3" package="Base\Utilities">
    <docblock line="2">
      <description>File defining BindingFactory</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Utilities" line="33" package="Base\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\BindingFactoryInterface</implements>
      <name>BindingFactory</name>
      <full_name>\Backend\Base\Utilities\BindingFactory</full_name>
      <docblock line="21">
        <description>Factory class to create Bindings</description>
        <long-description></long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="Base"/>
        <tag line="21" name="subpackage" description="Utilities"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
        <tag line="21" name="todo" description="Cache built bindings"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" namespace="Backend\Base\Utilities" package="Default">
        <name>$bindings</name>
        <default></default>
        <docblock line="35">
          <description>An array defining the available bindings.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Backend\Base\Utilities" package="Default">
        <name>$connections</name>
        <default></default>
        <docblock line="42">
          <description>An array defining the available connections.</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="55" package="Base\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The bindings config." type="\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface" variable="$bindings">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="49" name="param" description="The connections config." type="\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface" variable="$connections">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$bindings</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
        <argument line="55">
          <name>$connections</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="72" package="Base\Utilities">
        <name>build</name>
        <full_name>build</full_name>
        <docblock line="64">
          <description>Build the binding using  the specified model name</description>
          <long-description></long-description>
          <tag line="64" name="param" description="The name of the model or the model for which to buld&#10;the binding" type="mixed" variable="$modelName">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="64" name="return" description="The binding" type="\Backend\Base\Utilities\Binding">
            <type by_reference="false">\Backend\Base\Utilities\Binding</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$modelName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="120" package="Base\Utilities">
        <name>getBindings</name>
        <full_name>getBindings</full_name>
        <docblock line="115">
          <description>Get the Bindings Configuration.</description>
          <long-description></long-description>
          <tag line="115" name="return" description="" type="\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="132" package="Base\Utilities">
        <name>setBindings</name>
        <full_name>setBindings</full_name>
        <docblock line="125">
          <description>Set the Bindings Configuration.</description>
          <long-description></long-description>
          <tag line="125" name="param" description="" type="\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface" variable="$bindings">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="125" name="return" description="" type="\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$bindings</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="144" package="Base\Utilities">
        <name>getBinding</name>
        <full_name>getBinding</full_name>
        <docblock line="139">
          <description>Get the specified Binding.</description>
          <long-description></long-description>
          <tag line="139" name="return" description="The Binding or null if it doesn't exist." type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="160" package="Base\Utilities">
        <name>setBinding</name>
        <full_name>setBinding</full_name>
        <docblock line="153">
          <description>Set the values of the specified Binding.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="The Binding described as an array." type="array" variable="$binding">
            <type by_reference="false">array</type>
          </tag>
          <tag line="153" name="return" description="" type="\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="160">
          <name>$binding</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="172" package="Base\Utilities">
        <name>getConnections</name>
        <full_name>getConnections</full_name>
        <docblock line="167">
          <description>Get the Connections Configuration.</description>
          <long-description></long-description>
          <tag line="167" name="return" description="" type="\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="184" package="Base\Utilities">
        <name>setConnections</name>
        <full_name>setConnections</full_name>
        <docblock line="177">
          <description>Set the Connections Configuration.</description>
          <long-description></long-description>
          <tag line="177" name="param" description="" type="\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface" variable="$connections">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Interfaces\ConfigInterface</type>
          </tag>
          <tag line="177" name="return" description="" type="\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$connections</name>
          <default></default>
          <type>\Backend\Interfaces\ConfigInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="196" package="Base\Utilities">
        <name>getConnection</name>
        <full_name>getConnection</full_name>
        <docblock line="191">
          <description>Get the specified Connection.</description>
          <long-description></long-description>
          <tag line="191" name="return" description="The Connection or null if it doesn't exist." type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Utilities" line="212" package="Base\Utilities">
        <name>setConnection</name>
        <full_name>setConnection</full_name>
        <docblock line="205">
          <description>Set the values of the specified Connection.</description>
          <long-description></long-description>
          <tag line="205" name="param" description="The Connection described as an array." type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="205" name="return" description="" type="\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory">
            <type by_reference="false">\Backend\Base\Utilities\Backend\Base\Utilities\BindingFactory</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="212">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="49" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $bindings in __construct()</error>
      <error line="49" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $connections in __construct()</error>
      <error line="125" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $bindings in setBindings()</error>
      <error line="139" code="50015">Argument $name is missing from the Docblock of getBinding()</error>
      <error line="153" code="50014">Name of argument $name does not match with the DocBlock's name $binding in setBinding()</error>
      <error line="153" code="50015">Argument $binding is missing from the Docblock of setBinding()</error>
      <error line="177" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $connections in setConnections()</error>
      <error line="191" code="50015">Argument $name is missing from the Docblock of getConnection()</error>
      <error line="205" code="50014">Name of argument $name does not match with the DocBlock's name $connection in setConnection()</error>
      <error line="205" code="50015">Argument $connection is missing from the Docblock of setConnection()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Listener/BaseListener.php" hash="45e055cacea4d8e05783bb3bfa2eb813" package="Base\Listeners">
    <docblock line="2">
      <description>File defining \Backend\Base\Listener\BaseListener</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Listeners"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Listener" line="33" package="Base\Listeners">
      <extends/>
      <name>BaseListener</name>
      <full_name>\Backend\Base\Listener\BaseListener</full_name>
      <docblock line="23">
        <description>The Base Listener.</description>
        <long-description></long-description>
        <tag line="23" name="category" description="Backend"/>
        <tag line="23" name="package" description="Base"/>
        <tag line="23" name="subpackage" description="Listeners"/>
        <tag line="23" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="23" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="23" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="40" namespace="Backend\Base\Listener" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="35">
          <description>The DI Container for the Listener</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="48" package="Base\Listeners">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="42">
          <description>The object constructor.</description>
          <long-description></long-description>
          <tag line="42" name="param" description="The DI Container." type="\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="61" package="Base\Listeners">
        <name>coreInitEvent</name>
        <full_name>coreInitEvent</full_name>
        <docblock line="53">
          <description>Method to handle core.init Events.</description>
          <long-description>&lt;p&gt;It starts an output buffer and checks for the session.&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="The event to handle." type="\Symfony\Component\EventDispatcher\Event" variable="$event">
            <type by_reference="false">\Symfony\Component\EventDispatcher\Event</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$event</name>
          <default></default>
          <type>\Symfony\Component\EventDispatcher\Event</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="78" package="Base\Listeners">
        <name>coreRequestEvent</name>
        <full_name>coreRequestEvent</full_name>
        <docblock line="70">
          <description>Method to handle core.request Events.</description>
          <long-description>&lt;p&gt;Just log the request coming in.&lt;/p&gt;</long-description>
          <tag line="70" name="param" description="The event to handle." type="\Backend\Core\Event\RequestEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\RequestEvent</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\RequestEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="95" package="Base\Listeners">
        <name>coreCallbackEvent</name>
        <full_name>coreCallbackEvent</full_name>
        <docblock line="87">
          <description>Method to handle core.callback Events.</description>
          <long-description>&lt;p&gt;It applies a couple of transforms on the object, ensuring consistency.&lt;/p&gt;</long-description>
          <tag line="87" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\CallbackEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="120" package="Base\Listeners">
        <name>coreResultEvent</name>
        <full_name>coreResultEvent</full_name>
        <docblock line="112">
          <description>Method to handle core.result Events.</description>
          <long-description>&lt;p&gt;It will try to get a default format if none is specified.&lt;/p&gt;</long-description>
          <tag line="112" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\ResultEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Listener" line="161" package="Base\Listeners">
        <name>callbackFormat</name>
        <full_name>callbackFormat</full_name>
        <docblock line="154">
          <description>Helper method to run the Callback's formatting.</description>
          <long-description></long-description>
          <tag line="154" name="param" description="The result from the callback" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="154" name="return" description="The transformed result." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="195" package="Base\Listeners">
        <name>coreExceptionEvent</name>
        <full_name>coreExceptionEvent</full_name>
        <docblock line="187">
          <description>Method to handle core.exception Events.</description>
          <long-description>&lt;p&gt;It will log the exception and redirect in special cases.&lt;/p&gt;</long-description>
          <tag line="187" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$event</name>
          <default></default>
          <type>\Backend\Core\Event\ExceptionEvent</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="247" package="Base\Listeners">
        <name>coreShutdownEvent</name>
        <full_name>coreShutdownEvent</full_name>
        <docblock line="238">
          <description>Method to handle core.shutdown Events.</description>
          <long-description>&lt;p&gt;It checks if a fatal error has occured and logs it.&lt;/p&gt;</long-description>
          <tag line="238" name="param" description="The event to handle" type="\Backend\Core\Event\CallbackEvent" variable="$event">
            <type by_reference="false">\Backend\Core\Event\CallbackEvent</type>
          </tag>
          <tag line="238" name="param" description="A dummy error used for testing." type="array" variable="$e">
            <type by_reference="false">array</type>
          </tag>
          <tag line="238" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$event</name>
          <default></default>
          <type>\Symfony\Component\EventDispatcher\Event</type>
        </argument>
        <argument line="247">
          <name>$e</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Listener" line="266" package="Base\Listeners">
        <name>getContainer</name>
        <full_name>getContainer</full_name>
        <docblock line="261">
          <description>Get the DI Container.</description>
          <long-description></long-description>
          <tag line="261" name="return" description="" type="\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="138">This isn't optimal. We don't close any unclosed sessions</todo>
    </markers>
    <parse_markers>
      <error line="112" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $event in coreResultEvent()</error>
      <error line="187" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $event in coreExceptionEvent()</error>
      <error line="238" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $event in coreShutdownEvent()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Controllers/ValuesController.php" hash="f6f51c8031b133bf1778dc121271c2f8" package="Base\Controllers">
    <docblock line="2">
      <description>File defining Base\Controllers\ValuesController</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Controllers"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Controllers" line="28" package="Base\Controllers">
      <extends>\Backend\Base\Controllers\ModelController</extends>
      <name>ValuesController</name>
      <full_name>\Backend\Base\Controllers\ValuesController</full_name>
      <docblock line="17">
        <description>A simple ModelController showing how to use Bindings and mapping REST actions
to CRUD methods.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Base"/>
        <tag line="17" name="subpackage" description="Controllers"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="30" package="Base\Controllers">
        <name>listAction</name>
        <full_name>listAction</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="30" code="50010">No DocBlock was found for method listAction()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Controllers/ExamplesController.php" hash="da087d52097b151dbe0f90820e1be1f8" package="Base\Controllers">
    <docblock line="2">
      <description>File defining Base\Controllers\ExamplesController</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Controllers"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Controllers" line="27" package="Base\Controllers">
      <extends>\Backend\Base\Controller</extends>
      <name>ExamplesController</name>
      <full_name>\Backend\Base\Controllers\ExamplesController</full_name>
      <docblock line="17">
        <description>An example controller containing some sample code</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Base"/>
        <tag line="17" name="subpackage" description="Controllers"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="34" package="Base\Controllers">
        <name>homeAction</name>
        <full_name>homeAction</full_name>
        <docblock line="29">
          <description>The home callback.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="Some string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="62" package="Base\Controllers">
        <name>homeHtml</name>
        <full_name>homeHtml</full_name>
        <docblock line="55">
          <description>A callback showing how to render a template</description>
          <long-description></long-description>
          <tag line="55" name="param" description="The result returned from homeAction" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="55" name="return" description="" type="\Backend\Base\Utilities\Renderable">
            <type by_reference="false">\Backend\Base\Utilities\Renderable</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="74" package="Base\Controllers">
        <name>homeCli</name>
        <full_name>homeCli</full_name>
        <docblock line="67">
          <description>A callback showing how to render a template</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The result returned from homeAction" type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="\Backend\Base\Utilities\Renderable">
            <type by_reference="false">\Backend\Base\Utilities\Renderable</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="87" package="Base\Controllers">
        <name>paramsAction</name>
        <full_name>paramsAction</full_name>
        <docblock line="79">
          <description>A callback showing the parameter functionality</description>
          <long-description></long-description>
          <tag line="79" name="param" description="An id" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="param" description="An optional parameter" type="mixed" variable="$another">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
        <argument line="87">
          <name>$another</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="97" package="Base\Controllers">
        <name>listAction</name>
        <full_name>listAction</full_name>
        <docblock line="92">
          <description>A callback who'se route is generated using the controllers array.</description>
          <long-description></long-description>
          <tag line="92" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Controllers/ModelController.php" hash="cb3005887c50b1beef5e2b3fb6a9e187" package="Base\Interfaces">
    <docblock line="2">
      <description>File defining Backend\Base\Controllers\ModelController</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Interfaces"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Controllers" line="39" package="Base\Interfaces">
      <extends>\Backend\Base\Controller</extends>
      <name>ModelController</name>
      <full_name>\Backend\Base\Controllers\ModelController</full_name>
      <docblock line="23">
        <description>The Model Controller provides basic CRUD functionality on Models to Controllers.</description>
        <long-description>&lt;p&gt;Executing GET requests on the following special resources modifies the default REST behaviour&lt;/p&gt;</long-description>
        <tag line="23" name="todo" description="&lt;controller&gt;/input Return the inputs required to create or update an entity."/>
        <tag line="23" name="todo" description="&lt;controller&gt;/form and &lt;controller&gt;/&lt;id&gt;/form Return an HTML form to&#10;create and update the model respectivel."/>
        <tag line="23" name="todo" description="Make sure we follow http://i.stack.imgur.com/whhD1.png"/>
        <tag line="23" name="category" description="Backend"/>
        <tag line="23" name="package" description="Base"/>
        <tag line="23" name="subpackage" description="Interfaces"/>
        <tag line="23" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="23" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="23" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="46" namespace="Backend\Base\Controllers" package="Default">
        <name>$modelName</name>
        <default>null</default>
        <docblock line="41">
          <description>The class name of the Model this Controller is connected with.</description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="55" package="Base\Interfaces">
        <name>formAction</name>
        <full_name>formAction</full_name>
        <docblock line="48">
          <description>Get a Form for the Model.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="The identifier" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="return" description="" type="\Backend\Interfaces\ModelInterface|\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="74" package="Base\Interfaces">
        <name>formHtml</name>
        <full_name>formHtml</full_name>
        <docblock line="67">
          <description>The HTML method for the form Action.</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The result from the Action method." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="\Backend\Base\Utilities\Renderable">
            <type by_reference="false">\Backend\Base\Utilities\Renderable</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="101" package="Base\Interfaces">
        <name>createAction</name>
        <full_name>createAction</full_name>
        <docblock line="95">
          <description>CRUD Create functionality for controllers.</description>
          <long-description></long-description>
          <tag line="95" name="return" description="A Created / 201 Response with a redirect&#10;to the created resource." type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="121" package="Base\Interfaces">
        <name>createHtml</name>
        <full_name>createHtml</full_name>
        <docblock line="111">
          <description>The HTML method for the create Action.</description>
          <long-description>&lt;p&gt;If a Model is returned by createAction, and it has a getId method, a redirect
to the Model's URL will be issued. Otherwise a redirect to the referer is issued.&lt;/p&gt;</long-description>
          <tag line="111" name="param" description="The result from the Action method." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="111" name="return" description="A Redirect to the created resource" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="144" package="Base\Interfaces">
        <name>listAction</name>
        <full_name>listAction</full_name>
        <docblock line="139">
          <description>An Extension of the CRUD Read function to list a resource</description>
          <long-description></long-description>
          <tag line="139" name="return" description="An array of Models" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="184" package="Base\Interfaces">
        <name>listHtml</name>
        <full_name>listHtml</full_name>
        <docblock line="177">
          <description>The HTML method for the list Action.</description>
          <long-description></long-description>
          <tag line="177" name="param" description="The result from the Action method." type="array" variable="$result">
            <type by_reference="false">array</type>
          </tag>
          <tag line="177" name="return" description="" type="\Backend\Base\Utilities\Renderable">
            <type by_reference="false">\Backend\Base\Utilities\Renderable</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="205" package="Base\Interfaces">
        <name>readAction</name>
        <full_name>readAction</full_name>
        <docblock line="198">
          <description>CRUD Read functionality for controllers.</description>
          <long-description></long-description>
          <tag line="198" name="param" description="The identifier" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="198" name="return" description="" type="\Backend\Interfaces\ModelInterface|\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="225" package="Base\Interfaces">
        <name>readHtml</name>
        <full_name>readHtml</full_name>
        <docblock line="218">
          <description>The HTML method for the read Action.</description>
          <long-description></long-description>
          <tag line="218" name="param" description="The result from the Action method." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="218" name="return" description="" type="\Backend\Base\Utilities\Renderable">
            <type by_reference="false">\Backend\Base\Utilities\Renderable</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="254" package="Base\Interfaces">
        <name>updateAction</name>
        <full_name>updateAction</full_name>
        <docblock line="247">
          <description>CRUD Update functionality for controllers.</description>
          <long-description></long-description>
          <tag line="247" name="param" description="The identifier. @todo Set to 0 to reference the whole collection" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="247" name="return" description="A OK / 200 Response if successful." type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="279" package="Base\Interfaces">
        <name>updateHtml</name>
        <full_name>updateHtml</full_name>
        <docblock line="269">
          <description>The HTML method for the update Action.</description>
          <long-description>&lt;p&gt;It redirects to the GET of the URL, as this should give you the updated
response in REST architecture.&lt;/p&gt;</long-description>
          <tag line="269" name="param" description="The result from the Action method." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="269" name="return" description="A Redirect to the updated resource" type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="300" package="Base\Interfaces">
        <name>deleteAction</name>
        <full_name>deleteAction</full_name>
        <docblock line="293">
          <description>CRUD Delete functionality for controllers.</description>
          <long-description></long-description>
          <tag line="293" name="param" description="The identifier. @todo Set to 0 to reference the whole collection" type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="return" description="A No Content / 204 Response if successful." type="\Backend\Core\Response">
            <type by_reference="false">\Backend\Core\Response</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$id</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="321" package="Base\Interfaces">
        <name>deleteHtml</name>
        <full_name>deleteHtml</full_name>
        <docblock line="314">
          <description>The HTML method for the delete Action</description>
          <long-description></long-description>
          <tag line="314" name="param" description="The result from the Action method." type="mixed" variable="$result">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="314" name="return" description="A Redirect to the resource collection" type="\Backend\Interfaces\ResponseInterface">
            <type by_reference="false">\Backend\Interfaces\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="321">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="342" package="Base\Interfaces">
        <name>getModelName</name>
        <full_name>getModelName</full_name>
        <docblock line="335">
          <description>Return the Model name derived from the given Controller</description>
          <long-description></long-description>
          <tag line="335" name="param" description="The name of the controller, or the controller itself" type="mixed" variable="$controllerName">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="335" name="return" description="The name of the corresponding Model." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$controllerName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Controllers" line="370" package="Base\Interfaces">
        <name>setModelName</name>
        <full_name>setModelName</full_name>
        <docblock line="363">
          <description>Set the model name for this Controller Class.</description>
          <long-description></long-description>
          <tag line="363" name="param" description="" type="string" variable="$modelName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="363" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="370">
          <name>$modelName</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Controllers" line="388" package="Base\Interfaces">
        <name>getBinding</name>
        <full_name>getBinding</full_name>
        <docblock line="378">
          <description>Get the Model Binding, using the name of the controller to determine the binding.</description>
          <long-description>&lt;p&gt;I would love to make this static, but we need the container to get the factory,
to get the binding.&lt;/p&gt;</long-description>
          <tag line="378" name="param" description="The name of the model to get the binding for." type="string" variable="$modelName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="378" name="return" description="" type="\Backend\Interfaces\BindingInterface">
            <type by_reference="false">\Backend\Interfaces\BindingInterface</type>
          </tag>
        </docblock>
        <argument line="388">
          <name>$modelName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Model.php" hash="936b8822e3e9ee23a2b9a072bbd3c075" package="Base">
    <docblock line="2">
      <description>File defining \Base\Model</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base" line="27" package="Base">
      <extends/>
      <implements>\Backend\Interfaces\ModelInterface</implements>
      <name>Model</name>
      <full_name>\Backend\Base\Model</full_name>
      <docblock line="16">
        <description>The main Model class.</description>
        <long-description>&lt;p&gt;Normal / bindable properties should NOT start with an underscore. Meta properties should.&lt;/p&gt;</long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Base"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="36" package="Base">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="29">
          <description>Magic __get function</description>
          <long-description></long-description>
          <tag line="29" name="param" description="The name of the property being retrieved" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="return" description="The value of the property" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="56" package="Base">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="48">
          <description>Magic __set function</description>
          <long-description></long-description>
          <tag line="48" name="param" description="The name of the property being set" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="The value of the property being set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="48" name="return" description="The current Model" type="\Backend\Base\Model">
            <type by_reference="false">\Backend\Base\Model</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="82" package="Base">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="73">
          <description>Populate the Model with the specified properties.</description>
          <long-description>&lt;p&gt;The function will use any &lt;code&gt;set&lt;/code&gt; functions defined.&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="An array containing the properties for the model" type="array" variable="$properties">
            <type by_reference="false">array</type>
          </tag>
          <tag line="73" name="return" description="The object that was populated" type="Object">
            <type by_reference="false">Object</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$properties</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="106" package="Base">
        <name>getProperties</name>
        <full_name>getProperties</full_name>
        <docblock line="101">
          <description>Get the properties of the Model</description>
          <long-description></long-description>
          <tag line="101" name="return" description="The properties of the model as a key / value array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="130" package="Base">
        <name>toJson</name>
        <full_name>toJson</full_name>
        <docblock line="125">
          <description>Convert the Model to JSON.</description>
          <long-description></long-description>
          <tag line="125" name="return" description="The model as a JSON string." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Controller.php" hash="bb9d2d588d9e984ef7010f05825bf460" package="Core">
    <docblock line="2">
      <description>File defining the Base Controller</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base" line="27" package="Core">
      <extends>\Backend\Core\Controller</extends>
      <name>Controller</name>
      <full_name>\Backend\Base\Controller</full_name>
      <docblock line="18">
        <description>A Basic Controller that contains Application Logic.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Core"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="37" package="Core">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="29">
          <description>Create a Renderable object.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="The template to render." type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="The values to pass to the template." type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="29" name="return" description="The Renderable object" type="\Backend\Base\Utilities\Renderable">
            <type by_reference="false">\Backend\Base\Utilities\Renderable</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="65" package="Core">
        <name>flash</name>
        <full_name>flash</full_name>
        <docblock line="55">
          <description>Safely add a flash variable.</description>
          <long-description>&lt;p&gt;If the flash service was defined, log the call and ignore.&lt;/p&gt;</long-description>
          <tag line="55" name="param" description="The name of the flash value." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="The flash value." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="55" name="return" description="" type="\Backend\Base\Controller">
            <type by_reference="false">\Backend\Base\Controller</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="65">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base" line="84" package="Core">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="76">
          <description>Magic method to get properties.</description>
          <long-description>&lt;p&gt;Will return the named service if it exists.&lt;/p&gt;</long-description>
          <tag line="76" name="param" description="The name of the property or service to get." type="string" variable="$property">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="76" name="throws" description="If the service doesn't exist." type="\ErrorException">
            <type by_reference="false">\ErrorException</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$property</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Tests/Formats/HtmlTest.php" hash="2e991b2d1a99606aaed7468bb85ddea1" package="BaseTests">
    <docblock line="2">
      <description>File defining \Backend\Base\Tests\Formats\HtmlTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Formats" line="30" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>HtmlTest</name>
      <full_name>\Backend\Base\Tests\Formats\HtmlTest</full_name>
      <docblock line="21">
        <description>Class to test the \Backend\Base\Formats\Html class</description>
        <long-description></long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="BaseTests"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="37" package="BaseTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="32">
          <description>Test the constructor.</description>
          <long-description></long-description>
          <tag line="32" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="54" package="BaseTests">
        <name>testConfigAccessors</name>
        <full_name>testConfigAccessors</full_name>
        <docblock line="49">
          <description>Test the Config setter and getter.</description>
          <long-description></long-description>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="71" package="BaseTests">
        <name>testRenderAccessors</name>
        <full_name>testRenderAccessors</full_name>
        <docblock line="66">
          <description>Test the Render setter and getter.</description>
          <long-description></long-description>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="88" package="BaseTests">
        <name>testResponseCalls</name>
        <full_name>testResponseCalls</full_name>
        <docblock line="83">
          <description>Test if the correct calls are made to the response.</description>
          <long-description></long-description>
          <tag line="83" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="117" package="BaseTests">
        <name>dataTransform</name>
        <full_name>dataTransform</full_name>
        <docblock line="112">
          <description>Data provider for the transform method.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="154" package="BaseTests">
        <name>testTransform</name>
        <full_name>testTransform</full_name>
        <docblock line="148">
          <description>Test the transform method.</description>
          <long-description></long-description>
          <tag line="148" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="148" name="dataProvider" description="dataTransform"/>
        </docblock>
        <argument line="154">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="174" package="BaseTests">
        <name>testResponseTransform</name>
        <full_name>testResponseTransform</full_name>
        <docblock line="168">
          <description>Test transforming responses</description>
          <long-description></long-description>
          <tag line="168" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="168" name="dataProvider" description="dataTransform"/>
        </docblock>
        <argument line="174">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="196" package="BaseTests">
        <name>testSetValue</name>
        <full_name>testSetValue</full_name>
        <docblock line="191">
          <description>Test setting a value/</description>
          <long-description></long-description>
          <tag line="191" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="148" code="50015">Argument $body is missing from the Docblock of testTransform()</error>
      <error line="168" code="50015">Argument $body is missing from the Docblock of testResponseTransform()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/Formats/JsonTest.php" hash="e205f94cd486366971517204781265c6" package="BaseTests">
    <docblock line="2">
      <description>File defining \Backend\Base\Tests\Formats\JsonTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Formats" line="29" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>JsonTest</name>
      <full_name>\Backend\Base\Tests\Formats\JsonTest</full_name>
      <docblock line="20">
        <description>Class to test the \Backend\Base\Formats\Json class</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="BaseTests"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="36" package="BaseTests">
        <name>testResponseCalls</name>
        <full_name>testResponseCalls</full_name>
        <docblock line="31">
          <description>Test if the correct calls are made to the response.</description>
          <long-description></long-description>
          <tag line="31" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="61" package="BaseTests">
        <name>dataTransform</name>
        <full_name>dataTransform</full_name>
        <docblock line="56">
          <description>Data provider for the transform method.</description>
          <long-description></long-description>
          <tag line="56" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="93" package="BaseTests">
        <name>testTransform</name>
        <full_name>testTransform</full_name>
        <docblock line="87">
          <description>Test the transform method.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="87" name="dataProvider" description="dataTransform"/>
        </docblock>
        <argument line="93">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="111" package="BaseTests">
        <name>testResponseTransform</name>
        <full_name>testResponseTransform</full_name>
        <docblock line="105">
          <description>Test transforming responses</description>
          <long-description></long-description>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="105" name="dataProvider" description="dataTransform"/>
        </docblock>
        <argument line="111">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="132" package="BaseTests">
        <name>testJsonEncodingError</name>
        <full_name>testJsonEncodingError</full_name>
        <docblock line="125">
          <description>Test json encoding error</description>
          <long-description></long-description>
          <tag line="125" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="125" name="expectedException" description="\RuntimeException"/>
          <tag line="125" name="expectedExceptionMessage" description="Json Encoding Error"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="87" code="50015">Argument $body is missing from the Docblock of testTransform()</error>
      <error line="105" code="50015">Argument $body is missing from the Docblock of testResponseTransform()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/Formats/CliTest.php" hash="3964fe2af81389e505706c1e10a0800b" package="BaseTests">
    <docblock line="2">
      <description>File defining \Backend\Base\Tests\Formats\CliTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Formats" line="29" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>CliTest</name>
      <full_name>\Backend\Base\Tests\Formats\CliTest</full_name>
      <docblock line="20">
        <description>Class to test the \Backend\Base\Formats\Cli class</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="BaseTests"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="36" package="BaseTests">
        <name>dataTransform</name>
        <full_name>dataTransform</full_name>
        <docblock line="31">
          <description>Data provider for the transform method.</description>
          <long-description></long-description>
          <tag line="31" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="68" package="BaseTests">
        <name>testTransform</name>
        <full_name>testTransform</full_name>
        <docblock line="62">
          <description>Test the transform method.</description>
          <long-description></long-description>
          <tag line="62" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="62" name="dataProvider" description="dataTransform"/>
        </docblock>
        <argument line="68">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Formats" line="86" package="BaseTests">
        <name>testResponseTransform</name>
        <full_name>testResponseTransform</full_name>
        <docblock line="80">
          <description>Test transforming responses</description>
          <long-description></long-description>
          <tag line="80" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="80" name="dataProvider" description="dataTransform"/>
        </docblock>
        <argument line="86">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="62" code="50015">Argument $body is missing from the Docblock of testTransform()</error>
      <error line="80" code="50015">Argument $body is missing from the Docblock of testResponseTransform()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/Utilities/RenderableTest.php" hash="69e035235d3fa73f57eb2aef64f8a63c" package="BaseTests">
    <docblock line="2">
      <description>File defining \Backend\Base\Tests\Utilities\RenderableTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Utilities" line="27" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>RenderableTest</name>
      <full_name>\Backend\Base\Tests\Utilities\RenderableTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Base\Utilities\Renderable class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="BaseTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="34" package="BaseTests">
        <name>testTemplateAccessors</name>
        <full_name>testTemplateAccessors</full_name>
        <docblock line="29">
          <description>Test the Template getter and setter</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="48" package="BaseTests">
        <name>testValuesAccessors</name>
        <full_name>testValuesAccessors</full_name>
        <docblock line="43">
          <description>Test the Values getter and setter</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="62" package="BaseTests">
        <name>testAddValue</name>
        <full_name>testAddValue</full_name>
        <docblock line="57">
          <description>Test Adding Values.</description>
          <long-description></long-description>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="79" package="BaseTests">
        <name>testSetValue</name>
        <full_name>testSetValue</full_name>
        <docblock line="74">
          <description>Test Setting a Value.</description>
          <long-description></long-description>
          <tag line="74" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="94" package="BaseTests">
        <name>testRender</name>
        <full_name>testRender</full_name>
        <docblock line="89">
          <description>Test the rendering.</description>
          <long-description></long-description>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="111" package="BaseTests">
        <name>testRenderError</name>
        <full_name>testRenderError</full_name>
        <docblock line="106">
          <description>Test a rendering exception.</description>
          <long-description></long-description>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Tests/Utilities/BindingFactoryTest.php" hash="c3672a73ed6c62f89b7047e4f7f937bf" package="BaseTests">
    <docblock line="2">
      <description>File defining \Backend\Base\Tests\Utilities\BindingFactoryTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="166" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="227" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="265" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="309" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Utilities" line="27" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>BindingFactoryTest</name>
      <full_name>\Backend\Base\Tests\Utilities\BindingFactoryTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Base\Utilities\BindingFactory class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="BaseTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="34" package="BaseTests">
        <name>testBindingsAccessors</name>
        <full_name>testBindingsAccessors</full_name>
        <docblock line="29">
          <description>Test the Bindings setter and getter.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="51" package="BaseTests">
        <name>testConnectionsAccessors</name>
        <full_name>testConnectionsAccessors</full_name>
        <docblock line="46">
          <description>Test the Connections setter and getter.</description>
          <long-description></long-description>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="68" package="BaseTests">
        <name>testBindingAccessors</name>
        <full_name>testBindingAccessors</full_name>
        <docblock line="63">
          <description>Test the Binding (singular) setter and getter.</description>
          <long-description></long-description>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="100" package="BaseTests">
        <name>testConnectionAccessors</name>
        <full_name>testConnectionAccessors</full_name>
        <docblock line="95">
          <description>Test the Connection (singular) setter and getter.</description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="132" package="BaseTests">
        <name>testUndefinedConnectionOrBinding</name>
        <full_name>testUndefinedConnectionOrBinding</full_name>
        <docblock line="127">
          <description>Test undefined connection / binding</description>
          <long-description></long-description>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="147" package="BaseTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="142">
          <description>Test the constructor.</description>
          <long-description></long-description>
          <tag line="142" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="164" package="BaseTests">
        <name>testUnconfiguredBinding</name>
        <full_name>testUnconfiguredBinding</full_name>
        <docblock line="157">
          <description>Test a unconfigured binding.</description>
          <long-description></long-description>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="157" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="157" name="expectedExceptionMessage" description="No binding setup"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="193" package="BaseTests">
        <name>testFaultyBinding</name>
        <full_name>testFaultyBinding</full_name>
        <docblock line="186">
          <description>Test a misconfigured Binding</description>
          <long-description></long-description>
          <tag line="186" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="186" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="186" name="expectedExceptionMessage" description="Missing Binding Type"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="225" package="BaseTests">
        <name>testMissingConnection</name>
        <full_name>testMissingConnection</full_name>
        <docblock line="218">
          <description>Test a missing connection.</description>
          <long-description></long-description>
          <tag line="218" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="218" name="expectedException" description="\Backend\Core\Exceptions\ConfigException"/>
          <tag line="218" name="expectedExceptionMessage" description="Could not find Binding Connection"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="263" package="BaseTests">
        <name>testSuccessfulBuild</name>
        <full_name>testSuccessfulBuild</full_name>
        <docblock line="258">
          <description>Test a successful build method.</description>
          <long-description></long-description>
          <tag line="258" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="307" package="BaseTests">
        <name>testDefaultBinding</name>
        <full_name>testDefaultBinding</full_name>
        <docblock line="302">
          <description>Test getting the default Binding</description>
          <long-description></long-description>
          <tag line="302" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Tests/Utilities/StringTest.php" hash="3c2dab227081a5ff6c479b04bc9c5754" package="BaseTests">
    <docblock line="2">
      <description>File defining \Backend\Base\Tests\Utilities\StringTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Utilities" line="27" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>StringTest</name>
      <full_name>\Backend\Base\Tests\Utilities\StringTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Base\Utilities\String class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="BaseTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="34" package="BaseTests">
        <name>dataCamelCase</name>
        <full_name>dataCamelCase</full_name>
        <docblock line="29">
          <description>Data for the testCamelCase method.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="55" package="BaseTests">
        <name>testCamelCase</name>
        <full_name>testCamelCase</full_name>
        <docblock line="46">
          <description>Test the camel case method.</description>
          <long-description></long-description>
          <tag line="46" name="param" description="The string to transform." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="The expected string after transformation." type="string" variable="$expected">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="46" name="dataProvider" description="dataCamelCase"/>
        </docblock>
        <argument line="55">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="66" package="BaseTests">
        <name>dataUnCamel</name>
        <full_name>dataUnCamel</full_name>
        <docblock line="61">
          <description>Data for the testUnCamel method.</description>
          <long-description></long-description>
          <tag line="61" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="88" package="BaseTests">
        <name>testUnCamel</name>
        <full_name>testUnCamel</full_name>
        <docblock line="78">
          <description>Test the unCamel method.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="The string to transform." type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="The separator." type="string" variable="$separator">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="The expected string after transformation." type="string" variable="$expected">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="78" name="dataProvider" description="dataUnCamel"/>
        </docblock>
        <argument line="88">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$separator</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="99" package="BaseTests">
        <name>dataSingularAndPlural</name>
        <full_name>dataSingularAndPlural</full_name>
        <docblock line="94">
          <description>Data for the testSingularize method.</description>
          <long-description></long-description>
          <tag line="94" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="123" package="BaseTests">
        <name>testSingularize</name>
        <full_name>testSingularize</full_name>
        <docblock line="114">
          <description>Test the singularize method.</description>
          <long-description></long-description>
          <tag line="114" name="param" description="The string to transform." type="string" variable="$singular">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="param" description="The expected string after transformation." type="string" variable="$plural">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="114" name="dataProvider" description="dataSingularAndPlural"/>
        </docblock>
        <argument line="123">
          <name>$singular</name>
          <default></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$plural</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Utilities" line="138" package="BaseTests">
        <name>testPluralize</name>
        <full_name>testPluralize</full_name>
        <docblock line="129">
          <description>Test the pluralize method.</description>
          <long-description></long-description>
          <tag line="129" name="param" description="The expected string after transformation." type="string" variable="$plural">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="The string to transform." type="string" variable="$singular">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="129" name="dataProvider" description="dataSingularAndPlural"/>
        </docblock>
        <argument line="138">
          <name>$singular</name>
          <default></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$plural</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="129" code="50014">Name of argument $singular does not match with the DocBlock's name $plural in testPluralize()</error>
      <error line="129" code="50014">Name of argument $plural does not match with the DocBlock's name $singular in testPluralize()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/auxiliary/TestBinding.php" hash="b839bd8ed9d3edbd3f6d872e20cad14e" package="CoreTests\Auxiliary">
    <docblock line="2">
      <description>File defining TestBinding.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Auxiliary"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="CoreTests\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\BindingInterface</implements>
      <name>TestBinding</name>
      <full_name>\TestBinding</full_name>
      <docblock line="16">
        <description>Class to test the Binding Factory</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="CoreTests"/>
        <tag line="16" name="subpackage" description="Utilities"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="CoreTests\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="The connection settings for the Binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="throws" description="" type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="CoreTests\Utilities">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="40">
          <description>Find multiple instances of the resource.</description>
          <long-description>&lt;p&gt;Don't specify any criteria to retrieve a full list of instances.&lt;/p&gt;</long-description>
          <tag line="40" name="param" description="An array of conditions on which to filter the list." type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="param" description="An array of options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="return" description="An array of representations of the resource." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="52">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="CoreTests\Utilities">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="57">
          <description>Create an instance on the source, and return the instance.</description>
          <long-description></long-description>
          <tag line="57" name="param" description="The data to create a new resource." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="return" description="The created model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="57" name="throws" description="When the resource can't be created." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="CoreTests\Utilities">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="70">
          <description>Read and return the single, specified instance of the resource.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="The unique identifier for the instance, or an&#10;array containing criteria on which to search for the resource." type="mixed" variable="$identifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="70" name="return" description="The identified model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="70" name="throws" description="When the resource can't be found." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="CoreTests\Utilities">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="84">
          <description>Refresh the specified instance on the source.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to update, and receives data from
the source.&lt;/p&gt;</long-description>
          <tag line="84" name="param" description="&amp;$model The model to refresh.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="84" name="return" description="If the refresh was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="84" name="throws" description="When the resource can't be refreshed." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="113" package="CoreTests\Utilities">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="101">
          <description>Update the specified instance of the resource.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to refresh, and sends data to
the source.&lt;/p&gt;</long-description>
          <tag line="101" name="param" description="&amp;$model The model to update.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="101" name="return" description="If the update was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="101" name="throws" description="When the resource can't be updated." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="CoreTests\Utilities">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="118">
          <description>Delete the specified instance of the resource</description>
          <long-description></long-description>
          <tag line="118" name="param" description="&amp;$model The model to delete" type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="118" name="return" description="If the deletion was succesful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="118" name="throws" description="When the resource can't be deleted." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Tests/auxiliary/TestModel.php" hash="d6af1680de35f6a4090d7e3cecdcef5e" package="CoreTests\Auxiliary">
    <docblock line="2">
      <description>File defining TestModel.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="subpackage" description="Auxiliary"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="CoreTests\Utilities">
      <extends>\Backend\Base\Model</extends>
      <name>TestModel</name>
      <full_name>\TestModel</full_name>
      <docblock line="16">
        <description>Class to test the Model accessors</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="CoreTests"/>
        <tag line="16" name="subpackage" description="Utilities"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="28" namespace="global" package="Default">
        <name>$property</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="29" namespace="global" package="Default">
        <name>$accessor</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="30" namespace="global" package="Default">
        <name>$_hidden</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="32" package="CoreTests\Utilities">
        <name>getAccessor</name>
        <full_name>getAccessor</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="CoreTests\Utilities">
        <name>setAccessor</name>
        <full_name>setAccessor</full_name>
        <argument line="37">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="28" code="50018">No DocBlock was found for property $property</error>
      <error line="29" code="50018">No DocBlock was found for property $accessor</error>
      <error line="30" code="50018">No DocBlock was found for property $_hidden</error>
      <error line="32" code="50010">No DocBlock was found for method getAccessor()</error>
      <error line="37" code="50010">No DocBlock was found for method setAccessor()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/ModelTest.php" hash="a7af2fb01dbb5639b191c736f7aa4f50" package="BaseTests">
    <docblock line="2">
      <description>File defining Backend\Base\ModelTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="36" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="50" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="66" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="81" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="94" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="114" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="128" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="145" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Base\Tests" line="27" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ModelTest</name>
      <full_name>\Backend\Base\Tests\ModelTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Base\Model class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="BaseTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="34" package="BaseTests">
        <name>testMagic</name>
        <full_name>testMagic</full_name>
        <docblock line="29">
          <description>Test that the magic get method uses the accessor.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="48" package="BaseTests">
        <name>testMagicThroughAccessor</name>
        <full_name>testMagicThroughAccessor</full_name>
        <docblock line="43">
          <description>Test that the magic set method uses the accessor.</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="64" package="BaseTests">
        <name>testGetUndefinedProperty</name>
        <full_name>testGetUndefinedProperty</full_name>
        <docblock line="57">
          <description>Test getting an undefined property</description>
          <long-description></long-description>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="57" name="expectedException" description="\ErrorException"/>
          <tag line="57" name="expectedExceptionMessage" description="Undefined property"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="79" package="BaseTests">
        <name>testSetUndefinedProperty</name>
        <full_name>testSetUndefinedProperty</full_name>
        <docblock line="72">
          <description>Test setting an undefined property</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="72" name="expectedException" description="\ErrorException"/>
          <tag line="72" name="expectedExceptionMessage" description="Trying to set Undefined property"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="92" package="BaseTests">
        <name>testPopulateAndGetProperties</name>
        <full_name>testPopulateAndGetProperties</full_name>
        <docblock line="87">
          <description>Test the populate method.</description>
          <long-description></long-description>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="112" package="BaseTests">
        <name>testExceptionOnPopulate</name>
        <full_name>testExceptionOnPopulate</full_name>
        <docblock line="105">
          <description>Test Exception on populate.</description>
          <long-description></long-description>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="105" name="expectedException" description="\ErrorException"/>
          <tag line="105" name="expectedExceptionMessage" description="Undefined property"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="126" package="BaseTests">
        <name>testToJson</name>
        <full_name>testToJson</full_name>
        <docblock line="121">
          <description>Test the toJson Method.</description>
          <long-description></long-description>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="143" package="BaseTests">
        <name>testInvalidJson</name>
        <full_name>testInvalidJson</full_name>
        <docblock line="136">
          <description>Test invalid JSON.</description>
          <long-description></long-description>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="136" name="expectedException" description="\RuntimeException"/>
          <tag line="136" name="expectedExceptionMessage" description="Json Encoding Error"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Tests/ControllerTest.php" hash="c3fd3247550f5d7e1edbd7accf3f9f80" package="BaseTests">
    <docblock line="2">
      <description>File defining Backend\Base\ControllerTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests" line="27" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ControllerTest</name>
      <full_name>\Backend\Base\Tests\ControllerTest</full_name>
      <docblock line="18">
        <description>Class to test the \Backend\Base\Controller class</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="BaseTests"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="34" package="BaseTests">
        <name>testAddFlash</name>
        <full_name>testAddFlash</full_name>
        <docblock line="29">
          <description>Test adding a flash message.</description>
          <long-description></long-description>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="66" package="BaseTests">
        <name>testLogFlashWhenNoService</name>
        <full_name>testLogFlashWhenNoService</full_name>
        <docblock line="61">
          <description>Test adding a flash message without a flash service.</description>
          <long-description></long-description>
          <tag line="61" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="96" package="BaseTests">
        <name>testMagicGetService</name>
        <full_name>testMagicGetService</full_name>
        <docblock line="91">
          <description>Test getting a service through the magic __get method.</description>
          <long-description></long-description>
          <tag line="91" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="123" package="BaseTests">
        <name>testUndefinedService</name>
        <full_name>testUndefinedService</full_name>
        <docblock line="116">
          <description>Test throwing an exception when an undefined service is requested.</description>
          <long-description></long-description>
          <tag line="116" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="116" name="expectedException" description="\ErrorException"/>
          <tag line="116" name="expectedExceptionMessage" description="Undefined property"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="143" package="BaseTests">
        <name>testAddSessionAndFlashOnRender</name>
        <full_name>testAddSessionAndFlashOnRender</full_name>
        <docblock line="138">
          <description>Test adding the session when rendering.</description>
          <long-description></long-description>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests" line="195" package="BaseTests">
        <name>testDontOverwriteExistingSessionAndFlash</name>
        <full_name>testDontOverwriteExistingSessionAndFlash</full_name>
        <docblock line="190">
          <description>Test not overwriting existing session and flash.</description>
          <long-description></long-description>
          <tag line="190" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="base/Backend/Base/Tests/Listener/BaseListenerTest.php" hash="5f09b694bab39dc39c6f03f7a345e0ac" package="BaseTests">
    <docblock line="2">
      <description>File defining Backend\Base\Tests\Listener\BaseListenerTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Listener" line="29" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>BaseListenerTest</name>
      <full_name>\Backend\Base\Tests\Listener\BaseListenerTest</full_name>
      <docblock line="20">
        <description>Class to test the \Backend\Base\Listener\BaseListener class</description>
        <long-description></long-description>
        <tag line="20" name="category" description="Backend"/>
        <tag line="20" name="package" description="BaseTests"/>
        <tag line="20" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="20" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="20" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="Backend\Base\Tests\Listener" package="Default">
        <name>$container</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="40" package="BaseTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="33">
          <description>Set up the test</description>
          <long-description>&lt;p&gt;Set the debugging level to 1, set a Request&lt;/p&gt;</long-description>
          <tag line="33" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="51" package="BaseTests">
        <name>testConstructor</name>
        <full_name>testConstructor</full_name>
        <docblock line="47">
          <description></description>
          <long-description></long-description>
          <tag line="47" name="covers" description="\Backend\Base\Listener\BaseListener::__construct" refers="\Backend\Base\Listener\BaseListener::__construct"/>
          <tag line="47" name="covers" description="\Backend\Base\Listener\BaseListener::getContainer" refers="\Backend\Base\Listener\BaseListener::getContainer"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="61" package="BaseTests">
        <name>testSessionInitOnInitEvent</name>
        <full_name>testSessionInitOnInitEvent</full_name>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag line="57" name="covers" description="\Backend\Base\Listener\BaseListener::coreInitEvent" refers="\Backend\Base\Listener\BaseListener::coreInitEvent"/>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="80" package="BaseTests">
        <name>testLogRequestOnRequestEvent</name>
        <full_name>testLogRequestOnRequestEvent</full_name>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
          <tag line="76" name="covers" description="\Backend\Base\Listener\BaseListener::coreRequestEvent" refers="\Backend\Base\Listener\BaseListener::coreRequestEvent"/>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="114" package="BaseTests">
        <name>testAuthenticatorOnCallbackEvent</name>
        <full_name>testAuthenticatorOnCallbackEvent</full_name>
        <docblock line="110">
          <description></description>
          <long-description></long-description>
          <tag line="110" name="covers" description="\Backend\Base\Listener\BaseListener::coreCallbackEvent" refers="\Backend\Base\Listener\BaseListener::coreCallbackEvent"/>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="143" package="BaseTests">
        <name>testLoggerOnCallbackEvent</name>
        <full_name>testLoggerOnCallbackEvent</full_name>
        <docblock line="139">
          <description></description>
          <long-description></long-description>
          <tag line="139" name="covers" description="\Backend\Base\Listener\BaseListener::coreCallbackEvent" refers="\Backend\Base\Listener\BaseListener::coreCallbackEvent"/>
          <tag line="139" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="174" package="BaseTests">
        <name>testResultEventWithEmptyMethod</name>
        <full_name>testResultEventWithEmptyMethod</full_name>
        <docblock line="169">
          <description></description>
          <long-description></long-description>
          <tag line="169" name="covers" description="\Backend\Base\Listener\BaseListener::coreResultEvent" refers="\Backend\Base\Listener\BaseListener::coreResultEvent"/>
          <tag line="169" name="covers" description="\Backend\Base\Listener\BaseListener::callbackFormat" refers="\Backend\Base\Listener\BaseListener::callbackFormat"/>
          <tag line="169" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="215" package="BaseTests">
        <name>testUnsupportedFormatResultEvent</name>
        <full_name>testUnsupportedFormatResultEvent</full_name>
        <docblock line="208">
          <description></description>
          <long-description></long-description>
          <tag line="208" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="208" name="covers" description="\Backend\Base\Listener\BaseListener::coreResultEvent" refers="\Backend\Base\Listener\BaseListener::coreResultEvent"/>
          <tag line="208" name="expectedException" description="Backend\Core\Exception"/>
          <tag line="208" name="expectedExceptionMessage" description="Unsupported format requested"/>
          <tag line="208" name="expectedExceptionCode" description="415"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="239" package="BaseTests">
        <name>testDefaultFormatterResultEvent</name>
        <full_name>testDefaultFormatterResultEvent</full_name>
        <docblock line="235">
          <description></description>
          <long-description></long-description>
          <tag line="235" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="235" name="covers" description="\Backend\Base\Listener\BaseListener::coreResultEvent" refers="\Backend\Base\Listener\BaseListener::coreResultEvent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="279" package="BaseTests">
        <name>testResultEventWithFormatting</name>
        <full_name>testResultEventWithFormatting</full_name>
        <docblock line="274">
          <description></description>
          <long-description></long-description>
          <tag line="274" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="274" name="covers" description="\Backend\Base\Listener\BaseListener::coreResultEvent" refers="\Backend\Base\Listener\BaseListener::coreResultEvent"/>
          <tag line="274" name="covers" description="\Backend\Base\Listener\BaseListener::callbackFormat" refers="\Backend\Base\Listener\BaseListener::callbackFormat"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="333" package="BaseTests">
        <name>testAddsBufferResultEvent</name>
        <full_name>testAddsBufferResultEvent</full_name>
        <docblock line="329">
          <description></description>
          <long-description></long-description>
          <tag line="329" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="329" name="covers" description="\Backend\Base\Listener\BaseListener::coreResultEvent" refers="\Backend\Base\Listener\BaseListener::coreResultEvent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="396" package="BaseTests">
        <name>testDoesNotAddGZippedBufferResultEvent</name>
        <full_name>testDoesNotAddGZippedBufferResultEvent</full_name>
        <docblock line="392">
          <description></description>
          <long-description></long-description>
          <tag line="392" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="392" name="covers" description="\Backend\Base\Listener\BaseListener::coreResultEvent" refers="\Backend\Base\Listener\BaseListener::coreResultEvent"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="457" package="BaseTests">
        <name>testUnauthorizedWithNoRedirectOnExceptionEvent</name>
        <full_name>testUnauthorizedWithNoRedirectOnExceptionEvent</full_name>
        <docblock line="453">
          <description></description>
          <long-description></long-description>
          <tag line="453" name="covers" description="\Backend\Base\Listener\BaseListener::coreExceptionEvent" refers="\Backend\Base\Listener\BaseListener::coreExceptionEvent"/>
          <tag line="453" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="500" package="BaseTests">
        <name>testUnauthorizedWithRedirectOnExceptionEvent</name>
        <full_name>testUnauthorizedWithRedirectOnExceptionEvent</full_name>
        <docblock line="496">
          <description></description>
          <long-description></long-description>
          <tag line="496" name="covers" description="\Backend\Base\Listener\BaseListener::coreExceptionEvent" refers="\Backend\Base\Listener\BaseListener::coreExceptionEvent"/>
          <tag line="496" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="538" package="BaseTests">
        <name>testLoggingOnExceptionEvent</name>
        <full_name>testLoggingOnExceptionEvent</full_name>
        <docblock line="534">
          <description></description>
          <long-description></long-description>
          <tag line="534" name="covers" description="\Backend\Base\Listener\BaseListener::coreExceptionEvent" refers="\Backend\Base\Listener\BaseListener::coreExceptionEvent"/>
          <tag line="534" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Listener" line="570" package="BaseTests">
        <name>testErrorCheckOnShutdownEvent</name>
        <full_name>testErrorCheckOnShutdownEvent</full_name>
        <docblock line="566">
          <description></description>
          <long-description></long-description>
          <tag line="566" name="covers" description="\Backend\Base\Listener\BaseListener::coreShutdownEvent" refers="\Backend\Base\Listener\BaseListener::coreShutdownEvent"/>
          <tag line="566" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="31" code="50018">No DocBlock was found for property $container</error>
      <error line="47" code="50012">No short description for method testConstructor()</error>
      <error line="57" code="50012">No short description for method testSessionInitOnInitEvent()</error>
      <error line="76" code="50012">No short description for method testLogRequestOnRequestEvent()</error>
      <error line="110" code="50012">No short description for method testAuthenticatorOnCallbackEvent()</error>
      <error line="139" code="50012">No short description for method testLoggerOnCallbackEvent()</error>
      <error line="169" code="50012">No short description for method testResultEventWithEmptyMethod()</error>
      <error line="208" code="50012">No short description for method testUnsupportedFormatResultEvent()</error>
      <error line="235" code="50012">No short description for method testDefaultFormatterResultEvent()</error>
      <error line="274" code="50012">No short description for method testResultEventWithFormatting()</error>
      <error line="329" code="50012">No short description for method testAddsBufferResultEvent()</error>
      <error line="392" code="50012">No short description for method testDoesNotAddGZippedBufferResultEvent()</error>
      <error line="453" code="50012">No short description for method testUnauthorizedWithNoRedirectOnExceptionEvent()</error>
      <error line="496" code="50012">No short description for method testUnauthorizedWithRedirectOnExceptionEvent()</error>
      <error line="534" code="50012">No short description for method testLoggingOnExceptionEvent()</error>
      <error line="566" code="50012">No short description for method testErrorCheckOnShutdownEvent()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/Controllers/ModelControllerTest.php" hash="621376658e79db4603bd40b84f8c8a67" package="BaseTests">
    <docblock line="2">
      <description>File defining Backend\Base\Controllers\ModelControllerTest</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="BaseTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="140" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="154" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="464" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Base\Tests\Controllers" line="28" package="BaseTests">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ModelControllerTest</name>
      <full_name>\Backend\Base\Tests\Controllers\ModelControllerTest</full_name>
      <docblock line="19">
        <description>Class to test the \Backend\Base\Controllers\ModelController class</description>
        <long-description></long-description>
        <tag line="19" name="category" description="Backend"/>
        <tag line="19" name="package" description="BaseTests"/>
        <tag line="19" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="19" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="19" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="30" namespace="Backend\Base\Tests\Controllers" package="Default">
        <name>$container</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="31" namespace="Backend\Base\Tests\Controllers" package="Default">
        <name>$request</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="Backend\Base\Tests\Controllers" package="Default">
        <name>$controller</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="33" namespace="Backend\Base\Tests\Controllers" package="Default">
        <name>$requestContext</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="34" namespace="Backend\Base\Tests\Controllers" package="Default">
        <name>$bindingFactory</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="35" namespace="Backend\Base\Tests\Controllers" package="Default">
        <name>$renderer</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Tests\Controllers" line="41" package="BaseTests">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="36">
          <description>Set up the test.</description>
          <long-description></long-description>
          <tag line="36" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Tests\Controllers" line="83" package="BaseTests">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="78">
          <description>Tear down the test.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="98" package="BaseTests">
        <name>dataNoResponseHtml</name>
        <full_name>dataNoResponseHtml</full_name>
        <docblock line="93">
          <description>Data provider for Test that check Html Methods for invalid responses</description>
          <long-description></long-description>
          <tag line="93" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="117" package="BaseTests">
        <name>testFormWithId</name>
        <full_name>testFormWithId</full_name>
        <docblock line="112">
          <description>Test the form action with an id.</description>
          <long-description></long-description>
          <tag line="112" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="138" package="BaseTests">
        <name>testFormWithoutId</name>
        <full_name>testFormWithoutId</full_name>
        <docblock line="133">
          <description>Test the form action without an id.</description>
          <long-description></long-description>
          <tag line="133" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="152" package="BaseTests">
        <name>testFormHtml</name>
        <full_name>testFormHtml</full_name>
        <docblock line="147">
          <description>Test the formHtml method.</description>
          <long-description></long-description>
          <tag line="147" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="168" package="BaseTests">
        <name>testResponseFormHtml</name>
        <full_name>testResponseFormHtml</full_name>
        <docblock line="163">
          <description>Test the formHtml method.</description>
          <long-description></long-description>
          <tag line="163" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="183" package="BaseTests">
        <name>testNoResponseFormHtml</name>
        <full_name>testNoResponseFormHtml</full_name>
        <docblock line="175">
          <description>Test the formHtml method with an invalid Response.</description>
          <long-description></long-description>
          <tag line="175" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="175" name="expectedException" description="RuntimeException"/>
          <tag line="175" name="expectedExceptionMessage" description="Unknown Read Action Result"/>
          <tag line="175" name="dataProvider" description="dataNoResponseHtml"/>
        </docblock>
        <argument line="183">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="193" package="BaseTests">
        <name>testCreate</name>
        <full_name>testCreate</full_name>
        <docblock line="188">
          <description>Test the create action.</description>
          <long-description></long-description>
          <tag line="188" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="225" package="BaseTests">
        <name>testResponseCreateHtml</name>
        <full_name>testResponseCreateHtml</full_name>
        <docblock line="220">
          <description>Test the createHtml method with a standard response.</description>
          <long-description></long-description>
          <tag line="220" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="269" package="BaseTests">
        <name>testResponseModelIdCreateHtml</name>
        <full_name>testResponseModelIdCreateHtml</full_name>
        <docblock line="264">
          <description>Test the createHtml method with a Model with an Id.</description>
          <long-description></long-description>
          <tag line="264" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="316" package="BaseTests">
        <name>testNoResponseCreateHtml</name>
        <full_name>testNoResponseCreateHtml</full_name>
        <docblock line="311">
          <description>Test the createHtml method with no Response.</description>
          <long-description></long-description>
          <tag line="311" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="335" package="BaseTests">
        <name>testListAction</name>
        <full_name>testListAction</full_name>
        <docblock line="330">
          <description>Test a simple List.</description>
          <long-description></long-description>
          <tag line="330" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="361" package="BaseTests">
        <name>testListActionWithOptions</name>
        <full_name>testListActionWithOptions</full_name>
        <docblock line="356">
          <description>Test a List with Options.</description>
          <long-description></long-description>
          <tag line="356" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="403" package="BaseTests">
        <name>testListHtml</name>
        <full_name>testListHtml</full_name>
        <docblock line="398">
          <description>Test the listHtml method with a standard response.</description>
          <long-description></long-description>
          <tag line="398" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="417" package="BaseTests">
        <name>testResponseListHtml</name>
        <full_name>testResponseListHtml</full_name>
        <docblock line="412">
          <description>Test the listHtml method with a Response.</description>
          <long-description></long-description>
          <tag line="412" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="429" package="BaseTests">
        <name>testRead</name>
        <full_name>testRead</full_name>
        <docblock line="424">
          <description>Test the read action.</description>
          <long-description></long-description>
          <tag line="424" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="450" package="BaseTests">
        <name>testResponseReadHtml</name>
        <full_name>testResponseReadHtml</full_name>
        <docblock line="445">
          <description>Test the readHtml method with a standard response.</description>
          <long-description></long-description>
          <tag line="445" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="462" package="BaseTests">
        <name>testModelReadHtml</name>
        <full_name>testModelReadHtml</full_name>
        <docblock line="457">
          <description>Test the readHtml method with a Model.</description>
          <long-description></long-description>
          <tag line="457" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="481" package="BaseTests">
        <name>testNoResponseReadHtml</name>
        <full_name>testNoResponseReadHtml</full_name>
        <docblock line="473">
          <description>Test the readHtml method with an invalid response.</description>
          <long-description></long-description>
          <tag line="473" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="473" name="expectedException" description="RuntimeException"/>
          <tag line="473" name="expectedExceptionMessage" description="Unknown Read Action Result"/>
          <tag line="473" name="dataProvider" description="dataNoResponseHtml"/>
        </docblock>
        <argument line="481">
          <name>$result</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="491" package="BaseTests">
        <name>testRead404</name>
        <full_name>testRead404</full_name>
        <docblock line="486">
          <description>Test trying to read an non existant model.</description>
          <long-description></long-description>
          <tag line="486" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="515" package="BaseTests">
        <name>testUpdate</name>
        <full_name>testUpdate</full_name>
        <docblock line="510">
          <description>Test the update action.</description>
          <long-description></long-description>
          <tag line="510" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="555" package="BaseTests">
        <name>testUpdate404</name>
        <full_name>testUpdate404</full_name>
        <docblock line="550">
          <description>Test trying to update a record that doesn't exist.</description>
          <long-description></long-description>
          <tag line="550" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="579" package="BaseTests">
        <name>testResponseUpdateHtml</name>
        <full_name>testResponseUpdateHtml</full_name>
        <docblock line="574">
          <description>Test the updateHtml method.</description>
          <long-description></long-description>
          <tag line="574" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="614" package="BaseTests">
        <name>testNoResponseUpdateHtml</name>
        <full_name>testNoResponseUpdateHtml</full_name>
        <docblock line="609">
          <description>Test the updateHtml method.</description>
          <long-description></long-description>
          <tag line="609" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="633" package="BaseTests">
        <name>testDelete</name>
        <full_name>testDelete</full_name>
        <docblock line="628">
          <description>Test the delete action.</description>
          <long-description></long-description>
          <tag line="628" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="663" package="BaseTests">
        <name>testDelete404</name>
        <full_name>testDelete404</full_name>
        <docblock line="658">
          <description>Test trying to delete a record that doesn't exist.</description>
          <long-description></long-description>
          <tag line="658" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="687" package="BaseTests">
        <name>testResponseDeleteHtml</name>
        <full_name>testResponseDeleteHtml</full_name>
        <docblock line="682">
          <description>Test the deleteHtml method.</description>
          <long-description></long-description>
          <tag line="682" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="723" package="BaseTests">
        <name>testNoResponseDeleteHtml</name>
        <full_name>testNoResponseDeleteHtml</full_name>
        <docblock line="718">
          <description>Test the deleteHtml method.</description>
          <long-description></long-description>
          <tag line="718" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Tests\Controllers" line="743" package="BaseTests">
        <name>testModelNameAccessors</name>
        <full_name>testModelNameAccessors</full_name>
        <docblock line="738">
          <description>Test the ModelName getter and setter.</description>
          <long-description></long-description>
          <tag line="738" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="30" code="50018">No DocBlock was found for property $container</error>
      <error line="31" code="50018">No DocBlock was found for property $request</error>
      <error line="32" code="50018">No DocBlock was found for property $controller</error>
      <error line="33" code="50018">No DocBlock was found for property $requestContext</error>
      <error line="34" code="50018">No DocBlock was found for property $bindingFactory</error>
      <error line="35" code="50018">No DocBlock was found for property $renderer</error>
      <error line="175" code="50015">Argument $result is missing from the Docblock of testNoResponseFormHtml()</error>
      <error line="473" code="50015">Argument $result is missing from the Docblock of testNoResponseReadHtml()</error>
    </parse_markers>
  </file>
  <file path="base/Backend/Base/Tests/bootstrap.php" hash="2f84d2cd31d378b5517e12a232ca0b8f" package="CoreTests">
    <docblock line="2">
      <description>The bootstrapping script</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="CoreTests"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="Permission is hereby granted, free of charge, to any person obtaining a copy of&#10;this software and associated documentation files (the &quot;Software&quot;), to deal in the&#10;Software without restriction, including without limitation the rights to use, copy,&#10;modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,&#10;and to permit persons to whom the Software is furnished to do so, subject to the&#10;following conditions:&#10;The above copyright notice and this permission notice shall be included in all&#10;copies or substantial portions of the Software.&#10;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#10;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR&#10;A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT&#10;HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF&#10;CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE&#10;OR THE USE OR OTHER DEALINGS IN THE SOFTWARE." link="http://backend-php.net"/>
    </docblock>
    <include line="97" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="104" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="106" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="41" package="CoreTests">
      <name>PROJECT_FOLDER</name>
      <full_name>\PROJECT_FOLDER</full_name>
      <value>realpath(dirname(__FILE__) . '/../') . '/'</value>
    </constant>
    <constant namespace="global" line="48" package="CoreTests">
      <name>VENDOR_FOLDER</name>
      <full_name>\VENDOR_FOLDER</full_name>
      <value>PROJECT_FOLDER . 'vendor/'</value>
    </constant>
    <constant namespace="global" line="55" package="CoreTests">
      <name>SOURCE_FOLDER</name>
      <full_name>\SOURCE_FOLDER</full_name>
      <value>PROJECT_FOLDER . 'app/'</value>
    </constant>
    <constant namespace="global" line="62" package="CoreTests">
      <name>BACKEND_FOLDER</name>
      <full_name>\BACKEND_FOLDER</full_name>
      <value>VENDOR_FOLDER . 'Backend/'</value>
    </constant>
    <constant namespace="global" line="69" package="CoreTests">
      <name>WEB_FOLDER</name>
      <full_name>\WEB_FOLDER</full_name>
      <value>PROJECT_FOLDER . 'public/'</value>
    </constant>
    <constant namespace="global" line="76" package="CoreTests">
      <name>CONFIG_EXT</name>
      <full_name>\CONFIG_EXT</full_name>
      <value>'yaml'</value>
    </constant>
    <constant namespace="global" line="80" package="CoreTests">
      <name>BACKEND_SITE_STATE</name>
      <full_name>\BACKEND_SITE_STATE</full_name>
      <value>'testing'</value>
    </constant>
    <constant namespace="global" line="82" package="CoreTests">
      <name>BACKEND_SITE_STATE</name>
      <full_name>\BACKEND_SITE_STATE</full_name>
      <value>'development'</value>
    </constant>
    <constant namespace="global" line="84" package="CoreTests">
      <name>BACKEND_SITE_STATE</name>
      <full_name>\BACKEND_SITE_STATE</full_name>
      <value>'production'</value>
    </constant>
  </file>
  <file path="modules/Backend/Modules/Render.php" hash="a4f9996d76449548f40c82751df4e9ea" package="Base\Utilities">
    <docblock line="2">
      <description>File defining \Backend\Modules\Render</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="121" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="Backend\Modules" line="28" package="Base\Utilities">
      <extends/>
      <implements>\Backend\Interfaces\RenderInterface</implements>
      <name>Render</name>
      <full_name>\Backend\Modules\Render</full_name>
      <docblock line="18">
        <description>The basic Render class.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Base"/>
        <tag line="18" name="subpackage" description="Utilities"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="33" namespace="Backend\Modules" package="Default">
        <name>$templateLocations</name>
        <default>array()</default>
        <docblock line="30">
          <description></description>
          <long-description></long-description>
          <tag line="30" name="var" description="Location for template files. List them in order of preference" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="Backend\Modules" package="Default">
        <name>$variables</name>
        <default>array()</default>
        <docblock line="35">
          <description></description>
          <long-description></long-description>
          <tag line="35" name="var" description="This contains the variables bound to the renderer" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="45" package="Base\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>The constructor for the object</description>
          <long-description>&lt;p&gt;The template locations for the Renderer is set in this method&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="71" package="Base\Utilities">
        <name>bind</name>
        <full_name>bind</full_name>
        <docblock line="62">
          <description>Bind a variable to the renderer</description>
          <long-description></long-description>
          <tag line="62" name="param" description="The name of the variable" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="62" name="param" description="The value of the variable" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="62" name="param" description="Set to false to honor previously set values" type="boolean" variable="$overwrite">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="62" name="return" description="value of the bound value" type="\Backend\Modules\The">
            <type by_reference="false">\Backend\Modules\The</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="71">
          <name>$overwrite</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="86" package="Base\Utilities">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="79">
          <description>Get the value of a variable</description>
          <long-description></long-description>
          <tag line="79" name="param" description="The name of the variable" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="return" description="The value of the variable" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="97" package="Base\Utilities">
        <name>getVariables</name>
        <full_name>getVariables</full_name>
        <docblock line="92">
          <description>Get all of the bound variables</description>
          <long-description></long-description>
          <tag line="92" name="return" description="An array of all the variables bound to the renderer" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="111" package="Base\Utilities">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="102">
          <description>Render the specified template, using the given values</description>
          <long-description></long-description>
          <tag line="102" name="param" description="The template to render" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="The values to use to render the template" type="array" variable="$rValues">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="The rendered template" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="throws" description="When the template file can't be found" type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$rValues</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules" line="137" package="Base\Utilities">
        <name>templateFile</name>
        <full_name>templateFile</full_name>
        <docblock line="130">
          <description>Get the file name for the specified template</description>
          <long-description></long-description>
          <tag line="130" name="param" description="The name of the template" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="The absolute path to the template file to render" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules" line="159" package="Base\Utilities">
        <name>templateFileName</name>
        <full_name>templateFileName</full_name>
        <docblock line="152">
          <description>Convert the template name to a filename</description>
          <long-description></long-description>
          <tag line="152" name="param" description="The name of the template" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="return" description="The filename for the template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="178" package="Base\Utilities">
        <name>parseVariables</name>
        <full_name>parseVariables</full_name>
        <docblock line="167">
          <description>Check the string for variables (#VarName#) and replace them with the
appropriate values</description>
          <long-description>&lt;p&gt;The values currently bound to the view will be used.&lt;/p&gt;</long-description>
          <tag line="167" name="param" description="The string to check for variable names" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="Extra variables to consider" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="167" name="return" description="The string with the variables replaced" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="178">
          <name>$string</name>
          <default></default>
          <type/>
        </argument>
        <argument line="178">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="118">Add Caching</todo>
    </markers>
  </file>
  <file path="modules/Backend/Modules/Storage/NativeSession.php" hash="eb130e957f8ab891dbe7be4a5ee64ca0" package="Modules\SessionManagement">
    <docblock line="2">
      <description>File defining \Backend\Modules\Storage\NativeSession</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="SessionManagement"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules\Storage" line="26" package="Modules\SessionManagement">
      <extends>\Backend\Modules\Storage\Session</extends>
      <name>NativeSession</name>
      <full_name>\Backend\Modules\Storage\NativeSession</full_name>
      <docblock line="16">
        <description>A simple Session class.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Modules"/>
        <tag line="16" name="subpackage" description="SessionManagement"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="34" package="Modules\SessionManagement">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="The session name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="The session identifier." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="60" package="Modules\SessionManagement">
        <name>open</name>
        <full_name>open</full_name>
        <docblock line="50">
          <description>Open the session.</description>
          <long-description></long-description>
          <tag line="50" name="param" description="The Session Name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="50" name="throws" description="If a session already exists." type="\Backend\Modules\Storage\RuntimeException">
            <type by_reference="false">\Backend\Modules\Storage\RuntimeException</type>
          </tag>
          <tag line="50" name="throws" description="If headers have already been sent." type="\Backend\Modules\Storage\RuntimeException">
            <type by_reference="false">\Backend\Modules\Storage\RuntimeException</type>
          </tag>
          <tag line="50" name="throws" description="If the session cannot be started." type="\Backend\Modules\Storage\RuntimeException">
            <type by_reference="false">\Backend\Modules\Storage\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="60">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="84" package="Modules\SessionManagement">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="76">
          <description>Get a session value.</description>
          <long-description></long-description>
          <tag line="76" name="param" description="The name of the value to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="The value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="76" name="throws" description="If the session isn't open." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="101" package="Modules\SessionManagement">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="92">
          <description>Set a session value.</description>
          <long-description></long-description>
          <tag line="92" name="param" description="The name of the value to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="The value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
          <tag line="92" name="throws" description="If the session isn't open." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="101">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="118" package="Modules\SessionManagement">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="109">
          <description>Close the session.</description>
          <long-description>&lt;p&gt;This will destroy the session and it's associated data.&lt;/p&gt;</long-description>
          <tag line="109" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
          <tag line="109" name="throws" description="If the session isn't open." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
          <tag line="109" name="throws" description="If the session couldn't be closed." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="134" package="Modules\SessionManagement">
        <name>isOpen</name>
        <full_name>isOpen</full_name>
        <docblock line="129">
          <description>Check if the session is writable.</description>
          <long-description></long-description>
          <tag line="129" name="return" description="If the session is open." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <markers>
      <todo line="37">Some default name?</todo>
    </markers>
    <parse_markers>
      <notice line="28" code="50013">Parameter $id could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="modules/Backend/Modules/Storage/Session.php" hash="9aa6d1e26b7d5ad3349c78613b1c29ff" package="Modules\SessionManagement">
    <docblock line="2">
      <description>File defining \Backend\Modules\Storage\Session</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="SessionManagement"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="true" namespace="Backend\Modules\Storage" line="27" package="Modules\SessionManagement">
      <extends/>
      <implements>\Backend\Interfaces\SessionInterface</implements>
      <name>Session</name>
      <full_name>\Backend\Modules\Storage\Session</full_name>
      <docblock line="17">
        <description>A simple Session class.</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Modules"/>
        <tag line="17" name="subpackage" description="SessionManagement"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Backend\Modules\Storage" package="Default">
        <name>$valueBag</name>
        <default></default>
        <docblock line="29">
          <description>The value bag for the session.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="\Backend\Modules\Storage\ArrayIterator">
            <type by_reference="false">\Backend\Modules\Storage\ArrayIterator</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="43" package="Modules\SessionManagement">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="36">
          <description>Get a session value.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The name of the value to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="return" description="The value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="55" package="Modules\SessionManagement">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="48">
          <description>Remove a session value.</description>
          <long-description></long-description>
          <tag line="48" name="param" description="The name of the value to remove." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="70" package="Modules\SessionManagement">
        <name>__get</name>
        <full_name>__get</full_name>
        <docblock line="63">
          <description>Magic function to get a Property.</description>
          <long-description></long-description>
          <tag line="63" name="param" description="The name of the property." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="63" name="return" description="The Property if it exists." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="82" package="Modules\SessionManagement">
        <name>__isset</name>
        <full_name>__isset</full_name>
        <docblock line="75">
          <description>Magic function to check if a Property exists.</description>
          <long-description></long-description>
          <tag line="75" name="param" description="The name of the property to check." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="return" description="If the Property exists or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="95" package="Modules\SessionManagement">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="87">
          <description>Set a session value.</description>
          <long-description></long-description>
          <tag line="87" name="param" description="The name of the value to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="The value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="87" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="95">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="109" package="Modules\SessionManagement">
        <name>__set</name>
        <full_name>__set</full_name>
        <docblock line="101">
          <description>Magic function to set a Property.</description>
          <long-description></long-description>
          <tag line="101" name="param" description="The name of the value to set." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="The value to set." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="101" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="121" package="Modules\SessionManagement">
        <name>setValueBag</name>
        <full_name>setValueBag</full_name>
        <docblock line="114">
          <description>Set the value bag for the session.</description>
          <long-description></long-description>
          <tag line="114" name="param" description="The value bag." type="\ArrayIterator" variable="$valueBag">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
          <tag line="114" name="return" description="" type="\Backend\Modules\Session">
            <type by_reference="false">\Backend\Modules\Session</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$valueBag</name>
          <default></default>
          <type>\ArrayIterator</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="132" package="Modules\SessionManagement">
        <name>getValueBag</name>
        <full_name>getValueBag</full_name>
        <docblock line="127">
          <description>Get the value bag for the session.</description>
          <long-description></long-description>
          <tag line="127" name="return" description="The session's value bag." type="\ArrayIterator">
            <type by_reference="false">\ArrayIterator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="142" package="Modules\SessionManagement">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="137">
          <description>Iterator function.</description>
          <long-description>&lt;p&gt;Return the current value.&lt;/p&gt;</long-description>
          <tag line="137" name="return" description="The current iterator value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="152" package="Modules\SessionManagement">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="147">
          <description>Iterator function.</description>
          <long-description>&lt;p&gt;Return the key of the current value.&lt;/p&gt;</long-description>
          <tag line="147" name="return" description="The key of the current iterator value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="162" package="Modules\SessionManagement">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="157">
          <description>Iterator function.</description>
          <long-description>&lt;p&gt;Return the next value and advance the iterator pointer.&lt;/p&gt;</long-description>
          <tag line="157" name="return" description="The next iterator value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="172" package="Modules\SessionManagement">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="167">
          <description>Iterator function.</description>
          <long-description>&lt;p&gt;Check if the current positions is valid.&lt;/p&gt;</long-description>
          <tag line="167" name="return" description="If the current position is valid." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="182" package="Modules\SessionManagement">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="177">
          <description>Iterator function.</description>
          <long-description>&lt;p&gt;Rewind the iterator.&lt;/p&gt;</long-description>
          <tag line="177" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="modules/Backend/Modules/Storage/NativeFlash.php" hash="d4abdf2a0427238023080b0046d1f01d" package="Modules\SessionManagement">
    <docblock line="2">
      <description>File defining \Backend\Modules\Storage\NativeFlash</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="SessionManagement"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules\Storage" line="31" package="Modules\SessionManagement">
      <extends>\Backend\Modules\Storage\NativeSession</extends>
      <name>NativeFlash</name>
      <full_name>\Backend\Modules\Storage\NativeFlash</full_name>
      <docblock line="16">
        <description>A simple Flash Session class.</description>
        <long-description>&lt;p&gt;This wraps the Native Session class. The only difference in behaviour is that
a value will be removed from the session once it is fetched, and all values are
kept in an array stored in the \Backend\Modules\Storage\NativeFlash::BAG_NAME
session value.&lt;/p&gt;</long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Modules"/>
        <tag line="16" name="subpackage" description="SessionManagement"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <constant namespace="Backend\Modules\Storage" line="36" package="Modules\SessionManagement">
        <name>BAG_NAME</name>
        <full_name>BAG_NAME</full_name>
        <value>'flash'</value>
        <docblock line="33">
          <description>Prefix to use for naming flash variables.</description>
          <long-description></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="45" package="Modules\SessionManagement">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="38">
          <description>The class constructor.</description>
          <long-description></long-description>
          <tag line="38" name="param" description="The session name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="The session identifier." type="mixed" variable="$id">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="38" name="throws" description="If the session hasn't been started yet." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Storage" line="67" package="Modules\SessionManagement">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="56">
          <description>Get a flash session value.</description>
          <long-description>&lt;p&gt;The value will be removed after retreiving it, unless you specifically ask
to keep it.&lt;/p&gt;</long-description>
          <tag line="56" name="param" description="The name of the value to get." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="If the value should be removed or not." type="boolean" variable="$keep">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="56" name="return" description="The value." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$keep</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <notice line="38" code="50013">Parameter $id could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="modules/Backend/Modules/Exception.php" hash="bd67bf2e214e6193566d23fe7628a243" package="Modules\Exceptions">
    <docblock line="2">
      <description>File defining \Backend\Modules\Exception.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Exceptions"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules" line="26" package="Modules\Exceptions">
      <extends>\Exception</extends>
      <name>Exception</name>
      <full_name>\Backend\Modules\Exception</full_name>
      <docblock line="16">
        <description>Base Modules Exception.</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Modules"/>
        <tag line="16" name="subpackage" description="Exceptions"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
    </class>
  </file>
  <file path="modules/Backend/Modules/Bindings/ServiceBinding.php" hash="c8c0895ff24888112e69dd16d73d709d" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Modules\Bindings\ServiceBinding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="true" namespace="Backend\Modules\Bindings" line="27" package="Modules\Bindings">
      <extends>\Backend\Modules\Bindings\Binding</extends>
      <name>ServiceBinding</name>
      <full_name>\Backend\Modules\Bindings\ServiceBinding</full_name>
      <docblock line="17">
        <description>Service Connection Binding</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Modules"/>
        <tag line="17" name="subpackage" description="Bindings"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" namespace="Backend\Modules\Bindings" package="Default">
        <name>$url</name>
        <default>null</default>
        <docblock line="29">
          <description>The URL of the service.</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="Backend\Modules\Bindings" package="Default">
        <name>$chandle</name>
        <default>null</default>
        <docblock line="36">
          <description>The CURL handle</description>
          <long-description></long-description>
          <tag line="36" name="todo" description="refactor the curl functions into a seperate transporte class."/>
          <tag line="36" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="52" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="45">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="The settings for the Service Connection" type="array" variable="$settings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="throws" description="When no URL is specified." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$settings</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="96" package="Modules\Bindings">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="88">
          <description>Execute a GET on the service</description>
          <long-description></long-description>
          <tag line="88" name="param" description="The path to GET" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="Extra data to pass in the request" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="96">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="111" package="Modules\Bindings">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="103">
          <description>Execute a POST on the service</description>
          <long-description></long-description>
          <tag line="103" name="param" description="The path to POST to" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="param" description="Extra POST data to add to the request" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="103" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="111">
          <name>$data</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="126" package="Modules\Bindings">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="118">
          <description>Execute the request</description>
          <long-description></long-description>
          <tag line="118" name="param" description="The path to execute the request on." type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="throws" description="When a curl error occurs." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
          <tag line="118" name="return" description="" type="mixed|boolean">
            <type by_reference="false">mixed</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$path</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="166" package="Modules\Bindings">
        <name>parse</name>
        <full_name>parse</full_name>
        <docblock line="157">
          <description>Parse the response from the service.</description>
          <long-description></long-description>
          <tag line="157" name="param" description="The header part of the response." type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="param" description="The body part of the response." type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="throws" description="When invalid JSON is returned." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
          <tag line="157" name="return" description="The decoded JSON object, or the body as is." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$header</name>
          <default></default>
          <type/>
        </argument>
        <argument line="166">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="185" package="Modules\Bindings">
        <name>setUrl</name>
        <full_name>setUrl</full_name>
        <docblock line="178">
          <description>Set the URL for the service.</description>
          <long-description></long-description>
          <tag line="178" name="param" description="The URL for the service." type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="" type="\Backend\Base\Bindings\ServiceBinding">
            <type by_reference="false">\Backend\Base\Bindings\ServiceBinding</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="65">Follow http://ademar.name/blog/2006/04/curl-ssl-certificate-problem-v.html to fix this</todo>
    </markers>
  </file>
  <file path="modules/Backend/Modules/Bindings/GdataBinding.php" hash="549f4ba31238aebb7cf7953d2204a9c1" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining GdataBinding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <include line="16" type="Require Once" package="Default">
      <name>Zend/Loader.php</name>
    </include>
    <class final="false" abstract="false" namespace="Backend\Base\Bindings" line="40" package="Modules\Bindings">
      <extends>\Backend\Base\Bindings\Binding</extends>
      <name>GdataBinding</name>
      <full_name>\Backend\Base\Bindings\GdataBinding</full_name>
      <docblock line="21">
        <description>Binding for GData connections.</description>
        <long-description>&lt;p&gt;This class relies on the Zend library, so you need to ensure that it's on the
scripts include path. You can install Zend through PEAR:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pear channel-discover zend.googlecode.com/svn
pear install --alldeps zend/zend
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There's currently a known compatability issue.
See http://framework.zend.com/issues/browse/ZF-11959 for more detail.&lt;/p&gt;</long-description>
        <tag line="21" name="category" description="Backend"/>
        <tag line="21" name="package" description="Modules"/>
        <tag line="21" name="subpackage" description="Bindings"/>
        <tag line="21" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="21" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="21" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" namespace="Backend\Base\Bindings" package="Default">
        <name>$key</name>
        <default></default>
        <docblock line="42">
          <description>API Key used to access the GApps API.</description>
          <long-description>&lt;p&gt;Unused for now.&lt;/p&gt;</long-description>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="Backend\Base\Bindings" package="Default">
        <name>$secret</name>
        <default></default>
        <docblock line="49">
          <description>API Secret to access the GApps API.</description>
          <long-description>&lt;p&gt;Unused for now.&lt;/p&gt;</long-description>
          <tag line="49" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" namespace="Backend\Base\Bindings" package="Default">
        <name>$client</name>
        <default></default>
        <docblock line="56">
          <description>The client used to access the GApps API.</description>
          <long-description></long-description>
          <tag line="56" name="Zend_Gdata_Gapps" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="73" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="63">
          <description>The constructor for the object.</description>
          <long-description>&lt;p&gt;The settings array must contain the name of the entity to bind to, the name
of the connection to use, as well as the username and password for the admin
user that will be used to access the API. You should also provide a domain if
it's different that that of the admin user's password.&lt;/p&gt;</long-description>
          <tag line="63" name="param" description="The settings for the Service Connection" type="array" variable="$settings">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$settings</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="103" package="Modules\Bindings">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="93">
          <description>Find multiple instances of the resource.</description>
          <long-description>&lt;p&gt;Don't specify any criteria to retrieve a full list of instances.&lt;/p&gt;</long-description>
          <tag line="93" name="param" description="An array of conditions on which to filter the list." type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="93" name="param" description="An array of options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="93" name="return" description="An array of representations of the resource." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="103">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="122" package="Modules\Bindings">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="114">
          <description>Create an instance on the source, and return the instance.</description>
          <long-description></long-description>
          <tag line="114" name="param" description="The data to create a new resource." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="114" name="return" description="The created model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="114" name="throws" description="When the resource can't be created." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="148" package="Modules\Bindings">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="138">
          <description>Read and return the single, specified instance of the resource.</description>
          <long-description></long-description>
          <tag line="138" name="param" description="The unique identifier for the instance, or an&#10;array containing criteria on which to search for the resource." type="mixed" variable="$identifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="138" name="param" description="Return the UserEntry Object." type="boolean" variable="$returnObject">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="138" name="return" description="The identified model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="138" name="throws" description="When the resource can't be found." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$returnObject</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="172" package="Modules\Bindings">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="160">
          <description>Refresh the specified instance on the source.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to update, and receives data from
the source.&lt;/p&gt;</long-description>
          <tag line="160" name="param" description="&amp;$model The model to refresh.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="160" name="return" description="If the refresh was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="160" name="throws" description="When the resource can't be refreshed." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="188" package="Modules\Bindings">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="176">
          <description>Update the specified instance of the resource.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to refresh, and sends data to
the source.&lt;/p&gt;</long-description>
          <tag line="176" name="param" description="&amp;$model The model to update.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="176" name="return" description="If the update was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="176" name="throws" description="When the resource can't be updated." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Base\Bindings" line="208" package="Modules\Bindings">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="200">
          <description>Delete the specified instance of the resource</description>
          <long-description></long-description>
          <tag line="200" name="param" description="&amp;$model The model to delete" type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="200" name="return" description="If the deletion was succesful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="200" name="throws" description="When the resource can't be deleted." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Bindings" line="228" package="Modules\Bindings">
        <name>mapObjectToModel</name>
        <full_name>mapObjectToModel</full_name>
        <docblock line="221">
          <description>Map Zend_Gdata_Gapps_UserEntry objects to Backend Models</description>
          <long-description></long-description>
          <tag line="221" name="param" description="The object to map." type="\Backend\Base\Bindings\Zend_Gdata_Gapps_UserEntry" variable="$object">
            <type by_reference="false">\Backend\Base\Bindings\Zend_Gdata_Gapps_UserEntry</type>
          </tag>
          <tag line="221" name="return" description="The model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$object</name>
          <default></default>
          <type>\Zend_Gdata_Gapps_UserEntry</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Base\Bindings" line="262" package="Modules\Bindings">
        <name>mapModelToObject</name>
        <full_name>mapModelToObject</full_name>
        <docblock line="245">
          <description>Map a Backend Model to a Zend_Gdata_Gapps_User Entry.</description>
          <long-description>&lt;p&gt;The model should provide the following functions for this function to
work correctly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;getUsername()&lt;/li&gt;
&lt;li&gt;getPassword()&lt;/li&gt;
&lt;li&gt;getGivenName()&lt;/li&gt;
&lt;li&gt;getFamilyName()&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="245" name="param" description="The model to map." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="245" name="param" description="The UserEntry object to&#10;populate." type="\Zend_Gdata_Gapps_UserEntry" variable="$user">
            <type by_reference="false">\Zend_Gdata_Gapps_UserEntry</type>
          </tag>
          <tag line="245" name="return" description="The object" type="\Backend\Base\Bindings\Zend_Gdata_Gapps_UserEntry">
            <type by_reference="false">\Backend\Base\Bindings\Zend_Gdata_Gapps_UserEntry</type>
          </tag>
        </docblock>
        <argument line="262">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
        <argument line="263">
          <name>$user</name>
          <default>null</default>
          <type>\Zend_Gdata_Gapps_UserEntry</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="221" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $object in mapObjectToModel()</error>
    </parse_markers>
  </file>
  <file path="modules/Backend/Modules/Bindings/Binding.php" hash="6cbdf7e0a443987b8965dc725a249f8f" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Modules\Bindings\Binding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="true" namespace="Backend\Modules\Bindings" line="36" package="Modules\Bindings">
      <extends/>
      <implements>\Backend\Interfaces\BindingInterface</implements>
      <name>Binding</name>
      <full_name>\Backend\Modules\Bindings\Binding</full_name>
      <docblock line="18">
        <description>Abstract class for Data Bindings</description>
        <long-description>&lt;p&gt;Bindings act as a transport layer which can be used to perform CRUD actions
on a resource. It's typically used by Models to maintain their state on an
outside resource.&lt;/p&gt;

&lt;p&gt;They also act as Table Gateways
(http://www.martinfowler.com/eaaCatalog/tableDataGateway.html) to keep all
data source related functionality out of Models.&lt;/p&gt;</long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Modules"/>
        <tag line="18" name="subpackage" description="Bindings"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" namespace="Backend\Modules\Bindings" package="Default">
        <name>$className</name>
        <default></default>
        <docblock line="38">
          <description>The name of the class this binding operates on.</description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="52" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="45">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="45" name="param" description="The connection settings for the Binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="throws" description="" type="\Backend\Core\Exceptions\ConfigException">
            <type by_reference="false">\Backend\Core\Exceptions\ConfigException</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="modules/Backend/Modules/Bindings/DatabaseBinding.php" hash="a8a186eb1580ee295f1d95ef1a1d27f4" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Modules\Bindings\DatabaseBinding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="true" namespace="Backend\Modules\Bindings" line="26" package="Modules\Bindings">
      <extends>\Backend\Modules\Bindings\Binding</extends>
      <name>DatabaseBinding</name>
      <full_name>\Backend\Modules\Bindings\DatabaseBinding</full_name>
      <docblock line="16">
        <description>Database Connection Binding</description>
        <long-description></long-description>
        <tag line="16" name="category" description="Backend"/>
        <tag line="16" name="package" description="Modules"/>
        <tag line="16" name="subpackage" description="Bindings"/>
        <tag line="16" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="16" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="16" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="33" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="28" name="param" description="The connection settings for the Binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="Backend\Modules\Bindings" line="46" package="Modules\Bindings">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="39">
          <description>Initialize the connection</description>
          <long-description></long-description>
          <tag line="39" name="param" description="The connection information for the binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="return" description="The current object" type="Object">
            <type by_reference="false">Object</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="modules/Backend/Modules/Bindings/PDOBinding.php" hash="db2c01bc5d3721cf1bbe490c4a313234" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Modules\Bindings\PDOBinding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules\Bindings" line="29" package="Modules\Bindings">
      <extends>\Backend\Modules\Bindings\DatabaseBinding</extends>
      <name>PDOBinding</name>
      <full_name>\Backend\Modules\Bindings\PDOBinding</full_name>
      <docblock line="17">
        <description>PDO Connection Binding</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Modules"/>
        <tag line="17" name="subpackage" description="Bindings"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
        <tag line="17" name="todo" description="This is a rudimentary implementation of the PDOBinding. It can be&#10;improved a lot."/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" namespace="Backend\Modules\Bindings" package="Default">
        <name>$connection</name>
        <default></default>
        <docblock line="31">
          <description>The PDO connection for this binding</description>
          <long-description></long-description>
          <tag line="31" name="var" description="" type="\Backend\Modules\Bindings\PDO">
            <type by_reference="false">\Backend\Modules\Bindings\PDO</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="Backend\Modules\Bindings" package="Default">
        <name>$table</name>
        <default></default>
        <docblock line="38">
          <description>The name of the table this binding operates on.</description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="52" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="45">
          <description>The constructor for the object.</description>
          <long-description>&lt;p&gt;The settings array should contain at least the name of the table to use.&lt;/p&gt;</long-description>
          <tag line="45" name="param" description="The connection settings for the Binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\Bindings" line="70" package="Modules\Bindings">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="63">
          <description>Initialize the connection</description>
          <long-description></long-description>
          <tag line="63" name="param" description="The connection information for the binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="63" name="return" description="The current object" type="Object">
            <type by_reference="false">Object</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\Bindings" line="116" package="Modules\Bindings">
        <name>executeStatement</name>
        <full_name>executeStatement</full_name>
        <docblock line="107">
          <description>Execute a statement on the current connection</description>
          <long-description></long-description>
          <tag line="107" name="param" description="The statement to execute" type="\Backend\Modules\Bindings\PDOStatement" variable="$statement">
            <type by_reference="false">\Backend\Modules\Bindings\PDOStatement</type>
          </tag>
          <tag line="107" name="param" description="The parameters to use when executing the&#10;statement" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="return" description="The statement after executing it" type="\Backend\Modules\Bindings\PDOStatement">
            <type by_reference="false">\Backend\Modules\Bindings\PDOStatement</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$statement</name>
          <default></default>
          <type/>
        </argument>
        <argument line="116">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="137" package="Modules\Bindings">
        <name>executeQuery</name>
        <full_name>executeQuery</full_name>
        <docblock line="129">
          <description>Execute a query on the current connection</description>
          <long-description></long-description>
          <tag line="129" name="param" description="The query to execute" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="The parameters to use when executing the query" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="129" name="return" description="The statement of the query that was executed" type="\Backend\Modules\Bindings\PDOStatement">
            <type by_reference="false">\Backend\Modules\Bindings\PDOStatement</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$query</name>
          <default></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="159" package="Modules\Bindings">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="149">
          <description>Find multiple instances of the resource.</description>
          <long-description>&lt;p&gt;Don't specify any criteria to retrieve a full list of instances.&lt;/p&gt;</long-description>
          <tag line="149" name="param" description="An array of conditions on which to filter the list." type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="149" name="param" description="An array of options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="149" name="return" description="An array of representations of the resource." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="159">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="181" package="Modules\Bindings">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="173">
          <description>Create an instance on the source, and return the instance.</description>
          <long-description></long-description>
          <tag line="173" name="param" description="The data to create a new resource." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="173" name="return" description="The created model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="173" name="throws" description="When the resource can't be created." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="209" package="Modules\Bindings">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="200">
          <description>Read and return the single, specified instance of the resource.</description>
          <long-description></long-description>
          <tag line="200" name="param" description="The unique identifier for the instance, or an&#10;array containing criteria on which to search for the resource." type="mixed" variable="$identifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="200" name="return" description="The identified model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="200" name="throws" description="When the resource can't be found." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="234" package="Modules\Bindings">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="222">
          <description>Refresh the specified instance on the source.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to update, and receives data from
the source.&lt;/p&gt;</long-description>
          <tag line="222" name="param" description="&amp;$model The model to refresh.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="222" name="return" description="If the refresh was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="222" name="throws" description="When the resource can't be refreshed." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="251" package="Modules\Bindings">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="239">
          <description>Update the specified instance of the resource.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to refresh, and sends data to
the source.&lt;/p&gt;</long-description>
          <tag line="239" name="param" description="&amp;$model The model to update.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="239" name="return" description="If the update was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="239" name="throws" description="When the resource can't be updated." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="278" package="Modules\Bindings">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="270">
          <description>Delete the specified instance of the resource</description>
          <long-description></long-description>
          <tag line="270" name="param" description="&amp;$model The model to delete" type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="270" name="return" description="If the deletion was succesful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="270" name="throws" description="When the resource can't be deleted." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="295" package="Modules\Bindings">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="287">
          <description>Magic function to pass on PDO function calls to the binding.</description>
          <long-description></long-description>
          <tag line="287" name="param" description="The name of the method." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="param" description="An array of parameters to pass to the method." type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="287" name="return" description="The result of the method call." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="92">It will be wise to extend the PDOBinding class into driver</todo>
    </markers>
  </file>
  <file path="modules/Backend/Modules/Bindings/DoctrineBinding.php" hash="6b04a45f8f1f891043fd2bb13d8d6575" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Modules\Bindings\DoctrineBinding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules\Bindings" line="33" package="Modules\Bindings">
      <extends>\Backend\Modules\Bindings\DatabaseBinding</extends>
      <name>DoctrineBinding</name>
      <full_name>\Backend\Modules\Bindings\DoctrineBinding</full_name>
      <docblock line="18">
        <description>Binding for Doctrine connections.</description>
        <long-description>&lt;p&gt;This class assumes that you installed Doctrine using PEAR.
    pear channel-discover pear.doctrine-project.org
    pear channel-discover pear.symfony.com
    pear install --alldeps doctrine/DoctrineORM&lt;/p&gt;</long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Modules"/>
        <tag line="18" name="subpackage" description="Bindings"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="40" namespace="Backend\Modules\Bindings" package="Default">
        <name>$em</name>
        <default></default>
        <docblock line="35">
          <description>The Doctrine EntityManager.</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="\Backend\Modules\Bindings\Doctrine\ORM\EntityManager">
            <type by_reference="false">\Backend\Modules\Bindings\Doctrine\ORM\EntityManager</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="Backend\Modules\Bindings" package="Default">
        <name>$entityName</name>
        <default></default>
        <docblock line="42">
          <description>The Doctrine entity name.</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="56" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>The constructor for the object.</description>
          <long-description>&lt;p&gt;The settings array should contain at least the class of the entity to use.&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="The connection settings for the Binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\Bindings" line="69" package="Modules\Bindings">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="62">
          <description>Initialize the connection</description>
          <long-description></long-description>
          <tag line="62" name="param" description="The connection information for the binding" type="array" variable="$connection">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="return" description="The current object" type="Object">
            <type by_reference="false">Object</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$connection</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="115" package="Modules\Bindings">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="105">
          <description>Find multiple instances of the resource.</description>
          <long-description>&lt;p&gt;Don't specify any criteria to retrieve a full list of instances.&lt;/p&gt;</long-description>
          <tag line="105" name="param" description="An array of conditions on which to filter the list." type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="105" name="param" description="An array of options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="105" name="return" description="An array of representations of the resource." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="115">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="135" package="Modules\Bindings">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="127">
          <description>Create an instance on the source, and return the instance.</description>
          <long-description></long-description>
          <tag line="127" name="param" description="The data to create a new resource." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="return" description="The created model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="127" name="throws" description="When the resource can't be created." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="153" package="Modules\Bindings">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="144">
          <description>Read and return the single, specified instance of the resource.</description>
          <long-description></long-description>
          <tag line="144" name="param" description="The unique identifier for the instance, or an&#10;array containing criteria on which to search for the resource." type="mixed" variable="$identifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="144" name="return" description="The identified model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="144" name="throws" description="When the resource can't be found." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="173" package="Modules\Bindings">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="161">
          <description>Refresh the specified instance on the source.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to update, and receives data from
the source.&lt;/p&gt;</long-description>
          <tag line="161" name="param" description="&amp;$model The model to refresh.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="161" name="return" description="If the refresh was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="161" name="throws" description="When the resource can't be refreshed." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="190" package="Modules\Bindings">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="178">
          <description>Update the specified instance of the resource.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to refresh, and sends data to
the source.&lt;/p&gt;</long-description>
          <tag line="178" name="param" description="&amp;$model The model to update.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="178" name="return" description="If the update was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="178" name="throws" description="When the resource can't be updated." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="205" package="Modules\Bindings">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="197">
          <description>Delete the specified instance of the resource</description>
          <long-description></long-description>
          <tag line="197" name="param" description="&amp;$model The model to delete" type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="197" name="return" description="If the deletion was succesful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="197" name="throws" description="When the resource can't be deleted." type="\RuntimeException">
            <type by_reference="false">\RuntimeException</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="218" package="Modules\Bindings">
        <name>getRepository</name>
        <full_name>getRepository</full_name>
        <docblock line="211">
          <description>Get the Entity Repository.</description>
          <long-description>&lt;p&gt;This is a wrapper for the Doctrine\ORM\EntityManager::getRepository method.&lt;/p&gt;</long-description>
          <tag line="211" name="return" description="" type="\Backend\Modules\Bindings\Doctrine\ORM\EntityRepository">
            <type by_reference="false">\Backend\Modules\Bindings\Doctrine\ORM\EntityRepository</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="231" package="Modules\Bindings">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="223">
          <description>Magic function to pass on Doctrine function calls to the binding.</description>
          <long-description></long-description>
          <tag line="223" name="param" description="The name of the method." type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="param" description="An array of parameters to pass to the method." type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="223" name="return" description="The result of the method call." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="231">
          <name>$parameters</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="Backend\Modules\Bindings" line="249" package="Modules\Bindings">
        <name>getEntityManager</name>
        <full_name>getEntityManager</full_name>
        <docblock line="244">
          <description>Get the Doctrine Entity Manager</description>
          <long-description></long-description>
          <tag line="244" name="return" description="" type="\Doctrine\ORM\EntityManager">
            <type by_reference="false">\Doctrine\ORM\EntityManager</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="modules/Backend/Modules/Bindings/RestBinding.php" hash="bf6e694ced837844f5acab499ae90a36" package="Modules\Bindings">
    <docblock line="2">
      <description>File defining \Backend\Modules\Bindings\RestBinding</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="Bindings"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules\Bindings" line="27" package="Modules\Bindings">
      <extends>\Backend\Modules\Bindings\ServiceBinding</extends>
      <name>RestBinding</name>
      <full_name>\Backend\Modules\Bindings\RestBinding</full_name>
      <docblock line="17">
        <description>Rest Connection Binding to get information from REST services</description>
        <long-description></long-description>
        <tag line="17" name="category" description="Backend"/>
        <tag line="17" name="package" description="Modules"/>
        <tag line="17" name="subpackage" description="Bindings"/>
        <tag line="17" name="author" description="J Jurgens du Toit &lt;jrgns@jrgns.net&gt;"/>
        <tag line="17" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="17" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="34" package="Modules\Bindings">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>The constructor for the object.</description>
          <long-description></long-description>
          <tag line="29" name="param" description="The settings for the REST Connection" type="array" variable="$settings">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$settings</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="52" package="Modules\Bindings">
        <name>find</name>
        <full_name>find</full_name>
        <docblock line="42">
          <description>Find multiple instances of the resource.</description>
          <long-description>&lt;p&gt;Don't specify any criteria to retrieve a full list of instances.&lt;/p&gt;</long-description>
          <tag line="42" name="param" description="An array of conditions on which to filter the list." type="array" variable="$conditions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="An array of options." type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="return" description="An array of representations of the resource." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$conditions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="52">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\Bindings" line="68" package="Modules\Bindings">
        <name>mapResult</name>
        <full_name>mapResult</full_name>
        <docblock line="61">
          <description>Map the returned result to a new model of {@see $this-&gt;className}</description>
          <long-description></long-description>
          <tag line="61" name="param" description="The element to map." type="mixed" variable="$elm">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="61" name="return" description="" type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$elm</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="87" package="Modules\Bindings">
        <name>create</name>
        <full_name>create</full_name>
        <docblock line="79">
          <description>Create an instance on the source, and return the instance.</description>
          <long-description></long-description>
          <tag line="79" name="param" description="The data to create a new resource." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="return" description="The created model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="79" name="throws" description="When the resource can't be created." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="100" package="Modules\Bindings">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="91">
          <description>Read and return the single, specified instance of the resource.</description>
          <long-description></long-description>
          <tag line="91" name="param" description="The unique identifier for the instance, or an&#10;array containing criteria on which to search for the resource." type="mixed" variable="$identifier">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="91" name="return" description="The identified model." type="\Backend\Interfaces\ModelInterface">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="91" name="throws" description="When the resource can't be found." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="124" package="Modules\Bindings">
        <name>refresh</name>
        <full_name>refresh</full_name>
        <docblock line="112">
          <description>Refresh the specified instance on the source.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to update, and receives data from
the source.&lt;/p&gt;</long-description>
          <tag line="112" name="param" description="&amp;$model The model to refresh.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="112" name="return" description="If the refresh was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="112" name="throws" description="When the resource can't be refreshed." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="140" package="Modules\Bindings">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="128">
          <description>Update the specified instance of the resource.</description>
          <long-description>&lt;p&gt;This function is the logical counterpart to refresh, and sends data to
the source.&lt;/p&gt;</long-description>
          <tag line="128" name="param" description="&amp;$model The model to update.&#10;Passed by reference." type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="128" name="return" description="If the update was successful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="128" name="throws" description="When the resource can't be updated." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\Bindings" line="152" package="Modules\Bindings">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="144">
          <description>Delete the specified instance of the resource</description>
          <long-description></long-description>
          <tag line="144" name="param" description="&amp;$model The model to delete" type="\Backend\Interfaces\ModelInterface" variable="$model">
            <type by_reference="false">\Backend\Interfaces\ModelInterface</type>
          </tag>
          <tag line="144" name="return" description="If the deletion was succesful or not." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="144" name="throws" description="When the resource can't be deleted." type="\Backend\Modules\Exception">
            <type by_reference="false">\Backend\Modules\Exception</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$model</name>
          <default></default>
          <type>\Backend\Interfaces\ModelInterface</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="modules/Backend/Modules/File/Upload.php" hash="827bc6466b855a84d4895e86c32edcac" package="Default">
    <class final="false" abstract="false" namespace="Backend\Modules\File" line="3" package="Default">
      <extends/>
      <name>Upload</name>
      <full_name>\Backend\Modules\File\Upload</full_name>
      <property final="false" static="false" visibility="protected" line="5" namespace="Backend\Modules\File" package="Default">
        <name>$allowedTypes</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="7" namespace="Backend\Modules\File" package="Default">
        <name>$overwriteExisting</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="protected" line="9" namespace="Backend\Modules\File" package="Default">
        <name>$tmpFile</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="10" namespace="Backend\Modules\File" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="11" namespace="Backend\Modules\File" package="Default">
        <name>$type</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="12" namespace="Backend\Modules\File" package="Default">
        <name>$size</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\File" line="14" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="14">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
        <argument line="14">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="14">
          <name>$size</name>
          <default></default>
          <type/>
        </argument>
        <argument line="14">
          <name>$tmpFile</name>
          <default></default>
          <type/>
        </argument>
        <argument line="14">
          <name>$error</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\File" line="29" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\File" line="54" package="Default">
        <name>checkExtension</name>
        <full_name>checkExtension</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\File" line="72" package="Default">
        <name>uploadFile</name>
        <full_name>uploadFile</full_name>
        <argument line="72">
          <name>$location</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\File" line="84" package="Default">
        <name>__get</name>
        <full_name>__get</full_name>
        <argument line="84">
          <name>$propertyName</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="42">Check file sizes</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file modules/Backend/Modules/File/Upload.php</error>
      <error line="3" code="50000">No DocBlock was found for \Backend\Modules\File\Upload</error>
      <error line="5" code="50018">No DocBlock was found for property $allowedTypes</error>
      <error line="7" code="50018">No DocBlock was found for property $overwriteExisting</error>
      <error line="9" code="50018">No DocBlock was found for property $tmpFile</error>
      <error line="10" code="50018">No DocBlock was found for property $name</error>
      <error line="11" code="50018">No DocBlock was found for property $type</error>
      <error line="12" code="50018">No DocBlock was found for property $size</error>
      <error line="14" code="50010">No DocBlock was found for method __construct()</error>
      <error line="29" code="50010">No DocBlock was found for method validate()</error>
      <error line="54" code="50010">No DocBlock was found for method checkExtension()</error>
      <error line="72" code="50010">No DocBlock was found for method uploadFile()</error>
      <error line="84" code="50010">No DocBlock was found for method __get()</error>
    </parse_markers>
  </file>
  <file path="modules/Backend/Modules/File/Image.php" hash="75d2ea2632dedb4931a9b786db14b851" package="Default">
    <class final="false" abstract="false" namespace="Backend\Modules\File" line="3" package="Default">
      <extends/>
      <name>Image</name>
      <full_name>\Backend\Modules\File\Image</full_name>
      <property final="false" static="false" visibility="protected" line="5" namespace="Backend\Modules\File" package="Default">
        <name>$path</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="6" namespace="Backend\Modules\File" package="Default">
        <name>$name</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="7" namespace="Backend\Modules\File" package="Default">
        <name>$type</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="8" namespace="Backend\Modules\File" package="Default">
        <name>$width</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="9" namespace="Backend\Modules\File" package="Default">
        <name>$height</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="protected" line="10" namespace="Backend\Modules\File" package="Default">
        <name>$size</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\File" line="12" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="12">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\File" line="20" package="Default">
        <name>validate</name>
        <full_name>validate</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\File" line="50" package="Default">
        <name>scale</name>
        <full_name>scale</full_name>
        <argument line="50">
          <name>$location</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="33">Check image resolution</todo>
      <todo line="78">Make this configurable</todo>
      <todo line="92">Make this configurable</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file modules/Backend/Modules/File/Image.php</error>
      <error line="3" code="50000">No DocBlock was found for \Backend\Modules\File\Image</error>
      <error line="5" code="50018">No DocBlock was found for property $path</error>
      <error line="6" code="50018">No DocBlock was found for property $name</error>
      <error line="7" code="50018">No DocBlock was found for property $type</error>
      <error line="8" code="50018">No DocBlock was found for property $width</error>
      <error line="9" code="50018">No DocBlock was found for property $height</error>
      <error line="10" code="50018">No DocBlock was found for property $size</error>
      <error line="12" code="50010">No DocBlock was found for method __construct()</error>
      <error line="20" code="50010">No DocBlock was found for method validate()</error>
      <error line="50" code="50010">No DocBlock was found for method scale()</error>
    </parse_markers>
  </file>
  <file path="modules/Backend/Modules/EventDispatcher/EventDispatcher.php" hash="d9587d04604694ae0474b4c3cc28bb2e" package="Modules\EventDispatcher">
    <docblock line="2">
      <description>File defining Backend\Modules\EventDispatcher\EventDispatcher.</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Modules"/>
      <tag line="2" name="subpackage" description="EventDispatcher"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules\EventDispatcher" line="34" package="Default">
      <extends>\Symfony\Component\EventDispatcher\EventDispatcher</extends>
      <name>EventDispatcher</name>
      <full_name>\Backend\Modules\EventDispatcher\EventDispatcher</full_name>
      <property final="false" static="false" visibility="private" line="41" namespace="Backend\Modules\EventDispatcher" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="36">
          <description>The DI Container used to get and add registered listeners.</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="\Backend\Modules\EventDispatcher\Backend\Interfaces\DependencyInjectionContainerInterface">
            <type by_reference="false">\Backend\Modules\EventDispatcher\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\EventDispatcher" line="49" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="43">
          <description>DI Container</description>
          <long-description></long-description>
          <tag line="43" name="param" description="The DI Container for the Dispatcher." type="\Backend\Modules\EventDispatcher\Backend\Interfaces\DependencyInjectionContainerInterface" variable="$container">
            <type by_reference="false">\Backend\Modules\EventDispatcher\Backend\Interfaces\DependencyInjectionContainerInterface</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$container</name>
          <default></default>
          <type>\Backend\Interfaces\DependencyInjectionContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\EventDispatcher" line="57" package="Default">
        <name>registerListeners</name>
        <full_name>registerListeners</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules\EventDispatcher" line="85" package="Default">
        <name>getMethod</name>
        <full_name>getMethod</full_name>
        <docblock line="78">
          <description>Transform the event name into a method name.</description>
          <long-description></long-description>
          <tag line="78" name="param" description="The event name." type="string" variable="$event">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="The deduced method name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$event</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules\EventDispatcher" line="94" package="Default">
        <name>dispatch</name>
        <full_name>dispatch</full_name>
        <argument line="94">
          <name>$eventName</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$event</name>
          <default>null</default>
          <type>\Symfony\Component\EventDispatcher\Event</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="69">Lazy Loading of service ?</todo>
    </markers>
    <parse_markers>
      <error line="34" code="50000">No DocBlock was found for \Backend\Modules\EventDispatcher\EventDispatcher</error>
      <error line="43" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $container in __construct()</error>
      <error line="57" code="50010">No DocBlock was found for method registerListeners()</error>
      <error line="94" code="50010">No DocBlock was found for method dispatch()</error>
    </parse_markers>
  </file>
  <file path="modules/Backend/Modules/TwigRender.php" hash="73b0fa699ad46c5c7060ab0be8af3535" package="Base\Utilities">
    <docblock line="2">
      <description>File defining \Backend\Modules\TwigRender</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Backend"/>
      <tag line="2" name="package" description="Base"/>
      <tag line="2" name="subpackage" description="Utilities"/>
      <tag line="2" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
      <tag line="2" name="copyright" description="2011 - 2012 Jade IT (cc)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
      <tag line="2" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
    </docblock>
    <class final="false" abstract="false" namespace="Backend\Modules" line="28" package="Base\Utilities">
      <extends>\Backend\Modules\Render</extends>
      <implements>\Backend\Interfaces\RenderInterface</implements>
      <name>TwigRender</name>
      <full_name>\Backend\Modules\TwigRender</full_name>
      <docblock line="18">
        <description>Render Twig templates.</description>
        <long-description></long-description>
        <tag line="18" name="category" description="Backend"/>
        <tag line="18" name="package" description="Base"/>
        <tag line="18" name="subpackage" description="Utilities"/>
        <tag line="18" name="author" description="J Jurgens du Toit &lt;jrgns@backend-php.net&gt;"/>
        <tag line="18" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT License"/>
        <tag line="18" name="link" description="http://backend-php.net" link="http://backend-php.net"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" namespace="Backend\Modules" package="Default">
        <name>$twig</name>
        <default>null</default>
        <docblock line="32">
          <description></description>
          <long-description></long-description>
          <tag line="32" name="var" description="The twig used to render templates" type="\Backend\Modules\Twig">
            <type by_reference="false">\Backend\Modules\Twig</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="42" package="Base\Utilities">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>The constructor for the object</description>
          <long-description>&lt;p&gt;The template locations for the Renderer is set in this method&lt;/p&gt;</long-description>
        </docblock>
        <argument line="42">
          <name>$options</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="Backend\Modules" line="62" package="Base\Utilities">
        <name>file</name>
        <full_name>file</full_name>
        <docblock line="54">
          <description>Render the specified template, using the given values</description>
          <long-description></long-description>
          <tag line="54" name="param" description="The template to render" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="The values to use to render the template" type="array" variable="$values">
            <type by_reference="false">array</type>
          </tag>
          <tag line="54" name="return" description="The rendered template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$values</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="Backend\Modules" line="80" package="Base\Utilities">
        <name>templateFileName</name>
        <full_name>templateFileName</full_name>
        <docblock line="73">
          <description>Get the file name for the specified template</description>
          <long-description></long-description>
          <tag line="73" name="param" description="The name of the template" type="string" variable="$template">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="return" description="The template file to render" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$template</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="50015">Argument $options is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <package name="Base" full_name="Base">
    <package name="Controllers" full_name="Base\Controllers"/>
    <package name="Formats" full_name="Base\Formats"/>
    <package name="Interfaces" full_name="Base\Interfaces"/>
    <package name="Listeners" full_name="Base\Listeners"/>
    <package name="Utilities" full_name="Base\Utilities"/>
  </package>
  <package name="Base/Utilities" full_name="Base/Utilities"/>
  <package name="BaseTests" full_name="BaseTests"/>
  <package name="Core" full_name="Core">
    <package name="Events" full_name="Core\Events"/>
    <package name="Exceptions" full_name="Core\Exceptions"/>
    <package name="Listeners" full_name="Core\Listeners"/>
    <package name="Utilities" full_name="Core\Utilities"/>
  </package>
  <package name="CoreTests" full_name="CoreTests">
    <package name="Auxiliary" full_name="CoreTests\Auxiliary"/>
    <package name="Utilities" full_name="CoreTests\Utilities"/>
  </package>
  <package name="Default" full_name="Default"/>
  <package name="Interfaces" full_name="Interfaces"/>
  <package name="InterfacesTests" full_name="InterfacesTests"/>
  <package name="Modules" full_name="Modules">
    <package name="Bindings" full_name="Modules\Bindings"/>
    <package name="EventDispatcher" full_name="Modules\EventDispatcher"/>
    <package name="Exceptions" full_name="Modules\Exceptions"/>
    <package name="SessionManagement" full_name="Modules\SessionManagement"/>
  </package>
  <package name="Utilities" full_name="Utilities"/>
  <namespace name="Backend" full_name="Backend">
    <namespace name="Base" full_name="Backend\Base">
      <namespace name="Bindings" full_name="Backend\Base\Bindings"/>
      <namespace name="Controllers" full_name="Backend\Base\Controllers"/>
      <namespace name="Formats" full_name="Backend\Base\Formats"/>
      <namespace name="Listener" full_name="Backend\Base\Listener"/>
      <namespace name="Models" full_name="Backend\Base\Models"/>
      <namespace name="Tests" full_name="Backend\Base\Tests">
        <namespace name="Controllers" full_name="Backend\Base\Tests\Controllers"/>
        <namespace name="Formats" full_name="Backend\Base\Tests\Formats"/>
        <namespace name="Listener" full_name="Backend\Base\Tests\Listener"/>
        <namespace name="Utilities" full_name="Backend\Base\Tests\Utilities"/>
      </namespace>
      <namespace name="Utilities" full_name="Backend\Base\Utilities"/>
    </namespace>
    <namespace name="Core" full_name="Backend\Core">
      <namespace name="Event" full_name="Backend\Core\Event"/>
      <namespace name="Exceptions" full_name="Backend\Core\Exceptions"/>
      <namespace name="Listener" full_name="Backend\Core\Listener"/>
      <namespace name="Tests" full_name="Backend\Core\Tests">
        <namespace name="Listener" full_name="Backend\Core\Tests\Listener"/>
        <namespace name="Utilities" full_name="Backend\Core\Tests\Utilities"/>
      </namespace>
      <namespace name="Utilities" full_name="Backend\Core\Utilities">
        <namespace name="Tests" full_name="Backend\Core\Utilities\Tests"/>
      </namespace>
    </namespace>
    <namespace name="Interfaces" full_name="Backend\Interfaces">
      <namespace name="Tests" full_name="Backend\Interfaces\Tests"/>
    </namespace>
    <namespace name="Modules" full_name="Backend\Modules">
      <namespace name="Bindings" full_name="Backend\Modules\Bindings"/>
      <namespace name="EventDispatcher" full_name="Backend\Modules\EventDispatcher"/>
      <namespace name="File" full_name="Backend\Modules\File"/>
      <namespace name="Storage" full_name="Backend\Modules\Storage"/>
    </namespace>
  </namespace>
  <namespace name="Tests" full_name="Tests"/>
  <namespace name="global" full_name="global"/>
  <marker count="27">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
